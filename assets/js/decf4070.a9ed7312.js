(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{397:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return c})),r.d(e,"metadata",(function(){return s})),r.d(e,"toc",(function(){return l})),r.d(e,"default",(function(){return h}));var a=r(3),o=r(7),i=(r(0),r(454)),c={title:"Struct tauri::PhysicalPosition",sidebar_label:"struct.PhysicalPosition",custom_edit_url:null},s={unversionedId:"api/rust/tauri/struct.PhysicalPosition",id:"api/rust/tauri/struct.PhysicalPosition",isDocsHomePage:!1,title:"Struct tauri::PhysicalPosition",description:"`rs",source:"@site/docs/en/api/rust/tauri/struct.PhysicalPosition.md",sourceDirName:"api/rust/tauri",slug:"/api/rust/tauri/struct.PhysicalPosition",permalink:"/en/docs/api/rust/tauri/struct.PhysicalPosition",editUrl:null,version:"current",sidebar_label:"struct.PhysicalPosition",frontMatter:{title:"Struct tauri::PhysicalPosition",sidebar_label:"struct.PhysicalPosition",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::PathResolver",permalink:"/en/docs/api/rust/tauri/struct.PathResolver"},next:{title:"Struct tauri::PhysicalSize",permalink:"/en/docs/api/rust/tauri/struct.PhysicalSize"}},l=[{value:"Fields",id:"fields",children:[]},{value:"Implementations",id:"implementations",children:[{value:"impl&lt;P&gt; struct tauri::PhysicalPosition&lt;P&gt; where P: trait tauri::Pixel,",id:"implp-struct-tauriphysicalpositionp-where-p-trait-tauripixel",children:[]}]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl&lt;P&gt; trait core::clone::Clone for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::clone::Clone,",id:"implp-trait-corecloneclone-for-struct-tauriphysicalpositionp-where-p-trait-corecloneclone",children:[]},{value:"impl&lt;P&gt; trait core::fmt::Debug for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::fmt::Debug,",id:"implp-trait-corefmtdebug-for-struct-tauriphysicalpositionp-where-p-trait-corefmtdebug",children:[]},{value:"impl&lt;P&gt; trait core::default::Default for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::default::Default,",id:"implp-trait-coredefaultdefault-for-struct-tauriphysicalpositionp-where-p-trait-coredefaultdefault",children:[]},{value:"impl&lt;&#39;de, P&gt; trait serde::de::Deserialize&lt;&#39;de&gt; for struct tauri::PhysicalPosition&lt;P&gt; where P: trait serde::de::Deserialize&lt;&#39;de&gt;,",id:"implde-p-trait-serdededeserializede-for-struct-tauriphysicalpositionp-where-p-trait-serdededeserializede",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;PhysicalPositionWrapper&lt;T&gt;&gt; for struct tauri::PhysicalPosition&lt;T&gt;",id:"implt-trait-coreconvertfromphysicalpositionwrappert-for-struct-tauriphysicalpositiont",children:[]},{value:"impl&lt;P&gt; trait core::hash::Hash for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::hash::Hash,",id:"implp-trait-corehashhash-for-struct-tauriphysicalpositionp-where-p-trait-corehashhash",children:[]},{value:"impl&lt;P&gt; trait core::cmp::PartialEq&lt;struct tauri::PhysicalPosition&lt;P&gt;&gt; for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::cmp::PartialEq&lt;P&gt;,",id:"implp-trait-corecmppartialeqstruct-tauriphysicalpositionp-for-struct-tauriphysicalpositionp-where-p-trait-corecmppartialeqp",children:[]},{value:"impl&lt;P&gt; trait serde::ser::Serialize for struct tauri::PhysicalPosition&lt;P&gt; where P: trait serde::ser::Serialize,",id:"implp-trait-serdeserserialize-for-struct-tauriphysicalpositionp-where-p-trait-serdeserserialize",children:[]},{value:"impl&lt;P&gt; trait core::marker::Copy for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::marker::Copy,",id:"implp-trait-coremarkercopy-for-struct-tauriphysicalpositionp-where-p-trait-coremarkercopy",children:[]},{value:"impl&lt;P&gt; trait core::cmp::Eq for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::cmp::Eq,",id:"implp-trait-corecmpeq-for-struct-tauriphysicalpositionp-where-p-trait-corecmpeq",children:[]},{value:"impl&lt;P&gt; trait core::marker::StructuralEq for struct tauri::PhysicalPosition&lt;P&gt;",id:"implp-trait-coremarkerstructuraleq-for-struct-tauriphysicalpositionp",children:[]},{value:"impl&lt;P&gt; trait core::marker::StructuralPartialEq for struct tauri::PhysicalPosition&lt;P&gt;",id:"implp-trait-coremarkerstructuralpartialeq-for-struct-tauriphysicalpositionp",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;P&gt; trait std::panic::RefUnwindSafe for struct tauri::PhysicalPosition&lt;P&gt; where P: trait std::panic::RefUnwindSafe,",id:"implp-trait-stdpanicrefunwindsafe-for-struct-tauriphysicalpositionp-where-p-trait-stdpanicrefunwindsafe",children:[]},{value:"impl&lt;P&gt; trait core::marker::Send for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::marker::Send,",id:"implp-trait-coremarkersend-for-struct-tauriphysicalpositionp-where-p-trait-coremarkersend",children:[]},{value:"impl&lt;P&gt; trait core::marker::Sync for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::marker::Sync,",id:"implp-trait-coremarkersync-for-struct-tauriphysicalpositionp-where-p-trait-coremarkersync",children:[]},{value:"impl&lt;P&gt; trait core::marker::Unpin for struct tauri::PhysicalPosition&lt;P&gt; where P: trait core::marker::Unpin,",id:"implp-trait-coremarkerunpin-for-struct-tauriphysicalpositionp-where-p-trait-coremarkerunpin",children:[]},{value:"impl&lt;P&gt; trait std::panic::UnwindSafe for struct tauri::PhysicalPosition&lt;P&gt; where P: trait std::panic::UnwindSafe,",id:"implp-trait-stdpanicunwindsafe-for-struct-tauriphysicalpositionp-where-p-trait-stdpanicunwindsafe",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;&#39;de, D, R&gt; trait tauri::command::CommandArg&lt;&#39;de, R&gt; for D where R: trait tauri::Runtime, D: trait serde::de::Deserialize&lt;&#39;de&gt;,goto source code",id:"implde-d-r-trait-tauricommandcommandargde-r-for-d-where-r-trait-tauriruntime-d-trait-serdededeserializedegoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::borrow::ToOwned for T where T: trait core::clone::Clone,goto source code",id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]},{value:"impl&lt;T&gt; trait serde::de::DeserializeOwned for T where T: for&lt;&#39;de&gt; trait serde::de::Deserialize&lt;&#39;de&gt;,",id:"implt-trait-serdededeserializeowned-for-t-where-t-forde-trait-serdededeserializede",children:[]}]}],n={toc:l};function h(t){var e=t.components,r=Object(o.a)(t,["components"]);return Object(i.b)("wrapper",Object(a.a)({},n,r,{components:e,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rs"},"pub struct PhysicalPosition<P> {\n    pub x: P,\n    pub y: P,\n}\n")),Object(i.b)("p",null,"Expand description"),Object(i.b)("p",null,"A position represented in physical pixels."),Object(i.b)("h2",{id:"fields"},"Fields"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"x: P")),Object(i.b)("p",null,"Vertical axis value."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"y: P")),Object(i.b)("p",null,"Horizontal axis value."),Object(i.b)("h2",{id:"implementations"},"Implementations"),Object(i.b)("h3",{id:"implp-struct-tauriphysicalpositionp-where-p-trait-tauripixel"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Pixel",title:"trait tauri::Pixel"},"Pixel"),","),Object(i.b)("h4",{id:"pub-fn-to_logicalxself-scale_factor-f64---struct-taurilogicalpositionx-where-x-trait-tauripixel"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.to_logical"},"to_logical"),"<","X>(self, scale_factor: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.f64.html"},"f64"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.LogicalPosition",title:"struct tauri::LogicalPosition"},"LogicalPosition"),"<","X> where X: ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/trait.Pixel",title:"trait tauri::Pixel"},"Pixel"),","),Object(i.b)("p",null,"Converts the physical position to a logical one, using the scale factor."),Object(i.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(i.b)("h3",{id:"implp-trait-corecloneclone-for-struct-tauriphysicalpositionp-where-p-trait-corecloneclone"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),","),Object(i.b)("h4",{id:"pub-fn-cloneself---struct-tauriphysicalpositionp"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"clone"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>"),Object(i.b)("p",null,"Returns a copy of the value. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"Read more")),Object(i.b)("h4",{id:"fn-clone_frommut-self-source-self100goto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"clone_from"),"(&mut self, source: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self)1.0.0",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/clone.rs.html#130",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs copy-assignment from ",Object(i.b)("inlineCode",{parentName:"p"},"source"),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"Read more")),Object(i.b)("h3",{id:"implp-trait-corefmtdebug-for-struct-tauriphysicalpositionp-where-p-trait-corefmtdebug"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug"),","),Object(i.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterror"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">"),Object(i.b)("p",null,"Formats the value using the given formatter. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(i.b)("h3",{id:"implp-trait-coredefaultdefault-for-struct-tauriphysicalpositionp-where-p-trait-coredefaultdefault"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default"),","),Object(i.b)("h4",{id:"pub-fn-default---struct-tauriphysicalpositionp"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"default"),"() -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>"),Object(i.b)("p",null,"Returns the \u201cdefault value\u201d for a type. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"Read more")),Object(i.b)("h3",{id:"implde-p-trait-serdededeserializede-for-struct-tauriphysicalpositionp-where-p-trait-serdededeserializede"},"impl","<","'de, P> ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de>,"),Object(i.b)("h4",{id:"pub-fn-deserialize__d-__deserializer-__d----enum-coreresultresultstruct-tauriphysicalpositionp-__d-as-trait-serdededeserializerdetype-serdededeserializererror-where-__d-trait-serdededeserializerde"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html#tymethod.deserialize"},"deserialize"),"<","_","_","D>( ","_","_","deserializer: ","_","_","D ) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>, ","<","_","_","D as ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserializer.html",title:"trait serde::de::Deserializer"},"Deserializer"),"<","'de>>::",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserializer.html#associatedtype.Error",title:"type serde::de::Deserializer::Error"},"Error"),"> where ","_","_","D: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserializer.html",title:"trait serde::de::Deserializer"},"Deserializer"),"<","'de>,"),Object(i.b)("p",null,"Deserialize this value from the given Serde deserializer. ",Object(i.b)("a",{parentName:"p",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html#tymethod.deserialize"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreconvertfromphysicalpositionwrappert-for-struct-tauriphysicalpositiont"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","PhysicalPositionWrapper","<","T>> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","T>"),Object(i.b)("h4",{id:"pub-fn-fromposition-physicalpositionwrappert---struct-tauriphysicalpositiont"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(position: PhysicalPositionWrapper","<","T>) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","T>"),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implp-trait-corehashhash-for-struct-tauriphysicalpositionp-where-p-trait-corehashhash"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html",title:"trait core::hash::Hash"},"Hash")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html",title:"trait core::hash::Hash"},"Hash"),","),Object(i.b)("h4",{id:"pub-fn-hash__hself-state-mut__h-where-__h-trait-corehashhasher"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"hash"),"<","_","_","H>(&self, state: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"_","_","H) where ","_","_","H: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),","),Object(i.b)("p",null,"Feeds this value into the given ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(i.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"Read more")),Object(i.b)("h4",{id:"fn-hash_slicehdata-self-state-muth-where-h-trait-corehashhasher130goto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"hash_slice"),"<","H>(data: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&","[","Self","]"),", state: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"H) where H: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),",1.3.0",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/hash/mod.rs.html#211-213",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Feeds a slice of this type into the given ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(i.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"Read more")),Object(i.b)("h3",{id:"implp-trait-corecmppartialeqstruct-tauriphysicalpositionp-for-struct-tauriphysicalpositionp-where-p-trait-corecmppartialeqp"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<","P>,"),Object(i.b)("h4",{id:"pub-fn-eqself-other-struct-tauriphysicalpositionp---bool"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")),Object(i.b)("p",null,"This method tests for ",Object(i.b)("inlineCode",{parentName:"p"},"self")," and ",Object(i.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(i.b)("inlineCode",{parentName:"p"},"=="),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(i.b)("h4",{id:"pub-fn-neself-other-struct-tauriphysicalpositionp---bool"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: &",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")),Object(i.b)("p",null,"This method tests for ",Object(i.b)("inlineCode",{parentName:"p"},"!="),"."),Object(i.b)("h3",{id:"implp-trait-serdeserserialize-for-struct-tauriphysicalpositionp-where-p-trait-serdeserserialize"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize"),","),Object(i.b)("h4",{id:"pub-fn-serialize__s-self-__serializer-__s----enum-coreresultresult__s-as-trait-serdeserserializertype-serdeserserializerok-__s-as-trait-serdeserserializertype-serdeserserializererror-where-__s-trait-serdeserserializer"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html#tymethod.serialize"},"serialize"),"<","_","_","S>( &self, ","_","_","serializer: ","_","_","S ) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","<","_","_","S as ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html",title:"trait serde::ser::Serializer"},"Serializer"),">::",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html#associatedtype.Ok",title:"type serde::ser::Serializer::Ok"},"Ok"),", ","<","_","_","S as ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html",title:"trait serde::ser::Serializer"},"Serializer"),">::",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html#associatedtype.Error",title:"type serde::ser::Serializer::Error"},"Error"),"> where ","_","_","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html",title:"trait serde::ser::Serializer"},"Serializer"),","),Object(i.b)("p",null,"Serialize this value into the given Serde serializer. ",Object(i.b)("a",{parentName:"p",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html#tymethod.serialize"},"Read more")),Object(i.b)("h3",{id:"implp-trait-coremarkercopy-for-struct-tauriphysicalpositionp-where-p-trait-coremarkercopy"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Copy.html",title:"trait core::marker::Copy"},"Copy")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Copy.html",title:"trait core::marker::Copy"},"Copy"),","),Object(i.b)("h3",{id:"implp-trait-corecmpeq-for-struct-tauriphysicalpositionp-where-p-trait-corecmpeq"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Eq.html",title:"trait core::cmp::Eq"},"Eq")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Eq.html",title:"trait core::cmp::Eq"},"Eq"),","),Object(i.b)("h3",{id:"implp-trait-coremarkerstructuraleq-for-struct-tauriphysicalpositionp"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralEq.html",title:"trait core::marker::StructuralEq"},"StructuralEq")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>"),Object(i.b)("h3",{id:"implp-trait-coremarkerstructuralpartialeq-for-struct-tauriphysicalpositionp"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralPartialEq.html",title:"trait core::marker::StructuralPartialEq"},"StructuralPartialEq")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P>"),Object(i.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(i.b)("h3",{id:"implp-trait-stdpanicrefunwindsafe-for-struct-tauriphysicalpositionp-where-p-trait-stdpanicrefunwindsafe"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe"),","),Object(i.b)("h3",{id:"implp-trait-coremarkersend-for-struct-tauriphysicalpositionp-where-p-trait-coremarkersend"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send"),","),Object(i.b)("h3",{id:"implp-trait-coremarkersync-for-struct-tauriphysicalpositionp-where-p-trait-coremarkersync"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),","),Object(i.b)("h3",{id:"implp-trait-coremarkerunpin-for-struct-tauriphysicalpositionp-where-p-trait-coremarkerunpin"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin"),","),Object(i.b)("h3",{id:"implp-trait-stdpanicunwindsafe-for-struct-tauriphysicalpositionp-where-p-trait-stdpanicunwindsafe"},"impl","<","P> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<","P> where P: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe"),","),Object(i.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(i.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the ",Object(i.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(i.b)("inlineCode",{parentName:"p"},"self"),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Immutably borrows from an owned value. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Mutably borrows from an owned value. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(i.b)("h3",{id:"implde-d-r-trait-tauricommandcommandargde-r-for-d-where-r-trait-tauriruntime-d-trait-serdededeserializedegoto-source-code"},"impl","<","'de, D, R> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/command/trait.CommandArg",title:"trait tauri::command::CommandArg"},"CommandArg"),"<","'de, R> for D where R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),", D: ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de>,",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/command.rs#51-56",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-from_commandstruct-tauricommandcommanditemde-r---enum-coreresultresultd-struct-tauriinvokeerrorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/command/trait.CommandArg#tymethod.from_command"},"from_command"),"(",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/command/struct.CommandItem",title:"struct tauri::command::CommandItem"},"CommandItem"),"<","'de, R>) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","D, ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.InvokeError",title:"struct tauri::InvokeError"},"InvokeError"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/command.rs#52-55",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Derives an instance of ",Object(i.b)("inlineCode",{parentName:"p"},"Self")," from the ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/command/struct.CommandItem",title:"CommandItem"},Object(i.b)("inlineCode",{parentName:"a"},"CommandItem")),". ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/command/trait.CommandArg#tymethod.from_command"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html",title:"trait alloc::borrow::ToOwned"},"ToOwned")," for T where T: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#84-96",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"type-owned--t"},"type ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned"},"Owned")," = T"),Object(i.b)("p",null,"The resulting type after obtaining ownership."),Object(i.b)("h4",{id:"pub-fn-to_ownedself---tgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"to_owned"),"(&self) -> T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#89",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Creates owned data from borrowed data, usually by cloning. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"Read more")),Object(i.b)("h4",{id:"pub-fn-clone_intoself-target-muttgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"clone_into"),"(&self, target: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T)",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#93",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(i.b)("inlineCode",{parentName:"p"},"toowned_clone_into"),")"),Object(i.b)("p",null,"recently added"),Object(i.b)("p",null,"Uses borrowed data to replace owned data, usually by cloning. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"Read more")),Object(i.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(i.b)("p",null,"The type returned in the event of a conversion error."),Object(i.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(i.b)("p",null,"The type returned in the event of a conversion error."),Object(i.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(i.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"),Object(i.b)("h3",{id:"implt-trait-serdededeserializeowned-for-t-where-t-forde-trait-serdededeserializede"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.DeserializeOwned.html",title:"trait serde::de::DeserializeOwned"},"DeserializeOwned")," for T where T: for","<","'de> ",Object(i.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de>,"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://docs.rs/serde/1.0.129/src/serde/de/mod.rs.html#603",title:"goto source code"},"[","src","]")))}h.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return d}));var a=r(0),o=r.n(a);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?c(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,a,o=function(t,e){if(null==t)return{};var r,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var n=o.a.createContext({}),h=function(t){var e=o.a.useContext(n),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},p=function(t){var e=h(t.components);return o.a.createElement(n.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.a.createElement(o.a.Fragment,{},e)}},m=o.a.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,n=l(t,["components","mdxType","originalType","parentName"]),p=h(r),m=a,d=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return r?o.a.createElement(d,s(s({ref:e},n),{},{components:r})):o.a.createElement(d,s({ref:e},n))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,c=new Array(i);c[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,c[1]=s;for(var n=2;n<i;n++)c[n]=r[n];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);