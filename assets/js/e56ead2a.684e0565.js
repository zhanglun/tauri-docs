(window.webpackJsonp=window.webpackJsonp||[]).push([[327],{404:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return o})),r.d(e,"metadata",(function(){return n})),r.d(e,"toc",(function(){return c})),r.d(e,"default",(function(){return u}));var a=r(3),i=(r(0),r(454));const o={title:"Struct tauri::window::Window",sidebar_label:"struct.Window",custom_edit_url:null},n={unversionedId:"api/rust/tauri/window/struct.Window",id:"api/rust/tauri/window/struct.Window",isDocsHomePage:!1,title:"Struct tauri::window::Window",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/window/struct.Window.md",sourceDirName:"api/rust/tauri/window",slug:"/api/rust/tauri/window/struct.Window",permalink:"/tauri-docs/docs/api/rust/tauri/window/struct.Window",editUrl:null,version:"current",sidebar_label:"struct.Window",frontMatter:{title:"Struct tauri::window::Window",sidebar_label:"struct.Window",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::window::Monitor",permalink:"/tauri-docs/docs/api/rust/tauri/window/struct.Monitor"},next:{title:"Enum tauri::Error",permalink:"/tauri-docs/docs/api/rust/tauri/enum.Error"}},c=[{value:"Implementations",id:"implementations",children:[{value:"impl&lt;R: trait tauri::Runtime&gt; struct tauri::window::Window&lt;R&gt;goto source code",id:"implr-trait-tauriruntime-struct-tauriwindowwindowrgoto-source-code",children:[]}]},{value:"Panics",id:"panics",children:[]},{value:"Panics",id:"panics-1",children:[]},{value:"Panics",id:"panics-2",children:[]},{value:"Panics",id:"panics-3",children:[]},{value:"Panics",id:"panics-4",children:[]},{value:"Panics",id:"panics-5",children:[]},{value:"Panics",id:"panics-6",children:[]},{value:"Panics",id:"panics-7",children:[]},{value:"Panics",id:"panics-8",children:[]},{value:"Panics",id:"panics-9",children:[]},{value:"Platform-specific",id:"platform-specific",children:[]},{value:"Panics",id:"panics-10",children:[]},{value:"Platform-specific",id:"platform-specific-1",children:[]},{value:"Panics",id:"panics-11",children:[]},{value:"Platform-specific",id:"platform-specific-2",children:[]},{value:"Panics",id:"panics-12",children:[]},{value:"Platform-specific",id:"platform-specific-3",children:[]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl&lt;R: trait tauri::Runtime&gt; trait core::clone::Clone for struct tauri::window::Window&lt;R&gt;goto source code",id:"implr-trait-tauriruntime-trait-corecloneclone-for-struct-tauriwindowwindowrgoto-source-code",children:[]},{value:"impl&lt;&#39;de, R: trait tauri::Runtime&gt; trait tauri::command::CommandArg&lt;&#39;de, R&gt; for struct tauri::window::Window&lt;R&gt;goto source code",id:"implde-r-trait-tauriruntime-trait-tauricommandcommandargde-r-for-struct-tauriwindowwindowrgoto-source-code",children:[]},{value:"impl&lt;R: trait core::fmt::Debug + trait tauri::Runtime&gt; trait core::fmt::Debug for struct tauri::window::Window&lt;R&gt;goto source code",id:"implr-trait-corefmtdebug--trait-tauriruntime-trait-corefmtdebug-for-struct-tauriwindowwindowrgoto-source-code",children:[]},{value:"impl&lt;R: trait tauri::Runtime&gt; trait core::hash::Hash for struct tauri::window::Window&lt;R&gt;goto source code",id:"implr-trait-tauriruntime-trait-corehashhash-for-struct-tauriwindowwindowrgoto-source-code",children:[]},{value:"impl&lt;R: trait tauri::Runtime&gt; trait tauri::Manager&lt;R&gt; for struct tauri::window::Window&lt;R&gt;goto source code",id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriwindowwindowrgoto-source-code",children:[]},{value:"impl&lt;R: trait tauri::Runtime&gt; trait core::cmp::PartialEq&lt;struct tauri::window::Window&lt;R&gt;&gt; for struct tauri::window::Window&lt;R&gt;goto source code",id:"implr-trait-tauriruntime-trait-corecmppartialeqstruct-tauriwindowwindowr-for-struct-tauriwindowwindowrgoto-source-code",children:[]},{value:"impl&lt;R: trait tauri::Runtime&gt; trait core::cmp::Eq for struct tauri::window::Window&lt;R&gt;",id:"implr-trait-tauriruntime-trait-corecmpeq-for-struct-tauriwindowwindowr",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;R = struct tauri::Wry&gt; !trait std::panic::RefUnwindSafe for struct tauri::window::Window&lt;R&gt;",id:"implr--struct-tauriwry-trait-stdpanicrefunwindsafe-for-struct-tauriwindowwindowr",children:[]},{value:"impl&lt;R&gt; trait core::marker::Send for struct tauri::window::Window&lt;R&gt;",id:"implr-trait-coremarkersend-for-struct-tauriwindowwindowr",children:[]},{value:"impl&lt;R&gt; trait core::marker::Sync for struct tauri::window::Window&lt;R&gt; where &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::ClipboardManager: trait core::marker::Sync, &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::Dispatcher: trait core::marker::Sync, &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::GlobalShortcutManager: trait core::marker::Sync, &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::Handle: trait core::marker::Sync,",id:"implr-trait-coremarkersync-for-struct-tauriwindowwindowr-where-r-as-trait-tauriruntimetype-tauriruntimeclipboardmanager-trait-coremarkersync-r-as-trait-tauriruntimetype-tauriruntimedispatcher-trait-coremarkersync-r-as-trait-tauriruntimetype-tauriruntimeglobalshortcutmanager-trait-coremarkersync-r-as-trait-tauriruntimetype-tauriruntimehandle-trait-coremarkersync",children:[]},{value:"impl&lt;R&gt; trait core::marker::Unpin for struct tauri::window::Window&lt;R&gt; where &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::ClipboardManager: trait core::marker::Unpin, &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::Dispatcher: trait core::marker::Unpin, &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::GlobalShortcutManager: trait core::marker::Unpin, &lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::Handle: trait core::marker::Unpin,",id:"implr-trait-coremarkerunpin-for-struct-tauriwindowwindowr-where-r-as-trait-tauriruntimetype-tauriruntimeclipboardmanager-trait-coremarkerunpin-r-as-trait-tauriruntimetype-tauriruntimedispatcher-trait-coremarkerunpin-r-as-trait-tauriruntimetype-tauriruntimeglobalshortcutmanager-trait-coremarkerunpin-r-as-trait-tauriruntimetype-tauriruntimehandle-trait-coremarkerunpin",children:[]},{value:"impl&lt;R = struct tauri::Wry&gt; !trait std::panic::UnwindSafe for struct tauri::window::Window&lt;R&gt;",id:"implr--struct-tauriwry-trait-stdpanicunwindsafe-for-struct-tauriwindowwindowr",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::borrow::ToOwned for T where T: trait core::clone::Clone,goto source code",id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],s={toc:c};function u({components:t,...e}){return Object(i.b)("wrapper",Object(a.a)({},s,e,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Window<R:\xa0Runtime\xa0=\xa0Wry> { /* fields omitted */ }\n")),Object(i.b)("p",null,"Expand description"),Object(i.b)("p",null,"A webview window managed by Tauri."),Object(i.b)("p",null,"This type also implements ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../trait.Manager",title:"Manager"},Object(i.b)("inlineCode",{parentName:"a"},"Manager"))," which allows you to manage other windows attached to the same application."),Object(i.b)("h2",{id:"implementations"},"Implementations"),Object(i.b)("h3",{id:"implr-trait-tauriruntime-struct-tauriwindowwindowrgoto-source-code"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#143-723",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-create_windowf-mut-self-label-struct-allocstringstring-url-enum-tauriwindowurl-setup-f----type-tauriresultstruct-tauriwindowwindowr-where-f-trait-coreopsfunctionfnoncertype-tauriruntimedispatcher-as-dispatchwindowbuilder-struct-tauriwebviewattributes---rtype-tauriruntimedispatcher-as-dispatchwindowbuilder-struct-tauriwebviewattributesgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.create_window"},"create_window"),"<","F>( &mut self, label: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),", url: ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.WindowUrl",title:"enum tauri::WindowUrl"},"WindowUrl"),", setup: F ) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>> where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnOnce.html",title:"trait core::ops::function::FnOnce"},"FnOnce"),"(","<","R::",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher")," as Dispatch>::WindowBuilder, ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.WebviewAttributes",title:"struct tauri::WebviewAttributes"},"WebviewAttributes"),") -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),"<","R::",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher")," as Dispatch>::WindowBuilder, ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.WebviewAttributes",title:"struct tauri::WebviewAttributes"},"WebviewAttributes"),Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")"),",",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#158-182",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Creates a new webview window."),Object(i.b)("h4",{id:"pub-fn-labelself---strgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.label"},"label"),"(&self) -> &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#237-239",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"The label of this window."),Object(i.b)("h4",{id:"pub-fn-emits-trait-serdeserserializeself-event-str-payload-s---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.emit"},"emit"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize"),">(&self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", payload: S) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#242-251",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Emits an event to the current window."),Object(i.b)("h4",{id:"pub-fn-emit_otherss-trait-serdeserserialize--trait-corecloneclone-self-event-str-payload-s----type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.emit_others"},"emit_others"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),">( &self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", payload: S ) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#254-256",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Emits an event on all windows except this one."),Object(i.b)("h4",{id:"pub-fn-listenfself-event-impl-trait-coreconvertintostruct-allocstringstring-handler-f---eventhandler-where-f-trait-coreopsfunctionfnevent--trait-coremarkersend--staticgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.listen"},"listen"),"<","F>(&self, event: impl ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, handler: F) -> EventHandler where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(Event) + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#259-265",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Listen to an event on this window."),Object(i.b)("h4",{id:"pub-fn-oncefself-event-impl-trait-coreconvertintostruct-allocstringstring-handler-f---eventhandler-where-f-trait-coreopsfunctionfnevent--trait-coremarkersend--staticgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.once"},"once"),"<","F>(&self, event: impl ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, handler: F) -> EventHandler where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(Event) + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#268-274",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Listen to a an event on this window a single time."),Object(i.b)("h4",{id:"pub-fn-triggerself-event-str-data-enum-coreoptionoptionstruct-allocstringstringgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.trigger"},"trigger"),"(&self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", data: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#277-280",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Triggers an event on this window."),Object(i.b)("h4",{id:"pub-fn-evalself-js-str---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.eval"},"eval"),"(&self, js: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#283-285",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Evaluates JavaScript on this window."),Object(i.b)("h4",{id:"pub-fn-on_window_eventf-trait-coreopsfunctionfnenum-tauriwindowevent--trait-coremarkersend--staticself-f-fgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.on_window_event"},"on_window_event"),"<","F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(&",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.WindowEvent",title:"enum tauri::WindowEvent"},"WindowEvent"),") + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static>(&self, f: F)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#288-290",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Registers a window event listener."),Object(i.b)("h4",{id:"pub-fn-on_menu_eventf-trait-coreopsfunctionfnstruct-tauriwindowmenuevent--trait-coremarkersend--staticself-f-f---struct-uuiduuidgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.on_menu_event"},"on_menu_event"),"<","F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.MenuEvent",title:"struct tauri::window::MenuEvent"},"MenuEvent"),") + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static>(&self, f: F) -> ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/uuid/0.8.2/uuid/struct.Uuid.html",title:"struct uuid::Uuid"},"Uuid"),Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#293-300",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Registers a menu event listener."),Object(i.b)("h4",{id:"pub-fn-menu_handleself---struct-tauriwindowmenuhandlergoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.menu_handle"},"menu_handle"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.MenuHandle",title:"struct tauri::window::MenuHandle"},"MenuHandle"),"<","R>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#305-310",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets a handle to the window menu."),Object(i.b)("h4",{id:"pub-fn-scale_factorself---type-tauriresultf64goto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.scale_factor"},"scale_factor"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.f64.html"},"f64"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#320-322",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the scale factor that can be used to map logical pixels to physical pixels, and vice versa."),Object(i.b)("h2",{id:"panics"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-inner_positionself---type-tauriresultstruct-tauriphysicalpositioni32goto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.inner_position"},"inner_position"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.i32.html"},"i32"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#332-334",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the position of the top-left hand corner of the window\u2019s client area relative to the top-left hand corner of the desktop."),Object(i.b)("h2",{id:"panics-1"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-outer_positionself---type-tauriresultstruct-tauriphysicalpositioni32goto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.outer_position"},"outer_position"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.PhysicalPosition",title:"struct tauri::PhysicalPosition"},"PhysicalPosition"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.i32.html"},"i32"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#344-346",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the position of the top-left hand corner of the window relative to the top-left hand corner of the desktop."),Object(i.b)("h2",{id:"panics-2"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-inner_sizeself---type-tauriresultstruct-tauriphysicalsizeu32goto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.inner_size"},"inner_size"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.PhysicalSize",title:"struct tauri::PhysicalSize"},"PhysicalSize"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u32.html"},"u32"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#358-360",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the physical size of the window\u2019s client area."),Object(i.b)("p",null,"The client area is the content of the window, excluding the title bar and borders."),Object(i.b)("h2",{id:"panics-3"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-outer_sizeself---type-tauriresultstruct-tauriphysicalsizeu32goto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.outer_size"},"outer_size"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.PhysicalSize",title:"struct tauri::PhysicalSize"},"PhysicalSize"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u32.html"},"u32"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#372-374",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the physical size of the entire window."),Object(i.b)("p",null,"These dimensions include the title bar and borders. If you don\u2019t want that (and you usually don\u2019t), use inner_size instead."),Object(i.b)("h2",{id:"panics-4"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-is_fullscreenself---type-tauriresultboolgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_fullscreen"},"is_fullscreen"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#384-386",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the window\u2019s current fullscreen state."),Object(i.b)("h2",{id:"panics-5"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-is_maximizedself---type-tauriresultboolgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_maximized"},"is_maximized"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#396-398",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the window\u2019s current maximized state."),Object(i.b)("h2",{id:"panics-6"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-is_decoratedself---type-tauriresultboolgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_decorated"},"is_decorated"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#408-410",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the window\u2019s current decoration state."),Object(i.b)("h2",{id:"panics-7"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-is_resizableself---type-tauriresultboolgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_resizable"},"is_resizable"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#420-422",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the window\u2019s current resizable state."),Object(i.b)("h2",{id:"panics-8"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-is_visibleself---type-tauriresultboolgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_visible"},"is_visible"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#432-434",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the window\u2019s current vibility state."),Object(i.b)("h2",{id:"panics-9"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-current_monitorself---type-tauriresultenum-coreoptionoptionstruct-tauriwindowmonitorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.current_monitor"},"current_monitor"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Monitor",title:"struct tauri::window::Monitor"},"Monitor"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#450-457",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the monitor on which the window currently resides."),Object(i.b)("p",null,"Returns None if current monitor can\u2019t be detected."),Object(i.b)("h2",{id:"platform-specific"},Object(i.b)("a",{parentName:"h2",href:"/docs/api/rust/tauri/about:blank#platform-specific"},"Platform-specific")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Linux:")," Unsupported")),Object(i.b)("h2",{id:"panics-10"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-primary_monitorself---type-tauriresultenum-coreoptionoptionstruct-tauriwindowmonitorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.primary_monitor"},"primary_monitor"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Monitor",title:"struct tauri::window::Monitor"},"Monitor"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#473-480",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the primary monitor of the system."),Object(i.b)("p",null,"Returns None if it can\u2019t identify any monitor as a primary one."),Object(i.b)("h2",{id:"platform-specific-1"},Object(i.b)("a",{parentName:"h2",href:"/docs/api/rust/tauri/about:blank#platform-specific-1"},"Platform-specific")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Linux:")," Unsupported")),Object(i.b)("h2",{id:"panics-11"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-available_monitorsself---type-tauriresultstruct-allocvecvecstruct-tauriwindowmonitorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.available_monitors"},"available_monitors"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/vec/struct.Vec.html",title:"struct alloc::vec::Vec"},"Vec"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Monitor",title:"struct tauri::window::Monitor"},"Monitor"),">>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#494-501",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the list of all the monitors available on the system."),Object(i.b)("h2",{id:"platform-specific-2"},Object(i.b)("a",{parentName:"h2",href:"/docs/api/rust/tauri/about:blank#platform-specific-2"},"Platform-specific")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Linux:")," Unsupported")),Object(i.b)("h2",{id:"panics-12"},"Panics"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Panics if the event loop is not running yet, usually when called on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.Builder#method.setup"},Object(i.b)("inlineCode",{parentName:"a"},"setup"))," closure."),Object(i.b)("li",{parentName:"ul"},"Panics when called on the main thread, usually on the ",Object(i.b)("a",{parentName:"li",href:"/docs/api/rust/tauri/../struct.App#method.run"},Object(i.b)("inlineCode",{parentName:"a"},"run"))," closure.")),Object(i.b)("p",null,"You can spawn a task to use the API using ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../async_runtime/fn.spawn",title:"crate::async_runtime::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"crate::async_runtime::spawn"))," or ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/thread/fn.spawn.html",title:"std::thread::spawn"},Object(i.b)("inlineCode",{parentName:"a"},"std::thread::spawn"))," to prevent the panic."),Object(i.b)("h4",{id:"pub-fn-gtk_windowself---type-tauriresultapplicationwindowgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.gtk_window"},"gtk_window"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<","ApplicationWindow>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#543-545",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns the ",Object(i.b)("inlineCode",{parentName:"p"},"ApplicatonWindow")," from gtk crate that is used by this window."),Object(i.b)("p",null,"Note that this can only be used on the main thread."),Object(i.b)("h4",{id:"pub-fn-centerself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.center"},"center"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#550-552",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Centers the window."),Object(i.b)("h4",{id:"pub-fn-request_user_attention-self-request_type-enum-coreoptionoptionenum-tauriuserattentiontype----type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.request_user_attention"},"request_user_attention"),"( &self, request_type: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.UserAttentionType",title:"enum tauri::UserAttentionType"},"UserAttentionType"),"> ) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#564-573",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Requests user attention to the window, this has no effect if the application is already focused. How requesting for user attention manifests is platform dependent, see ",Object(i.b)("inlineCode",{parentName:"p"},"UserAttentionType")," for details."),Object(i.b)("p",null,"Providing ",Object(i.b)("inlineCode",{parentName:"p"},"None")," will unset the request for user attention. Unsetting the request for user attention might not be done automatically by the WM when the window receives input."),Object(i.b)("h2",{id:"platform-specific-3"},Object(i.b)("a",{parentName:"h2",href:"/docs/api/rust/tauri/about:blank#platform-specific-3"},"Platform-specific")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"macOS:")," ",Object(i.b)("inlineCode",{parentName:"li"},"None")," has no effect.")),Object(i.b)("h4",{id:"pub-fn-printself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.print"},"print"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#578-580",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Opens the dialog to prints the contents of the webview. Currently only supported on macOS on ",Object(i.b)("inlineCode",{parentName:"p"},"wry"),". ",Object(i.b)("inlineCode",{parentName:"p"},"window.print()")," works on all platforms."),Object(i.b)("h4",{id:"pub-fn-set_resizableself-resizable-bool---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_resizable"},"set_resizable"),"(&self, resizable: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#583-589",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Determines if this window should be resizable."),Object(i.b)("h4",{id:"pub-fn-set_titleself-title-str---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_title"},"set_title"),"(&self, title: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#592-598",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Set this window\u2019s title."),Object(i.b)("h4",{id:"pub-fn-maximizeself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.maximize"},"maximize"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#601-603",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Maximizes this window."),Object(i.b)("h4",{id:"pub-fn-unmaximizeself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.unmaximize"},"unmaximize"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#606-608",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Un-maximizes this window."),Object(i.b)("h4",{id:"pub-fn-minimizeself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.minimize"},"minimize"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#611-613",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Minimizes this window."),Object(i.b)("h4",{id:"pub-fn-unminimizeself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.unminimize"},"unminimize"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#616-618",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Un-minimizes this window."),Object(i.b)("h4",{id:"pub-fn-showself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.show"},"show"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#621-623",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Show this window."),Object(i.b)("h4",{id:"pub-fn-hideself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.hide"},"hide"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#626-628",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Hide this window."),Object(i.b)("h4",{id:"pub-fn-closeself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.close"},"close"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#631-633",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Closes this window."),Object(i.b)("h4",{id:"pub-fn-set_decorationsself-decorations-bool---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_decorations"},"set_decorations"),"(&self, decorations: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#638-644",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Determines if this window should be ",Object(i.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Window_(computing)#Window_decoration"},"decorated"),"."),Object(i.b)("h4",{id:"pub-fn-set_always_on_topself-always_on_top-bool---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_always_on_top"},"set_always_on_top"),"(&self, always_on_top: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#647-653",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Determines if this window should always be on top of other windows."),Object(i.b)("h4",{id:"pub-fn-set_sizes-trait-coreconvertintoenum-taurisizeself-size-s---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_size"},"set_size"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.Size",title:"enum tauri::Size"},"Size"),">>(&self, size: S) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#656-662",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Resizes this window."),Object(i.b)("h4",{id:"pub-fn-set_min_sizes-trait-coreconvertintoenum-taurisizeself-size-enum-coreoptionoptions---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_min_size"},"set_min_size"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.Size",title:"enum tauri::Size"},"Size"),">>(&self, size: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","S>) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#665-671",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Sets this window\u2019s minimum size."),Object(i.b)("h4",{id:"pub-fn-set_max_sizes-trait-coreconvertintoenum-taurisizeself-size-enum-coreoptionoptions---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_max_size"},"set_max_size"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.Size",title:"enum tauri::Size"},"Size"),">>(&self, size: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","S>) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#674-680",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Sets this window\u2019s maximum size."),Object(i.b)("h4",{id:"pub-fn-set_positionpos-trait-coreconvertintoenum-tauripositionself-position-pos---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_position"},"set_position"),"<","Pos: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.Position",title:"enum tauri::Position"},"Position"),">>(&self, position: Pos) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#683-689",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Sets this window\u2019s position."),Object(i.b)("h4",{id:"pub-fn-set_fullscreenself-fullscreen-bool---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_fullscreen"},"set_fullscreen"),"(&self, fullscreen: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#692-698",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Determines if this window should be fullscreen."),Object(i.b)("h4",{id:"pub-fn-set_focusself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_focus"},"set_focus"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#701-703",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Bring the window to front and focus."),Object(i.b)("h4",{id:"pub-fn-set_iconself-icon-enum-tauriicon---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_icon"},"set_icon"),"(&self, icon: ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../enum.Icon",title:"enum tauri::Icon"},"Icon"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#706-708",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Sets this window\u2019 icon."),Object(i.b)("h4",{id:"pub-fn-set_skip_taskbarself-skip-bool---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.set_skip_taskbar"},"set_skip_taskbar"),"(&self, skip: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),") -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#711-717",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Whether to show the window icon in the task bar or not."),Object(i.b)("h4",{id:"pub-fn-start_draggingself---type-tauriresultgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.start_dragging"},"start_dragging"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#720-722",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Starts dragging the window."),Object(i.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-corecloneclone-for-struct-tauriwindowwindowrgoto-source-code"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#96-104",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"fn-cloneself---selfgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"clone"),"(&self) -> Self",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#97-103",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Returns a copy of the value. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"Read more")),Object(i.b)("h4",{id:"fn-clone_frommut-self-source-self100goto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"clone_from"),"(&mut self, source: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self)1.0.0",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/clone.rs.html#130",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs copy-assignment from ",Object(i.b)("inlineCode",{parentName:"p"},"source"),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"Read more")),Object(i.b)("h3",{id:"implde-r-trait-tauriruntime-trait-tauricommandcommandargde-r-for-struct-tauriwindowwindowrgoto-source-code"},"impl","<","'de, R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../command/trait.CommandArg",title:"trait tauri::command::CommandArg"},"CommandArg"),"<","'de, R> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#136-141",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"fn-from_commandcommand-struct-tauricommandcommanditemde-r---enum-coreresultresultself-struct-tauriinvokeerrorgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../command/trait.CommandArg#tymethod.from_command"},"from_command"),"(command: ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../command/struct.CommandItem",title:"struct tauri::command::CommandItem"},"CommandItem"),"<","'de, R>) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","Self, ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.InvokeError",title:"struct tauri::InvokeError"},"InvokeError"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#138-140",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Grabs the ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/struct.Window",title:"Window"},Object(i.b)("inlineCode",{parentName:"a"},"Window"))," from the ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../command/struct.CommandItem",title:"CommandItem"},Object(i.b)("inlineCode",{parentName:"a"},"CommandItem")),". This will never fail."),Object(i.b)("h3",{id:"implr-trait-corefmtdebug--trait-tauriruntime-trait-corefmtdebug-for-struct-tauriwindowwindowrgoto-source-code"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," + ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#87",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"fn-fmtself-f-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#87",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Formats the value using the given formatter. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-corehashhash-for-struct-tauriwindowwindowrgoto-source-code"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html",title:"trait core::hash::Hash"},"Hash")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#106-111",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"fn-hashh-trait-corehashhasherself-state-muthgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"hash"),"<","H: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),">(&self, state: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"H)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#108-110",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Only use the ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/struct.Window",title:"Window"},Object(i.b)("inlineCode",{parentName:"a"},"Window")),"\u2019s label to represent its hash."),Object(i.b)("h4",{id:"fn-hash_slicehdata-self-state-muth-where-h-trait-corehashhasher130goto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"hash_slice"),"<","H>(data: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&","[","Self","]"),", state: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"H) where H: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),",1.3.0",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/hash/mod.rs.html#211-213",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Feeds a slice of this type into the given ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(i.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"Read more")),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriwindowwindowrgoto-source-code"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Manager",title:"trait tauri::Manager"},"Manager"),"<","R> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#121",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"fn-configself---struct-allocsyncarcstruct-tauriconfiggoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.config"},"config"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/sync/struct.Arc.html",title:"struct alloc::sync::Arc"},"Arc"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.Config",title:"struct tauri::Config"},"Config"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#256-258",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"The ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../struct.Config",title:"Config"},Object(i.b)("inlineCode",{parentName:"a"},"Config"))," the manager was created with."),Object(i.b)("h4",{id:"fn-emit_alls-trait-serdeserserialize--trait-coreclonecloneself-event-str-payload-s---type-tauriresultgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.emit_all"},"emit_all"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),">(&self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", payload: S) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#261-263",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Emits a event to all windows."),Object(i.b)("h4",{id:"fn-emit_tos-trait-serdeserserialize--trait-corecloneclone-self-label-str-event-str-payload-s----type-tauriresultgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.emit_to"},"emit_to"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),">( &self, label: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", payload: S ) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#266-270",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Emits an event to a window with the specified label."),Object(i.b)("h4",{id:"fn-listen_globalfself-event-impl-trait-coreconvertintostruct-allocstringstring-handler-f---eventhandler-where-f-trait-coreopsfunctionfnemittedevent--trait-coremarkersend--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.listen_global"},"listen_global"),"<","F>(&self, event: impl ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, handler: F) -> EventHandler where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(EmittedEvent) + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#273-278",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Listen to a global event."),Object(i.b)("h4",{id:"fn-once_globalfself-event-impl-trait-coreconvertintostruct-allocstringstring-handler-f---eventhandler-where-f-trait-coreopsfunctionfnemittedevent--trait-coremarkersend--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.once_global"},"once_global"),"<","F>(&self, event: impl ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, handler: F) -> EventHandler where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(EmittedEvent) + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#281-286",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Listen to a global event only once."),Object(i.b)("h4",{id:"fn-trigger_globalself-event-str-data-enum-coreoptionoptionstruct-allocstringstringgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.trigger_global"},"trigger_global"),"(&self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", data: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#289-291",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Trigger a global event."),Object(i.b)("h4",{id:"fn-unlistenself-handler_id-eventhandlergoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.unlisten"},"unlisten"),"(&self, handler_id: EventHandler)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#294-296",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Remove an event listener."),Object(i.b)("h4",{id:"fn-get_windowself-label-str---enum-coreoptionoptionstruct-tauriwindowwindowrgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.get_window"},"get_window"),"(&self, label: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#299-301",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Fetch a single window from the manager."),Object(i.b)("h4",{id:"fn-windowsself---struct-stdcollectionshashmaphashmapstruct-allocstringstring-struct-tauriwindowwindowrgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.windows"},"windows"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/collections/hash/map/struct.HashMap.html",title:"struct std::collections::hash::map::HashMap"},"HashMap"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),", ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#304-306",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Fetch all managed windows."),Object(i.b)("h4",{id:"fn-managetself-state-t-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.manage"},"manage"),"<","T>(&self, state: T) where T: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#310-315",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Add ",Object(i.b)("inlineCode",{parentName:"p"},"state")," to the state managed by the application. See ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../struct.Builder#manage",title:"crate::Builder"},Object(i.b)("inlineCode",{parentName:"a"},"crate::Builder"))," for instructions. ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../trait.Manager#method.manage"},"Read more")),Object(i.b)("h4",{id:"fn-statetself---struct-tauristate_-t-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.state"},"state"),"<","T>(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.State",title:"struct tauri::State"},"State"),"<","'","_",", T> where T: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#318-323",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the managed state for the type ",Object(i.b)("inlineCode",{parentName:"p"},"T"),". Panics if the type is not managed."),Object(i.b)("h4",{id:"fn-try_statetself---enum-coreoptionoptionstruct-tauristate_-t-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../trait.Manager#method.try_state"},"try_state"),"<","T>(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../struct.State",title:"struct tauri::State"},"State"),"<","'","_",", T>> where T: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/lib.rs#326-331",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Tries to get the managed state for the type ",Object(i.b)("inlineCode",{parentName:"p"},"T"),". Returns ",Object(i.b)("inlineCode",{parentName:"p"},"None")," if the type is not managed."),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-corecmppartialeqstruct-tauriwindowwindowr-for-struct-tauriwindowwindowrgoto-source-code"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#114-119",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"fn-eqself-other-self---boolgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#116-118",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Only use the ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/struct.Window",title:"Window"},Object(i.b)("inlineCode",{parentName:"a"},"Window")),"\u2019s label to compare equality."),Object(i.b)("h4",{id:"must_usefn-neself-other-rhs---bool100goto-source-code"},"#","[","must_use]fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#213",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"This method tests for ",Object(i.b)("inlineCode",{parentName:"p"},"!="),"."),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-corecmpeq-for-struct-tauriwindowwindowr"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Eq.html",title:"trait core::cmp::Eq"},"Eq")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../src/tauri/window.rs#113",title:"goto source code"},"[","src","]")),Object(i.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(i.b)("h3",{id:"implr--struct-tauriwry-trait-stdpanicrefunwindsafe-for-struct-tauriwindowwindowr"},"impl","<","R = ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../struct.Wry",title:"struct tauri::Wry"},"Wry"),"> \\","!",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>"),Object(i.b)("h3",{id:"implr-trait-coremarkersend-for-struct-tauriwindowwindowr"},"impl","<","R> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>"),Object(i.b)("h3",{id:"implr-trait-coremarkersync-for-struct-tauriwindowwindowr-where-r-as-trait-tauriruntimetype-tauriruntimeclipboardmanager-trait-coremarkersync-r-as-trait-tauriruntimetype-tauriruntimedispatcher-trait-coremarkersync-r-as-trait-tauriruntimetype-tauriruntimeglobalshortcutmanager-trait-coremarkersync-r-as-trait-tauriruntimetype-tauriruntimehandle-trait-coremarkersync"},"impl","<","R> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R> where ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.ClipboardManager",title:"type tauri::Runtime::ClipboardManager"},"ClipboardManager"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),", ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),", ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.GlobalShortcutManager",title:"type tauri::Runtime::GlobalShortcutManager"},"GlobalShortcutManager"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),", ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.Handle",title:"type tauri::Runtime::Handle"},"Handle"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),","),Object(i.b)("h3",{id:"implr-trait-coremarkerunpin-for-struct-tauriwindowwindowr-where-r-as-trait-tauriruntimetype-tauriruntimeclipboardmanager-trait-coremarkerunpin-r-as-trait-tauriruntimetype-tauriruntimedispatcher-trait-coremarkerunpin-r-as-trait-tauriruntimetype-tauriruntimeglobalshortcutmanager-trait-coremarkerunpin-r-as-trait-tauriruntimetype-tauriruntimehandle-trait-coremarkerunpin"},"impl","<","R> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R> where ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.ClipboardManager",title:"type tauri::Runtime::ClipboardManager"},"ClipboardManager"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin"),", ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin"),", ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.GlobalShortcutManager",title:"type tauri::Runtime::GlobalShortcutManager"},"GlobalShortcutManager"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin"),", ","<","R as ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../trait.Runtime#associatedtype.Handle",title:"type tauri::Runtime::Handle"},"Handle"),": ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin"),","),Object(i.b)("h3",{id:"implr--struct-tauriwry-trait-stdpanicunwindsafe-for-struct-tauriwindowwindowr"},"impl","<","R = ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../struct.Wry",title:"struct tauri::Wry"},"Wry"),"> \\","!",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>"),Object(i.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(i.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the ",Object(i.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(i.b)("inlineCode",{parentName:"p"},"self"),". ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Immutably borrows from an owned value. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Mutably borrows from an owned value. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(i.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code"},"impl","<","T> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html",title:"trait alloc::borrow::ToOwned"},"ToOwned")," for T where T: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#84-96",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"type-owned--t"},"type ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned"},"Owned")," = T"),Object(i.b)("p",null,"The resulting type after obtaining ownership."),Object(i.b)("h4",{id:"pub-fn-to_ownedself---tgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"to_owned"),"(&self) -> T",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#89",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Creates owned data from borrowed data, usually by cloning. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"Read more")),Object(i.b)("h4",{id:"pub-fn-clone_intoself-target-muttgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"clone_into"),"(&self, target: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T)",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#93",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(i.b)("inlineCode",{parentName:"p"},"toowned_clone_into"),")"),Object(i.b)("p",null,"recently added"),Object(i.b)("p",null,"Uses borrowed data to replace owned data, usually by cloning. ",Object(i.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"Read more")),Object(i.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(i.b)("p",null,"The type returned in the event of a conversion error."),Object(i.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(i.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(i.b)("p",null,"The type returned in the event of a conversion error."),Object(i.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Performs the conversion."),Object(i.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(i.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}u.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return d}));var a=r(0),i=r.n(a);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,a,i=function(t,e){if(null==t)return{};var r,a,i={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var u=i.a.createContext({}),l=function(t){var e=i.a.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},p=function(t){var e=l(t.components);return i.a.createElement(u.Provider,{value:e},t.children)},h={inlineCode:"code",wrapper:function(t){var e=t.children;return i.a.createElement(i.a.Fragment,{},e)}},b=i.a.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,n=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=l(r),b=a,d=p["".concat(n,".").concat(b)]||p[b]||h[b]||o;return r?i.a.createElement(d,c(c({ref:e},u),{},{components:r})):i.a.createElement(d,c({ref:e},u))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,n=new Array(o);n[0]=b;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:a,n[1]=c;for(var u=2;u<o;u++)n[u]=r[u];return i.a.createElement.apply(null,n)}return i.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);