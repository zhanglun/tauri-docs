(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{144:function(t,r,e){"use strict";e.r(r),e.d(r,"frontMatter",(function(){return i})),e.d(r,"metadata",(function(){return n})),e.d(r,"toc",(function(){return l})),e.d(r,"default",(function(){return u}));var o=e(3),a=e(7),c=(e(0),e(454)),i={title:"Enum tauri::api::file::ArchiveFormat",sidebar_label:"enum.ArchiveFormat",custom_edit_url:null},n={unversionedId:"api/rust/tauri/api/file/enum.ArchiveFormat",id:"api/rust/tauri/api/file/enum.ArchiveFormat",isDocsHomePage:!1,title:"Enum tauri::api::file::ArchiveFormat",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/api/file/enum.ArchiveFormat.md",sourceDirName:"api/rust/tauri/api/file",slug:"/api/rust/tauri/api/file/enum.ArchiveFormat",permalink:"/zh-hans/docs/api/rust/tauri/api/file/enum.ArchiveFormat",editUrl:null,version:"current",sidebar_label:"enum.ArchiveFormat",frontMatter:{title:"Enum tauri::api::file::ArchiveFormat",sidebar_label:"enum.ArchiveFormat",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::api::dir::DiskEntry",permalink:"/zh-hans/docs/api/rust/tauri/api/dir/struct.DiskEntry"},next:{title:"Enum tauri::api::file::Compression",permalink:"/zh-hans/docs/api/rust/tauri/api/file/enum.Compression"}},l=[{value:"Variants (Non-exhaustive)",id:"variants-non-exhaustive",children:[]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::clone::Clone for enum tauri::api::file::ArchiveFormatgoto source code",id:"impl-trait-corecloneclone-for-enum-tauriapifilearchiveformatgoto-source-code",children:[]},{value:"impl trait core::fmt::Debug for enum tauri::api::file::ArchiveFormatgoto source code",id:"impl-trait-corefmtdebug-for-enum-tauriapifilearchiveformatgoto-source-code",children:[]},{value:"impl trait core::cmp::PartialEq&lt;enum tauri::api::file::ArchiveFormat&gt; for enum tauri::api::file::ArchiveFormatgoto source code",id:"impl-trait-corecmppartialeqenum-tauriapifilearchiveformat-for-enum-tauriapifilearchiveformatgoto-source-code",children:[]},{value:"impl trait core::marker::Copy for enum tauri::api::file::ArchiveFormat",id:"impl-trait-coremarkercopy-for-enum-tauriapifilearchiveformat",children:[]},{value:"impl trait core::marker::StructuralPartialEq for enum tauri::api::file::ArchiveFormat",id:"impl-trait-coremarkerstructuralpartialeq-for-enum-tauriapifilearchiveformat",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl trait std::panic::RefUnwindSafe for enum tauri::api::file::ArchiveFormat",id:"impl-trait-stdpanicrefunwindsafe-for-enum-tauriapifilearchiveformat",children:[]},{value:"impl trait core::marker::Send for enum tauri::api::file::ArchiveFormat",id:"impl-trait-coremarkersend-for-enum-tauriapifilearchiveformat",children:[]},{value:"impl trait core::marker::Sync for enum tauri::api::file::ArchiveFormat",id:"impl-trait-coremarkersync-for-enum-tauriapifilearchiveformat",children:[]},{value:"impl trait core::marker::Unpin for enum tauri::api::file::ArchiveFormat",id:"impl-trait-coremarkerunpin-for-enum-tauriapifilearchiveformat",children:[]},{value:"impl trait std::panic::UnwindSafe for enum tauri::api::file::ArchiveFormat",id:"impl-trait-stdpanicunwindsafe-for-enum-tauriapifilearchiveformat",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::borrow::ToOwned for T where T: trait core::clone::Clone,goto source code",id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],m={toc:l};function u(t){var r=t.components,e=Object(a.a)(t,["components"]);return Object(c.b)("wrapper",Object(o.a)({},m,e,{components:r,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-rs"},"#[non_exhaustive]\n\npub enum ArchiveFormat {\n    Tar(Option<Compression>),\n    Plain(Option<Compression>),\n    Zip,\n}\n")),Object(c.b)("p",null,"Expand description"),Object(c.b)("p",null,"The supported archive formats."),Object(c.b)("h2",{id:"variants-non-exhaustive"},"Variants (Non-exhaustive)"),Object(c.b)("p",null,"This enum is marked as non-exhaustive"),Object(c.b)("p",null,"Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Tar(Option<Compression>)")),Object(c.b)("p",null,"Tar archive."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Plain(Option<Compression>)")),Object(c.b)("p",null,"Plain archive."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Zip")),Object(c.b)("p",null,"Zip archive."),Object(c.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(c.b)("h3",{id:"impl-trait-corecloneclone-for-enum-tauriapifilearchiveformatgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-cloneself---enum-tauriapifilearchiveformatgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"clone"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Returns a copy of the value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"Read more")),Object(c.b)("h4",{id:"fn-clone_frommut-self-source-self100goto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"clone_from"),"(&mut self, source: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self)1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/clone.rs.html#130",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs copy-assignment from ",Object(c.b)("inlineCode",{parentName:"p"},"source"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"Read more")),Object(c.b)("h3",{id:"impl-trait-corefmtdebug-for-enum-tauriapifilearchiveformatgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fmtself-f-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Formats the value using the given formatter. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(c.b)("h3",{id:"impl-trait-corecmppartialeqenum-tauriapifilearchiveformat-for-enum-tauriapifilearchiveformatgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-eqself-other-enum-tauriapifilearchiveformat---boolgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"self")," and ",Object(c.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(c.b)("inlineCode",{parentName:"p"},"=="),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(c.b)("h4",{id:"fn-neself-other-enum-tauriapifilearchiveformat---boolgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: &",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"!="),"."),Object(c.b)("h3",{id:"impl-trait-coremarkercopy-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Copy.html",title:"trait core::marker::Copy"},"Copy")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("h3",{id:"impl-trait-coremarkerstructuralpartialeq-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralPartialEq.html",title:"trait core::marker::StructuralPartialEq"},"StructuralPartialEq")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#10",title:"goto source code"},"[","src","]")),Object(c.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(c.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("h3",{id:"impl-trait-coremarkersend-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("h3",{id:"impl-trait-coremarkersync-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("h3",{id:"impl-trait-coremarkerunpin-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-enum-tauriapifilearchiveformat"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat")),Object(c.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(c.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Gets the ",Object(c.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(c.b)("inlineCode",{parentName:"p"},"self"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Immutably borrows from an owned value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Mutably borrows from an owned value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html",title:"trait alloc::borrow::ToOwned"},"ToOwned")," for T where T: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#84-96",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-owned--t"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned"},"Owned")," = T"),Object(c.b)("p",null,"The resulting type after obtaining ownership."),Object(c.b)("h4",{id:"pub-fn-to_ownedself---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"to_owned"),"(&self) -> T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#89",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Creates owned data from borrowed data, usually by cloning. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"Read more")),Object(c.b)("h4",{id:"pub-fn-clone_intoself-target-muttgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"clone_into"),"(&self, target: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T)",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#93",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(c.b)("inlineCode",{parentName:"p"},"toowned_clone_into"),")"),Object(c.b)("p",null,"recently added"),Object(c.b)("p",null,"Uses borrowed data to replace owned data, usually by cloning. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"Read more")),Object(c.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(c.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}u.isMDXComponent=!0},454:function(t,r,e){"use strict";e.d(r,"a",(function(){return h})),e.d(r,"b",(function(){return b}));var o=e(0),a=e.n(o);function c(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function i(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,o)}return e}function n(t){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?i(Object(e),!0).forEach((function(r){c(t,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(e,r))}))}return t}function l(t,r){if(null==t)return{};var e,o,a=function(t,r){if(null==t)return{};var e,o,a={},c=Object.keys(t);for(o=0;o<c.length;o++)e=c[o],r.indexOf(e)>=0||(a[e]=t[e]);return a}(t,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(o=0;o<c.length;o++)e=c[o],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var m=a.a.createContext({}),u=function(t){var r=a.a.useContext(m),e=r;return t&&(e="function"==typeof t?t(r):n(n({},r),t)),e},h=function(t){var r=u(t.components);return a.a.createElement(m.Provider,{value:r},t.children)},s={inlineCode:"code",wrapper:function(t){var r=t.children;return a.a.createElement(a.a.Fragment,{},r)}},p=a.a.forwardRef((function(t,r){var e=t.components,o=t.mdxType,c=t.originalType,i=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),h=u(e),p=o,b=h["".concat(i,".").concat(p)]||h[p]||s[p]||c;return e?a.a.createElement(b,n(n({ref:r},m),{},{components:e})):a.a.createElement(b,n({ref:r},m))}));function b(t,r){var e=arguments,o=r&&r.mdxType;if("string"==typeof t||o){var c=e.length,i=new Array(c);i[0]=p;var n={};for(var l in r)hasOwnProperty.call(r,l)&&(n[l]=r[l]);n.originalType=t,n.mdxType="string"==typeof t?t:o,i[1]=n;for(var m=2;m<c;m++)i[m]=e[m];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,e)}p.displayName="MDXCreateElement"}}]);