(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{293:function(t,r,e){"use strict";e.r(r),e.d(r,"frontMatter",(function(){return c})),e.d(r,"metadata",(function(){return s})),e.d(r,"toc",(function(){return i})),e.d(r,"default",(function(){return l}));var o=e(3),a=(e(0),e(454));const c={title:"Struct tauri::http::status::InvalidStatusCode",sidebar_label:"struct.InvalidStatusCode",custom_edit_url:null},s={unversionedId:"api/rust/tauri/http/status/struct.InvalidStatusCode",id:"api/rust/tauri/http/status/struct.InvalidStatusCode",isDocsHomePage:!1,title:"Struct tauri::http::status::InvalidStatusCode",description:"x3A;:InvalidStatusCode,",source:"@site/docs/zh-hans/api/rust/tauri/http/status/struct.InvalidStatusCode.md",sourceDirName:"api/rust/tauri/http/status",slug:"/api/rust/tauri/http/status/struct.InvalidStatusCode",permalink:"/tauri-docs/docs/api/rust/tauri/http/status/struct.InvalidStatusCode",editUrl:null,version:"current",sidebar_label:"struct.InvalidStatusCode",frontMatter:{title:"Struct tauri::http::status::InvalidStatusCode",sidebar_label:"struct.InvalidStatusCode",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::http::method::Method",permalink:"/tauri-docs/docs/api/rust/tauri/http/method/struct.Method"},next:{title:"Struct tauri::http::status::StatusCode",permalink:"/tauri-docs/docs/api/rust/tauri/http/status/struct.StatusCode"}},i=[{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::fmt::Debug for struct tauri::http::status::InvalidStatusCodegoto source code",id:"impl-trait-corefmtdebug-for-struct-taurihttpstatusinvalidstatuscodegoto-source-code",children:[]},{value:"impl trait core::fmt::Display for struct tauri::http::status::InvalidStatusCodegoto source code",id:"impl-trait-corefmtdisplay-for-struct-taurihttpstatusinvalidstatuscodegoto-source-code",children:[]},{value:"impl trait std::error::Error for struct tauri::http::status::InvalidStatusCodegoto source code",id:"impl-trait-stderrorerror-for-struct-taurihttpstatusinvalidstatuscodegoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl trait std::panic::RefUnwindSafe for struct tauri::http::status::InvalidStatusCode",id:"impl-trait-stdpanicrefunwindsafe-for-struct-taurihttpstatusinvalidstatuscode",children:[]},{value:"impl trait core::marker::Send for struct tauri::http::status::InvalidStatusCode",id:"impl-trait-coremarkersend-for-struct-taurihttpstatusinvalidstatuscode",children:[]},{value:"impl trait core::marker::Sync for struct tauri::http::status::InvalidStatusCode",id:"impl-trait-coremarkersync-for-struct-taurihttpstatusinvalidstatuscode",children:[]},{value:"impl trait core::marker::Unpin for struct tauri::http::status::InvalidStatusCode",id:"impl-trait-coremarkerunpin-for-struct-taurihttpstatusinvalidstatuscode",children:[]},{value:"impl trait std::panic::UnwindSafe for struct tauri::http::status::InvalidStatusCode",id:"impl-trait-stdpanicunwindsafe-for-struct-taurihttpstatusinvalidstatuscode",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::string::ToString for T where T: trait core::fmt::Display + ?trait core::marker::Sized,goto source code",id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],n={toc:i};function l({components:t,...r}){return Object(a.b)("wrapper",Object(o.a)({},n,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"x3A;:status::InvalidStatusCode,"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rs"},"pub struct InvalidStatusCode { /* fields omitted */ }\n")),Object(a.b)("p",null,"Expand description"),Object(a.b)("p",null,"A possible error value when converting a ",Object(a.b)("inlineCode",{parentName:"p"},"StatusCode")," from a ",Object(a.b)("inlineCode",{parentName:"p"},"u16")," or ",Object(a.b)("inlineCode",{parentName:"p"},"&str")),Object(a.b)("p",null,"This error indicates that the supplied input was not a valid number, was less than 100, or was greater than 999."),Object(a.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-corefmtdebug-for-struct-taurihttpstatusinvalidstatuscodegoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/status.rs.html#525-531",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/status.rs.html#526",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Formats the value using the given formatter. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(a.b)("h3",{id:"impl-trait-corefmtdisplay-for-struct-taurihttpstatusinvalidstatuscodegoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/status.rs.html#533-537",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code-1"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/status.rs.html#534",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Formats the value using the given formatter. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"Read more")),Object(a.b)("h3",{id:"impl-trait-stderrorerror-for-struct-taurihttpstatusinvalidstatuscodegoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/status.rs.html#539",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-sourceself---enum-coreoptionoptiondyn-trait-stderrorerror--static1300goto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.source"},"source"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","<(dyn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error")," + 'static)>1.30.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#106",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"The lower-level source of this error, if any. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.source"},"Read more")),Object(a.b)("h4",{id:"fn-backtraceself---enum-coreoptionoptionstruct-stdbacktracebacktracegoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.backtrace"},"backtrace"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","&",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/backtrace/struct.Backtrace.html",title:"struct std::backtrace::Backtrace"},"Backtrace"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#134",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(a.b)("inlineCode",{parentName:"p"},"backtrace"),")"),Object(a.b)("p",null,"Returns a stack backtrace, if available, of where this error occurred. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.backtrace"},"Read more")),Object(a.b)("h4",{id:"fn-descriptionself---str100goto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.description"},"description"),"(&self) -> &",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),"1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#146",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"\ud83d\udc4e Deprecated since 1.42.0:"),Object(a.b)("p",null,"use the Display impl or to_string()"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.description"},"Read more")),Object(a.b)("h4",{id:"fn-causeself---enum-coreoptionoptiondyn-trait-stderrorerror100goto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.cause"},"cause"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","&dyn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error"),">1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#156",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"\ud83d\udc4e Deprecated since 1.33.0:"),Object(a.b)("p",null,"replaced by Error::source, which can support downcasting"),Object(a.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-struct-taurihttpstatusinvalidstatuscode"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode")),Object(a.b)("h3",{id:"impl-trait-coremarkersend-for-struct-taurihttpstatusinvalidstatuscode"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode")),Object(a.b)("h3",{id:"impl-trait-coremarkersync-for-struct-taurihttpstatusinvalidstatuscode"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode")),Object(a.b)("h3",{id:"impl-trait-coremarkerunpin-for-struct-taurihttpstatusinvalidstatuscode"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode")),Object(a.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-struct-taurihttpstatusinvalidstatuscode"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvalidStatusCode",title:"struct tauri::http::status::InvalidStatusCode"},"InvalidStatusCode")),Object(a.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(a.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Gets the ",Object(a.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(a.b)("inlineCode",{parentName:"p"},"self"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Immutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Mutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html",title:"trait alloc::string::ToString"},"ToString")," for T where T: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2372-2386",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-default-fn-to_stringself---struct-allocstringstringgoto-source-code"},"pub default fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"to_string"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2378",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Converts the given value to a ",Object(a.b)("inlineCode",{parentName:"p"},"String"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"Read more")),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(a.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}l.isMDXComponent=!0},454:function(t,r,e){"use strict";e.d(r,"a",(function(){return h})),e.d(r,"b",(function(){return m}));var o=e(0),a=e.n(o);function c(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function s(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,o)}return e}function i(t){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?s(Object(e),!0).forEach((function(r){c(t,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):s(Object(e)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(e,r))}))}return t}function n(t,r){if(null==t)return{};var e,o,a=function(t,r){if(null==t)return{};var e,o,a={},c=Object.keys(t);for(o=0;o<c.length;o++)e=c[o],r.indexOf(e)>=0||(a[e]=t[e]);return a}(t,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(o=0;o<c.length;o++)e=c[o],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var l=a.a.createContext({}),u=function(t){var r=a.a.useContext(l),e=r;return t&&(e="function"==typeof t?t(r):i(i({},r),t)),e},h=function(t){var r=u(t.components);return a.a.createElement(l.Provider,{value:r},t.children)},d={inlineCode:"code",wrapper:function(t){var r=t.children;return a.a.createElement(a.a.Fragment,{},r)}},p=a.a.forwardRef((function(t,r){var e=t.components,o=t.mdxType,c=t.originalType,s=t.parentName,l=n(t,["components","mdxType","originalType","parentName"]),h=u(e),p=o,m=h["".concat(s,".").concat(p)]||h[p]||d[p]||c;return e?a.a.createElement(m,i(i({ref:r},l),{},{components:e})):a.a.createElement(m,i({ref:r},l))}));function m(t,r){var e=arguments,o=r&&r.mdxType;if("string"==typeof t||o){var c=e.length,s=new Array(c);s[0]=p;var i={};for(var n in r)hasOwnProperty.call(r,n)&&(i[n]=r[n]);i.originalType=t,i.mdxType="string"==typeof t?t:o,s[1]=i;for(var l=2;l<c;l++)s[l]=e[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,e)}p.displayName="MDXCreateElement"}}]);