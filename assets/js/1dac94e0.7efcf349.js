(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{128:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return c})),r.d(e,"metadata",(function(){return i})),r.d(e,"toc",(function(){return l})),r.d(e,"default",(function(){return m}));var o=r(3),a=r(7),n=(r(0),r(454)),c={title:"Enum tauri::http::header::Entry",sidebar_label:"enum.Entry",custom_edit_url:null},i={unversionedId:"api/rust/tauri/http/header/enum.Entry",id:"api/rust/tauri/http/header/enum.Entry",isDocsHomePage:!1,title:"Enum tauri::http::header::Entry",description:"x3A;:Entry,",source:"@site/docs/zh-hans/api/rust/tauri/http/header/enum.Entry.md",sourceDirName:"api/rust/tauri/http/header",slug:"/api/rust/tauri/http/header/enum.Entry",permalink:"/zh-hans/docs/api/rust/tauri/http/header/enum.Entry",editUrl:null,version:"current",sidebar_label:"enum.Entry",frontMatter:{title:"Enum tauri::http::header::Entry",sidebar_label:"enum.Entry",custom_edit_url:null},sidebar:"docs",previous:{title:"Trait tauri::command::CommandArg",permalink:"/zh-hans/docs/api/rust/tauri/command/trait.CommandArg"},next:{title:"Struct tauri::http::header::Drain",permalink:"/zh-hans/docs/api/rust/tauri/http/header/struct.Drain"}},l=[{value:"Variants",id:"variants",children:[]},{value:"Implementations",id:"implementations",children:[{value:"impl&lt;&#39;a, T&gt; enum tauri::http::header::Entry&lt;&#39;a, T&gt;goto source code",id:"impla-t-enum-taurihttpheaderentrya-tgoto-source-code",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"Examples",id:"examples-1",children:[]},{value:"Examples",id:"examples-2",children:[]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl&lt;&#39;a, T&gt; trait core::fmt::Debug for enum tauri::http::header::Entry&lt;&#39;a, T&gt; where T: &#39;a + trait core::fmt::Debug,goto source code",id:"impla-t-trait-corefmtdebug-for-enum-taurihttpheaderentrya-t-where-t-a--trait-corefmtdebuggoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;&#39;a, T&gt; trait std::panic::RefUnwindSafe for enum tauri::http::header::Entry&lt;&#39;a, T&gt; where T: trait std::panic::RefUnwindSafe,",id:"impla-t-trait-stdpanicrefunwindsafe-for-enum-taurihttpheaderentrya-t-where-t-trait-stdpanicrefunwindsafe",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::marker::Send for enum tauri::http::header::Entry&lt;&#39;a, T&gt; where T: trait core::marker::Send,",id:"impla-t-trait-coremarkersend-for-enum-taurihttpheaderentrya-t-where-t-trait-coremarkersend",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::marker::Sync for enum tauri::http::header::Entry&lt;&#39;a, T&gt; where T: trait core::marker::Sync,",id:"impla-t-trait-coremarkersync-for-enum-taurihttpheaderentrya-t-where-t-trait-coremarkersync",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::marker::Unpin for enum tauri::http::header::Entry&lt;&#39;a, T&gt;",id:"impla-t-trait-coremarkerunpin-for-enum-taurihttpheaderentrya-t",children:[]},{value:"impl&lt;&#39;a, T&gt; !trait std::panic::UnwindSafe for enum tauri::http::header::Entry&lt;&#39;a, T&gt;",id:"impla-t-trait-stdpanicunwindsafe-for-enum-taurihttpheaderentrya-t",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],h={toc:l};function m(t){var e=t.components,r=Object(a.a)(t,["components"]);return Object(n.b)("wrapper",Object(o.a)({},h,r,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"x3A;:header::Entry,"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-rs"},"pub enum Entry<'a, T> where\n\xa0\xa0\xa0\xa0T: 'a,\xa0 {\n    Occupied(OccupiedEntry<'a, T>),\n    Vacant(VacantEntry<'a, T>),\n}\n")),Object(n.b)("p",null,"Expand description"),Object(n.b)("p",null,"A view into a single location in a ",Object(n.b)("inlineCode",{parentName:"p"},"HeaderMap"),", which may be vacant or occupied."),Object(n.b)("h2",{id:"variants"},"Variants"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"Occupied(OccupiedEntry<'a, T>)")),Object(n.b)("p",null,"An occupied entry"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"Vacant(VacantEntry<'a, T>)")),Object(n.b)("p",null,"A vacant entry"),Object(n.b)("h2",{id:"implementations"},"Implementations"),Object(n.b)("h3",{id:"impla-t-enum-taurihttpheaderentrya-tgoto-source-code"},"impl","<","'a, T> ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T>",Object(n.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2264-2361",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-or_insertself-default-t---a-muttgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.or_insert"},"or_insert"),"(self, default: T) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&'a mut"),"T",Object(n.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2291",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Ensures a value is in the entry by inserting the default if empty."),Object(n.b)("p",null,"Returns a mutable reference to the ",Object(n.b)("strong",{parentName:"p"},"first")," value in the entry."),Object(n.b)("h2",{id:"examples"},"Examples"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-rs"},'let mut map: HeaderMap<u32> = HeaderMap::default();\n\nlet headers = &[\n    "content-length",\n    "x-hello",\n    "Content-Length",\n    "x-world",\n];\n\nfor &header in headers {\n    let counter = map.entry(header)\n        .or_insert(0);\n    *counter += 1;\n}\n\nassert_eq!(map["content-length"], 2);\nassert_eq!(map["x-hello"], 1);\n')),Object(n.b)("h4",{id:"pub-fn-or_insert_withfself-default-f---a-mutt-where-f-trait-coreopsfunctionfnonce---tgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.or_insert_with"},"or_insert_with"),"<","F>(self, default: F) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&'a mut"),"T where F: ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnOnce.html",title:"trait core::ops::function::FnOnce"},"FnOnce"),"() -> T,",Object(n.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2334",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Ensures a value is in the entry by inserting the result of the default function if empty."),Object(n.b)("p",null,"The default function is not called if the entry exists in the map. Returns a mutable reference to the ",Object(n.b)("strong",{parentName:"p"},"first")," value in the entry."),Object(n.b)("h2",{id:"examples-1"},"Examples"),Object(n.b)("p",null,"Basic usage."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-rs"},'let mut map = HeaderMap::new();\n\nlet res = map.entry("x-hello")\n    .or_insert_with(|| "world".parse().unwrap());\n\nassert_eq!(res, "world");\n')),Object(n.b)("p",null,"The default function is not called if the entry exists in the map."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-rs"},'let mut map = HeaderMap::new();\nmap.insert(HOST, "world".parse().unwrap());\n\nlet res = map.entry("host")\n    .or_insert_with(|| unreachable!());\n\n\nassert_eq!(res, "world");\n')),Object(n.b)("h4",{id:"pub-fn-keyself---struct-taurihttpheaderheadernamegoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.key"},"key"),"(&self) -> &",Object(n.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.HeaderName",title:"struct tauri::http::header::HeaderName"},"HeaderName"),Object(n.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2353",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Returns a reference to the entry\u2019s key"),Object(n.b)("h2",{id:"examples-2"},"Examples"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-rs"},'let mut map = HeaderMap::new();\n\nassert_eq!(map.entry("x-hello").key(), "x-hello");\n')),Object(n.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(n.b)("h3",{id:"impla-t-trait-corefmtdebug-for-enum-taurihttpheaderentrya-t-where-t-a--trait-corefmtdebuggoto-source-code"},"impl","<","'a, T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T> where T: 'a + ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug"),",",Object(n.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#156",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(n.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#156",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Formats the value using the given formatter. ",Object(n.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(n.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(n.b)("h3",{id:"impla-t-trait-stdpanicrefunwindsafe-for-enum-taurihttpheaderentrya-t-where-t-trait-stdpanicrefunwindsafe"},"impl","<","'a, T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T> where T: ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe"),","),Object(n.b)("h3",{id:"impla-t-trait-coremarkersend-for-enum-taurihttpheaderentrya-t-where-t-trait-coremarkersend"},"impl","<","'a, T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T> where T: ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send"),","),Object(n.b)("h3",{id:"impla-t-trait-coremarkersync-for-enum-taurihttpheaderentrya-t-where-t-trait-coremarkersync"},"impl","<","'a, T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T> where T: ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),","),Object(n.b)("h3",{id:"impla-t-trait-coremarkerunpin-for-enum-taurihttpheaderentrya-t"},"impl","<","'a, T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T>"),Object(n.b)("h3",{id:"impla-t-trait-stdpanicunwindsafe-for-enum-taurihttpheaderentrya-t"},"impl","<","'a, T> \\","!",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(n.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Entry",title:"enum tauri::http::header::Entry"},"Entry"),"<","'a, T>"),Object(n.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(n.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Gets the ",Object(n.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(n.b)("inlineCode",{parentName:"p"},"self"),". ",Object(n.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(n.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Immutably borrows from an owned value. ",Object(n.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(n.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Mutably borrows from an owned value. ",Object(n.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(n.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Performs the conversion."),Object(n.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Performs the conversion."),Object(n.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(n.b)("p",null,"The type returned in the event of a conversion error."),Object(n.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Performs the conversion."),Object(n.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(n.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(n.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(n.b)("p",null,"The type returned in the event of a conversion error."),Object(n.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(n.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(n.b)("p",null,"Performs the conversion."),Object(n.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(n.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(n.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}m.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return s})),r.d(e,"b",(function(){return d}));var o=r(0),a=r.n(o);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?c(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,o,a=function(t,e){if(null==t)return{};var r,o,a={},n=Object.keys(t);for(o=0;o<n.length;o++)r=n[o],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(o=0;o<n.length;o++)r=n[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var h=a.a.createContext({}),m=function(t){var e=a.a.useContext(h),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},s=function(t){var e=m(t.components);return a.a.createElement(h.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},p=a.a.forwardRef((function(t,e){var r=t.components,o=t.mdxType,n=t.originalType,c=t.parentName,h=l(t,["components","mdxType","originalType","parentName"]),s=m(r),p=o,d=s["".concat(c,".").concat(p)]||s[p]||u[p]||n;return r?a.a.createElement(d,i(i({ref:e},h),{},{components:r})):a.a.createElement(d,i({ref:e},h))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var n=r.length,c=new Array(n);c[0]=p;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:o,c[1]=i;for(var h=2;h<n;h++)c[h]=r[h];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"}}]);