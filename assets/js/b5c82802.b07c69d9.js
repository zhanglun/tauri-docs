(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{342:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),i=(t(0),t(454)),o=(t(461),{title:"Splashscreen"}),s={unversionedId:"usage/guides/visual/splashscreen",id:"usage/guides/visual/splashscreen",isDocsHomePage:!1,title:"Splashscreen",description:"If your webpage could take some time to load, or if you need to run an initialization procedure in Rust before displaying your main window, a splashscreen could improve the loading experience for the user.",source:"@site/docs/zh-hans/usage/guides/visual/splashscreen.md",sourceDirName:"usage/guides/visual",slug:"/usage/guides/visual/splashscreen",permalink:"/tauri-docs/docs/usage/guides/visual/splashscreen",editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/zh-hans/usage/guides/visual/splashscreen.md",version:"current",frontMatter:{title:"Splashscreen"},sidebar:"docs",previous:{title:"Icons",permalink:"/tauri-docs/docs/usage/guides/visual/icons"},next:{title:"Window Customization",permalink:"/tauri-docs/docs/usage/guides/visual/window-customization"}},c=[{value:"Setup",id:"setup",children:[]},{value:"Waiting for Webpage",id:"waiting-for-webpage",children:[]},{value:"Waiting for Rust",id:"waiting-for-rust",children:[]}],u={toc:c};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"If your webpage could take some time to load, or if you need to run an initialization procedure in Rust before displaying your main window, a splashscreen could improve the loading experience for the user."),Object(i.b)("h3",{id:"setup"},"Setup"),Object(i.b)("p",null,"First, create a ",Object(i.b)("inlineCode",{parentName:"p"},"splashscreen.html")," in your ",Object(i.b)("inlineCode",{parentName:"p"},"distDir")," that contains the HTML code for a splashscreen. Then, update your ",Object(i.b)("inlineCode",{parentName:"p"},"tauri.conf.json")," like so:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-diff"},'"windows": [\n  {\n    "title": "Tauri App",\n    "width": 800,\n    "height": 600,\n    "resizable": true,\n    "fullscreen": false,\n+   "visible": false // Hide the main window by default\n  },\n  // Add the splashscreen window\n+ {\n+   "width": 400,\n+   "height": 200,\n+   "decorations": false,\n+   "url": "splashscreen.html",\n+   "label": "splashscreen"\n+ }\n]\n')),Object(i.b)("p",null,"Now, your main window will be hidden and the splashscreen window will show when your app is launched. Next, you'll need a way to close the splashscreen and show the main window when your app is ready. How you do this depends on what you are waiting for before closing the splashscreen."),Object(i.b)("h3",{id:"waiting-for-webpage"},"Waiting for Webpage"),Object(i.b)("p",null,"If you are waiting for your web code, you'll want to create a ",Object(i.b)("inlineCode",{parentName:"p"},"close_splashscreen")," ",Object(i.b)("a",{parentName:"p",href:"/tauri-docs/docs/usage/guides/command"},"command"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rust",metastring:"title=src-tauri/main.rs",title:"src-tauri/main.rs"},'use tauri::Manager;\n// Create the command:\n#[tauri::command]\nfn close_splashscreen(window: tauri::Window) {\n  // Close splashscreen\n  if let Some(splashscreen) = window.get_window("splashscreen") {\n    splashscreen.close().unwrap();\n  }\n  // Show main window\n  window.get_window("main").unwrap().show().unwrap();\n}\n\n// Register the command:\nfn main() {\n  tauri::Builder::default()\n    // Add this line\n    .invoke_handler(tauri::generate_handler![close_splashscreen])\n    .run(tauri::generate_context!())\n    .expect("failed to run app");\n}\n\n')),Object(i.b)("p",null,"Then, you can call it from your JS:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// With the Tauri API npm package:\nimport { invoke } from '@tauri-apps/api/tauri'\n// With the Tauri global script:\nconst invoke = window.__TAURI__.invoke\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // This will wait for the window to load, but you could\n  // run this function on whatever trigger you want\n  invoke('close_splashscreen')\n})\n")),Object(i.b)("h3",{id:"waiting-for-rust"},"Waiting for Rust"),Object(i.b)("p",null,"If you are waiting for Rust code to run, put it in the ",Object(i.b)("inlineCode",{parentName:"p"},"setup")," function handler so you have access to the ",Object(i.b)("inlineCode",{parentName:"p"},"App")," instance:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rust",metastring:"title=src-tauri/main.rs",title:"src-tauri/main.rs"},'use tauri::Manager;\nfn main() {\n  tauri::Builder::default()\n    .setup(|app| {\n      let splashscreen_window = app.get_window("splashscreen").unwrap();\n      let main_window = app.get_window("main").unwrap();\n      // we perform the initialization code on a new task so the app doesn\'t freeze\n      tauri::async_runtime::spawn(async move {\n        // initialize your app here instead of sleeping :)\n        println!("Initializing...");\n        std::thread::sleep(std::time::Duration::from_secs(2));\n        println!("Done initializing.");\n\n        // After it\'s done, close the splashscreen and display the main window\n        splashscreen_window.close().unwrap();\n        main_window.show().unwrap();\n      });\n      Ok(())\n    })\n    .run(tauri::generate_context!())\n    .expect("failed to run app");\n}\n')))}l.isMDXComponent=!0},454:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),l=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},f=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),f=r,h=p["".concat(o,".").concat(f)]||p[f]||d[f]||i;return t?a.a.createElement(h,s(s({ref:n},u),{},{components:t})):a.a.createElement(h,s({ref:n},u))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=t[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},459:function(e,n,t){"use strict";t.d(n,"b",(function(){return i})),t.d(n,"a",(function(){return o}));var r=t(16),a=t(462);function i(){const{siteConfig:{baseUrl:e="/",url:n}={}}=Object(r.default)();return{withBaseUrl:(t,r)=>function(e,n,t,{forcePrependBaseUrl:r=!1,absolute:i=!1}={}){if(!t)return t;if(t.startsWith("#"))return t;if(Object(a.b)(t))return t;if(r)return n+t;const o=t.startsWith(n)?t:n+t.replace(/^\//,"");return i?e+o:o}(n,e,t,r)}}function o(e,n={}){const{withBaseUrl:t}=i();return t(e,n)}},461:function(e,n,t){"use strict";var r=t(0),a=t.n(r),i=t(10),o=t(462),s=t(8);const c=Object(r.createContext)({collectLink:()=>{}});var u=t(459);n.a=function({isNavLink:e,to:n,href:t,activeClassName:l,isActive:p,"data-noBrokenLinkCheck":d,autoAddBaseUrl:f=!0,...h}){var w;const{withBaseUrl:b}=Object(u.b)(),m=Object(r.useContext)(c),g=n||t,v=Object(o.a)(g),y=null==g?void 0:g.replace("pathname://",""),O=void 0!==y?(j=y,f&&(e=>e.startsWith("/"))(j)?b(j):j):void 0;var j;const k=Object(r.useRef)(!1),N=e?i.e:i.c,_=s.a.canUseIntersectionObserver;let C;Object(r.useEffect)((()=>(!_&&v&&null!=O&&window.docusaurus.prefetch(O),()=>{_&&C&&C.disconnect()})),[O,_,v]);const x=null!==(w=null==O?void 0:O.startsWith("#"))&&void 0!==w&&w,E=!O||!v||x;return O&&v&&!x&&!d&&m.collectLink(O),E?a.a.createElement("a",Object.assign({href:O},g&&!v&&{target:"_blank",rel:"noopener noreferrer"},h)):a.a.createElement(N,Object.assign({},h,{onMouseEnter:()=>{k.current||null==O||(window.docusaurus.preload(O),k.current=!0)},innerRef:e=>{var n,t;_&&e&&v&&(n=e,t=()=>{null!=O&&window.docusaurus.prefetch(O)},C=new window.IntersectionObserver((e=>{e.forEach((e=>{n===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(C.unobserve(n),C.disconnect(),t())}))})),C.observe(n))},to:O||""},e&&{isActive:p,activeClassName:l}))}},462:function(e,n,t){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}t.d(n,"b",(function(){return r})),t.d(n,"a",(function(){return a}))}}]);