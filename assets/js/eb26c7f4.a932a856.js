(window.webpackJsonp=window.webpackJsonp||[]).push([[341],{418:function(t,r,e){"use strict";e.r(r),e.d(r,"frontMatter",(function(){return c})),e.d(r,"metadata",(function(){return i})),e.d(r,"toc",(function(){return n})),e.d(r,"default",(function(){return s}));var a=e(3),o=(e(0),e(454));const c={title:"Struct tauri::api::file::Extract",sidebar_label:"struct.Extract",custom_edit_url:null},i={unversionedId:"api/rust/tauri/api/file/struct.Extract",id:"api/rust/tauri/api/file/struct.Extract",isDocsHomePage:!1,title:"Struct tauri::api::file::Extract",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/api/file/struct.Extract.md",sourceDirName:"api/rust/tauri/api/file",slug:"/api/rust/tauri/api/file/struct.Extract",permalink:"/tauri-docs/docs/api/rust/tauri/api/file/struct.Extract",editUrl:null,version:"current",sidebar_label:"struct.Extract",frontMatter:{title:"Struct tauri::api::file::Extract",sidebar_label:"struct.Extract",custom_edit_url:null},sidebar:"docs",previous:{title:"Fn tauri::api::file::read_string",permalink:"/tauri-docs/docs/api/rust/tauri/api/file/fn.read_string"},next:{title:"Struct tauri::api::file::Move",permalink:"/tauri-docs/docs/api/rust/tauri/api/file/struct.Move"}},n=[{value:"Implementations",id:"implementations",children:[{value:"impl&lt;&#39;a&gt; struct tauri::api::file::Extract&lt;&#39;a&gt;goto source code",id:"impla-struct-tauriapifileextractagoto-source-code",children:[]}]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl&lt;&#39;a&gt; trait core::fmt::Debug for struct tauri::api::file::Extract&lt;&#39;a&gt;goto source code",id:"impla-trait-corefmtdebug-for-struct-tauriapifileextractagoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;&#39;a&gt; trait std::panic::RefUnwindSafe for struct tauri::api::file::Extract&lt;&#39;a&gt;",id:"impla-trait-stdpanicrefunwindsafe-for-struct-tauriapifileextracta",children:[]},{value:"impl&lt;&#39;a&gt; trait core::marker::Send for struct tauri::api::file::Extract&lt;&#39;a&gt;",id:"impla-trait-coremarkersend-for-struct-tauriapifileextracta",children:[]},{value:"impl&lt;&#39;a&gt; trait core::marker::Sync for struct tauri::api::file::Extract&lt;&#39;a&gt;",id:"impla-trait-coremarkersync-for-struct-tauriapifileextracta",children:[]},{value:"impl&lt;&#39;a&gt; trait core::marker::Unpin for struct tauri::api::file::Extract&lt;&#39;a&gt;",id:"impla-trait-coremarkerunpin-for-struct-tauriapifileextracta",children:[]},{value:"impl&lt;&#39;a&gt; trait std::panic::UnwindSafe for struct tauri::api::file::Extract&lt;&#39;a&gt;",id:"impla-trait-stdpanicunwindsafe-for-struct-tauriapifileextracta",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],l={toc:n};function s({components:t,...r}){return Object(o.b)("wrapper",Object(a.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Extract<'a> { /* fields omitted */ }\n")),Object(o.b)("p",null,"Expand description"),Object(o.b)("p",null,"The extract manager to retrieve files from archives."),Object(o.b)("h2",{id:"implementations"},"Implementations"),Object(o.b)("h3",{id:"impla-struct-tauriapifileextractagoto-source-code"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#54-198",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-from_sourcesource-a-struct-stdpathpath---struct-tauriapifileextractagoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.from_source"},"from_source"),"(source: &'a ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),") -> ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#56-61",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Create an ","`","Extractor from a source path"),Object(o.b)("h4",{id:"pub-fn-archive_formatmut-self-format-enum-tauriapifilearchiveformat---mutselfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.archive_format"},"archive_format"),"(&mut self, format: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.ArchiveFormat",title:"enum tauri::api::file::ArchiveFormat"},"ArchiveFormat"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#65-68",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Specify an archive format of the source being extracted. If not specified, the archive format will determined from the file extension."),Object(o.b)("h4",{id:"pub-fn-extract_intoself-into_dir-struct-stdpathpath---type-tauriapiresultgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.extract_into"},"extract_into"),"(&self, into_dir: &",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),") -> ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::api::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#83-129",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Extract an entire source archive into a specified path. If the source is a single compressed file and not an archive, it will be extracted into a file with the same name inside of ",Object(o.b)("inlineCode",{parentName:"p"},"into_dir"),"."),Object(o.b)("h4",{id:"pub-fn-extract_filet-trait-coreconvertasrefstruct-stdpathpath-self-into_dir-struct-stdpathpath-file_to_extract-t----type-tauriapiresultgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.extract_file"},"extract_file"),"<","T: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.AsRef.html",title:"trait core::convert::AsRef"},"AsRef"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),">>( &self, into_dir: &",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),", file_to_extract: T ) -> ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::api::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#134-197",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Extract a single file from a source and save to a file of the same name in ",Object(o.b)("inlineCode",{parentName:"p"},"into_dir"),". If the source is a single compressed file, it will be saved with the name ",Object(o.b)("inlineCode",{parentName:"p"},"file_to_extract")," in the specified ",Object(o.b)("inlineCode",{parentName:"p"},"into_dir"),"."),Object(o.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(o.b)("h3",{id:"impla-trait-corefmtdebug-for-struct-tauriapifileextractagoto-source-code"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#30",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"fn-fmtself-f-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/extract.rs#30",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Formats the value using the given formatter. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(o.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(o.b)("h3",{id:"impla-trait-stdpanicrefunwindsafe-for-struct-tauriapifileextracta"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>"),Object(o.b)("h3",{id:"impla-trait-coremarkersend-for-struct-tauriapifileextracta"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>"),Object(o.b)("h3",{id:"impla-trait-coremarkersync-for-struct-tauriapifileextracta"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>"),Object(o.b)("h3",{id:"impla-trait-coremarkerunpin-for-struct-tauriapifileextracta"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>"),Object(o.b)("h3",{id:"impla-trait-stdpanicunwindsafe-for-struct-tauriapifileextracta"},"impl","<","'a> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Extract",title:"struct tauri::api::file::Extract"},"Extract"),"<","'a>"),Object(o.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(o.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Gets the ",Object(o.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(o.b)("inlineCode",{parentName:"p"},"self"),". ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Immutably borrows from an owned value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Mutably borrows from an owned value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(o.b)("p",null,"The type returned in the event of a conversion error."),Object(o.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(o.b)("p",null,"The type returned in the event of a conversion error."),Object(o.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(o.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}s.isMDXComponent=!0},454:function(t,r,e){"use strict";e.d(r,"a",(function(){return p})),e.d(r,"b",(function(){return b}));var a=e(0),o=e.n(a);function c(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function i(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,a)}return e}function n(t){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?i(Object(e),!0).forEach((function(r){c(t,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(e,r))}))}return t}function l(t,r){if(null==t)return{};var e,a,o=function(t,r){if(null==t)return{};var e,a,o={},c=Object.keys(t);for(a=0;a<c.length;a++)e=c[a],r.indexOf(e)>=0||(o[e]=t[e]);return o}(t,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(a=0;a<c.length;a++)e=c[a],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(o[e]=t[e])}return o}var s=o.a.createContext({}),u=function(t){var r=o.a.useContext(s),e=r;return t&&(e="function"==typeof t?t(r):n(n({},r),t)),e},p=function(t){var r=u(t.components);return o.a.createElement(s.Provider,{value:r},t.children)},m={inlineCode:"code",wrapper:function(t){var r=t.children;return o.a.createElement(o.a.Fragment,{},r)}},h=o.a.forwardRef((function(t,r){var e=t.components,a=t.mdxType,c=t.originalType,i=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),p=u(e),h=a,b=p["".concat(i,".").concat(h)]||p[h]||m[h]||c;return e?o.a.createElement(b,n(n({ref:r},s),{},{components:e})):o.a.createElement(b,n({ref:r},s))}));function b(t,r){var e=arguments,a=r&&r.mdxType;if("string"==typeof t||a){var c=e.length,i=new Array(c);i[0]=h;var n={};for(var l in r)hasOwnProperty.call(r,l)&&(n[l]=r[l]);n.originalType=t,n.mdxType="string"==typeof t?t:a,i[1]=n;for(var s=2;s<c;s++)i[s]=e[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,e)}h.displayName="MDXCreateElement"}}]);