(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{189:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return n})),r.d(e,"metadata",(function(){return i})),r.d(e,"toc",(function(){return o})),r.d(e,"default",(function(){return s}));var u=r(3),a=(r(0),r(454));const n={title:"Trait tauri::async_runtime::RuntimeHandle",sidebar_label:"trait.RuntimeHandle",custom_edit_url:null},i={unversionedId:"api/rust/tauri/async_runtime/trait.RuntimeHandle",id:"api/rust/tauri/async_runtime/trait.RuntimeHandle",isDocsHomePage:!1,title:"Trait tauri::async_runtime::RuntimeHandle",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/async_runtime/trait.RuntimeHandle.md",sourceDirName:"api/rust/tauri/async_runtime",slug:"/api/rust/tauri/async_runtime/trait.RuntimeHandle",permalink:"/tauri-docs/docs/api/rust/tauri/async_runtime/trait.RuntimeHandle",editUrl:null,version:"current",sidebar_label:"trait.RuntimeHandle",frontMatter:{title:"Trait tauri::async_runtime::RuntimeHandle",sidebar_label:"trait.RuntimeHandle",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::async_runtime::TokioJoinHandle",permalink:"/tauri-docs/docs/api/rust/tauri/async_runtime/struct.TokioJoinHandle"},next:{title:"Struct tauri::command::CommandItem",permalink:"/tauri-docs/docs/api/rust/tauri/command/struct.CommandItem"}},o=[{value:"Required methods",id:"required-methods",children:[]},{value:"Implementors",id:"implementors",children:[{value:"impl trait tauri::async_runtime::RuntimeHandle for struct tauri::async_runtime::Handlegoto source code",id:"impl-trait-tauriasync_runtimeruntimehandle-for-struct-tauriasync_runtimehandlegoto-source-code",children:[]}]}],c={toc:o};function s({components:t,...e}){return Object(a.b)("wrapper",Object(u.a)({},c,e,{components:t,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rs"},"pub trait RuntimeHandle: Debug + Clone + Sync + Sync {\n    fn spawn<F:\xa0Future>(&self, task: F) -> JoinHandle<F::Output>\u24d8\nNotable traits for JoinHandle<T>\nimpl<T> Future for JoinHandle<T>    type Output = Result<T>;\n\n\xa0\xa0\xa0 where\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0F: Future + Send + 'static,\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0F::Output: Send + 'static;\n\n    fn block_on<F:\xa0Future>(&self, task: F) -> F::Output;\n}\n")),Object(a.b)("p",null,"Expand description"),Object(a.b)("p",null,"Runtime handle definition."),Object(a.b)("h2",{id:"required-methods"},"Required methods"),Object(a.b)("h4",{id:"fn-spawnf-trait-corefuturefuturefutureself-task-f---struct-tauriasync_runtimejoinhandleftype-corefuturefuturefutureoutput\u24d8notable-traits-for-struct-tauriasync_runtimejoinhandletimplt-future-for-joinhandlettype-output--resultt-where-f-trait-corefuturefuturefuture--trait-coremarkersend--static-ftype-corefuturefuturefutureoutput-trait-coremarkersend--staticgoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.spawn"},"spawn"),"<","F: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html",title:"trait core::future::future::Future"},"Future"),">(&self, task: F) -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.JoinHandle",title:"struct tauri::async_runtime::JoinHandle"},"JoinHandle"),"<","F::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html#associatedtype.Output",title:"type core::future::future::Future::Output"},"Output"),">\u24d8Notable traits for ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.JoinHandle",title:"struct tauri::async_runtime::JoinHandle"},"JoinHandle"),"<","T>",Object(a.b)("inlineCode",{parentName:"h4"},"impl<T> Future for JoinHandle<T>type Output = Result<T>;")," where F: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html",title:"trait core::future::future::Future"},"Future")," + ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static, F::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html#associatedtype.Output",title:"type core::future::future::Future::Output"},"Output"),": ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/async_runtime.rs#51-54",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Spawns a future onto the runtime."),Object(a.b)("h4",{id:"fn-block_onf-trait-corefuturefuturefutureself-task-f---ftype-corefuturefuturefutureoutputgoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.block_on"},"block_on"),"<","F: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html",title:"trait core::future::future::Future"},"Future"),">(&self, task: F) -> F::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html#associatedtype.Output",title:"type core::future::future::Future::Output"},"Output"),Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../src/tauri/async_runtime.rs#57",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Runs a future to completion on runtime."),Object(a.b)("h2",{id:"implementors"},"Implementors"),Object(a.b)("h3",{id:"impl-trait-tauriasync_runtimeruntimehandle-for-struct-tauriasync_runtimehandlegoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.RuntimeHandle",title:"trait tauri::async_runtime::RuntimeHandle"},"RuntimeHandle")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Handle",title:"struct tauri::async_runtime::Handle"},"Handle"),Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../src/tauri/async_runtime.rs#60-72",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-spawnf-trait-corefuturefuturefutureself-task-f---struct-tauriasync_runtimejoinhandleftype-corefuturefuturefutureoutput\u24d8notable-traits-for-struct-tauriasync_runtimejoinhandletimplt-future-for-joinhandlettype-output--resultt-where-f-trait-corefuturefuturefuture--trait-coremarkersend--static-ftype-corefuturefuturefutureoutput-trait-coremarkersend--static"},"fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.spawn"},"spawn"),"<","F: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html",title:"trait core::future::future::Future"},"Future"),">(&self, task: F) -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.JoinHandle",title:"struct tauri::async_runtime::JoinHandle"},"JoinHandle"),"<","F::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html#associatedtype.Output",title:"type core::future::future::Future::Output"},"Output"),">\u24d8Notable traits for ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.JoinHandle",title:"struct tauri::async_runtime::JoinHandle"},"JoinHandle"),"<","T>",Object(a.b)("inlineCode",{parentName:"h4"},"impl<T> Future for JoinHandle<T>type Output = Result<T>;")," where F: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html",title:"trait core::future::future::Future"},"Future")," + ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static, F::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html#associatedtype.Output",title:"type core::future::future::Future::Output"},"Output"),": ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../src/tauri/async_runtime.rs#61-67",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-block_onf-trait-corefuturefuturefutureself-task-f---ftype-corefuturefuturefutureoutput"},"fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.block_on"},"block_on"),"<","F: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html",title:"trait core::future::future::Future"},"Future"),">(&self, task: F) -> F::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/future/future/trait.Future.html#associatedtype.Output",title:"type core::future::future::Future::Output"},"Output")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../src/tauri/async_runtime.rs#69-71",title:"goto source code"},"[","src","]")))}s.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return m}));var u=r(0),a=r.n(u);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);e&&(u=u.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,u)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,u,a=function(t,e){if(null==t)return{};var r,u,a={},n=Object.keys(t);for(u=0;u<n.length;u++)r=n[u],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(u=0;u<n.length;u++)r=n[u],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=a.a.createContext({}),l=function(t){var e=a.a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},p=function(t){var e=l(t.components);return a.a.createElement(s.Provider,{value:e},t.children)},f={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},d=a.a.forwardRef((function(t,e){var r=t.components,u=t.mdxType,n=t.originalType,i=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),p=l(r),d=u,m=p["".concat(i,".").concat(d)]||p[d]||f[d]||n;return r?a.a.createElement(m,o(o({ref:e},s),{},{components:r})):a.a.createElement(m,o({ref:e},s))}));function m(t,e){var r=arguments,u=e&&e.mdxType;if("string"==typeof t||u){var n=r.length,i=new Array(n);i[0]=d;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:u,i[1]=o;for(var s=2;s<n;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);