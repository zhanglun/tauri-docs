(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{153:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return c}));var r=t(3),i=t(7),a=(t(0),t(454)),o={title:"Continuous Integration"},s={unversionedId:"usage/guides/webdriver/ci",id:"usage/guides/webdriver/ci",isDocsHomePage:!1,title:"Continuous Integration",description:"Utilizing Linux and some programs to create a fake display, it is possible to run [WebDriver] tests with",source:"@site/docs/zh-hans/usage/guides/webdriver/ci.md",sourceDirName:"usage/guides/webdriver",slug:"/usage/guides/webdriver/ci",permalink:"/tauri-docs/docs/usage/guides/webdriver/ci",editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/zh-hans/usage/guides/webdriver/ci.md",version:"current",frontMatter:{title:"Continuous Integration"},sidebar:"docs",previous:{title:"Selenium",permalink:"/tauri-docs/docs/usage/guides/webdriver/example/selenium"},next:{title:"Workflow",permalink:"/tauri-docs/docs/usage/ci-cd/workflow"}},u=[],l={toc:u};function c(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Utilizing Linux and some programs to create a fake display, it is possible to run ",Object(a.b)("a",{parentName:"p",href:"https://www.w3.org/TR/webdriver/"},"WebDriver")," tests with\n",Object(a.b)("a",{parentName:"p",href:"https://crates.io/crates/tauri-driver"},Object(a.b)("inlineCode",{parentName:"a"},"tauri-driver"))," on your CI. The following example will use the ",Object(a.b)("a",{parentName:"p",href:"https://webdriver.io/"},"WebdriverIO")," example we ",Object(a.b)("a",{parentName:"p",href:"example/webdriverio"},"previously built together")," and\nGitHub Actions."),Object(a.b)("p",null,"This means the following assumptions:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"The Tauri application is in the repository root and the binary builds when running ",Object(a.b)("inlineCode",{parentName:"li"},"cargo build --release"),"."),Object(a.b)("li",{parentName:"ol"},"The ",Object(a.b)("a",{parentName:"li",href:"https://webdriver.io/"},"WebDriverIO")," test runner is in the ",Object(a.b)("inlineCode",{parentName:"li"},"webdriver/webdriverio")," directory and runs when ",Object(a.b)("inlineCode",{parentName:"li"},"yarn test")," is used in that\ndirectory.")),Object(a.b)("p",null,"The following is a commented GitHub Actions workflow file at ",Object(a.b)("inlineCode",{parentName:"p"},".github/workflows/webdriver.yml")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"# run this action when the repository is pushed to\non: [ push ]\n\n# the name of our workflow\nname: WebDriver\n\njobs:\n  # a single job named test\n  test:\n    # the display name the test job\n    name: WebDriverIO Test Runner\n\n    # we want to run on the latest linux environment\n    runs-on: ubuntu-latest\n\n    # the steps our job runs **in order**\n    steps:\n      # checkout the code on the workflow runner\n      - uses: actions/checkout@v2\n\n      # install system dependencies that Tauri needs to compile on Linux.\n      # note the extra dependencies for `tauri-driver` to run which are `webkit2gtk-driver` and  `xvfb`\n      - name: Tauri dependencies\n        run: >-\n          sudo apt-get update &&\n          sudo apt-get install -y\n          libgtk-3-dev\n          libgtksourceview-3.0-dev\n          webkit2gtk-4.0\n          libappindicator3-dev\n          webkit2gtk-driver\n          xvfb\n\n      # install the latest Rust stable\n      - name: Rust stable\n        uses: actions-rs/toolchain@v1\n        with:\n          toolchain: stable\n\n      # we run our rust tests before the webdriver tests to avoid testing a broken application\n      - name: Cargo test\n        uses: actions-rs/cargo@v1\n        with:\n          command: test\n\n      # build a release build of our application to be used during our WebdriverIO tests\n      - name: Cargo build\n        uses: actions-rs/cargo@v1\n        with:\n          command: build\n          args: --release\n\n      # install the latest stable node version at the time of writing\n      - name: Node v16\n        uses: actions/setup-node@v1\n        with:\n          node-version: 16.x\n\n      # install our Node.js dependencies with Yarn\n      - name: Yarn install\n        run: yarn install\n        working-directory: webdriver/webdriverio\n\n      # install the latest version of `tauri-driver`.\n      # note: the tauri-driver version is independent of any other Tauri versions\n      - name: Install tauri-driver\n        uses: actions-rs/cargo@v1\n        with:\n          command: install\n          args: tauri-driver\n\n      # run the WebdriverIO test suite.\n      # we run it through `xvfb-run` (the dependency we installed earlier) to have a fake\n      # display server which allows our application to run headless without any changes to the code\n      - name: WebdriverIO\n        run: xvfb-run yarn test\n        working-directory: webdriver/webdriverio\n")))}c.isMDXComponent=!0},454:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),c=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},p=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=c(t),p=r,m=d["".concat(o,".").concat(p)]||d[p]||b[p]||a;return t?i.a.createElement(m,s(s({ref:n},l),{},{components:t})):i.a.createElement(m,s({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=p;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);