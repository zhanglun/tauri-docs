(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{175:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return n})),r.d(t,"default",(function(){return s}));var o=r(3),a=(r(0),r(454));const i={title:"Enum tauri::api::path::BaseDirectory",sidebar_label:"enum.BaseDirectory",custom_edit_url:null},c={unversionedId:"api/rust/tauri/api/path/enum.BaseDirectory",id:"api/rust/tauri/api/path/enum.BaseDirectory",isDocsHomePage:!1,title:"Enum tauri::api::path::BaseDirectory",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/api/path/enum.BaseDirectory.md",sourceDirName:"api/rust/tauri/api/path",slug:"/api/rust/tauri/api/path/enum.BaseDirectory",permalink:"/tauri-docs/docs/api/rust/tauri/api/path/enum.BaseDirectory",editUrl:null,version:"current",sidebar_label:"enum.BaseDirectory",frontMatter:{title:"Enum tauri::api::path::BaseDirectory",sidebar_label:"enum.BaseDirectory",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::api::http::ResponseData",permalink:"/tauri-docs/docs/api/rust/tauri/api/http/struct.ResponseData"},next:{title:"Fn tauri::api::path::app_dir",permalink:"/tauri-docs/docs/api/rust/tauri/api/path/fn.app_dir"}},n=[{value:"Variants (Non-exhaustive)",id:"variants-non-exhaustive",children:[]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::clone::Clone for enum tauri::api::path::BaseDirectorygoto source code",id:"impl-trait-corecloneclone-for-enum-tauriapipathbasedirectorygoto-source-code",children:[]},{value:"impl trait core::fmt::Debug for enum tauri::api::path::BaseDirectorygoto source code",id:"impl-trait-corefmtdebug-for-enum-tauriapipathbasedirectorygoto-source-code",children:[]},{value:"impl&lt;&#39;de&gt; trait serde::de::Deserialize&lt;&#39;de&gt; for enum tauri::api::path::BaseDirectorygoto source code",id:"implde-trait-serdededeserializede-for-enum-tauriapipathbasedirectorygoto-source-code",children:[]},{value:"impl trait serde::ser::Serialize for enum tauri::api::path::BaseDirectorygoto source code",id:"impl-trait-serdeserserialize-for-enum-tauriapipathbasedirectorygoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl trait std::panic::RefUnwindSafe for enum tauri::api::path::BaseDirectory",id:"impl-trait-stdpanicrefunwindsafe-for-enum-tauriapipathbasedirectory",children:[]},{value:"impl trait core::marker::Send for enum tauri::api::path::BaseDirectory",id:"impl-trait-coremarkersend-for-enum-tauriapipathbasedirectory",children:[]},{value:"impl trait core::marker::Sync for enum tauri::api::path::BaseDirectory",id:"impl-trait-coremarkersync-for-enum-tauriapipathbasedirectory",children:[]},{value:"impl trait core::marker::Unpin for enum tauri::api::path::BaseDirectory",id:"impl-trait-coremarkerunpin-for-enum-tauriapipathbasedirectory",children:[]},{value:"impl trait std::panic::UnwindSafe for enum tauri::api::path::BaseDirectory",id:"impl-trait-stdpanicunwindsafe-for-enum-tauriapipathbasedirectory",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;&#39;de, D, R&gt; trait tauri::command::CommandArg&lt;&#39;de, R&gt; for D where R: trait tauri::Runtime, D: trait serde::de::Deserialize&lt;&#39;de&gt;,goto source code",id:"implde-d-r-trait-tauricommandcommandargde-r-for-d-where-r-trait-tauriruntime-d-trait-serdededeserializedegoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::borrow::ToOwned for T where T: trait core::clone::Clone,goto source code",id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]},{value:"impl&lt;T&gt; trait serde::de::DeserializeOwned for T where T: for&lt;&#39;de&gt; trait serde::de::Deserialize&lt;&#39;de&gt;,",id:"implt-trait-serdededeserializeowned-for-t-where-t-forde-trait-serdededeserializede",children:[]}]}],l={toc:n};function s({components:e,...t}){return Object(a.b)("wrapper",Object(o.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rs"},"#[repr(u16)]\n\n#[non_exhaustive]\npub enum BaseDirectory {\nShow variants    Audio,\n    Cache,\n    Config,\n    Data,\n    LocalData,\n    Desktop,\n    Document,\n    Download,\n    Executable,\n    Font,\n    Home,\n    Picture,\n    Public,\n    Runtime,\n    Template,\n    Video,\n    Resource,\n    App,\n    Current,\n}\n")),Object(a.b)("p",null,"Expand description"),Object(a.b)("p",null,"A base directory to be used in ",Object(a.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/fn.resolve_path",title:"resolve_path"},Object(a.b)("inlineCode",{parentName:"a"},"resolve_path")),"."),Object(a.b)("p",null,"The base directory is the optional root of a file system operation. If informed by the API call, all paths will be relative to the path of the given directory."),Object(a.b)("p",null,"For more information, check the ",Object(a.b)("a",{parentName:"p",href:"https://docs.rs/dirs_next/"},Object(a.b)("inlineCode",{parentName:"a"},"dirs_next")," documentation"),"."),Object(a.b)("h2",{id:"variants-non-exhaustive"},"Variants (Non-exhaustive)"),Object(a.b)("p",null,"This enum is marked as non-exhaustive"),Object(a.b)("p",null,"Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Audio")),Object(a.b)("p",null,"The Audio directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Cache")),Object(a.b)("p",null,"The Cache directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Config")),Object(a.b)("p",null,"The Config directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Data")),Object(a.b)("p",null,"The Data directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"LocalData")),Object(a.b)("p",null,"The LocalData directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Desktop")),Object(a.b)("p",null,"The Desktop directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Document")),Object(a.b)("p",null,"The Document directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Download")),Object(a.b)("p",null,"The Download directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Executable")),Object(a.b)("p",null,"The Executable directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Font")),Object(a.b)("p",null,"The Font directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Home")),Object(a.b)("p",null,"The Home directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Picture")),Object(a.b)("p",null,"The Picture directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Public")),Object(a.b)("p",null,"The Public directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Runtime")),Object(a.b)("p",null,"The Runtime directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Template")),Object(a.b)("p",null,"The Template directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Video")),Object(a.b)("p",null,"The Video directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Resource")),Object(a.b)("p",null,"The Resource directory."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"App")),Object(a.b)("p",null,"The default App config directory. Resolves to ",Object(a.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/enum.BaseDirectory#variant.Config",title:"BaseDirectory::Config"},Object(a.b)("inlineCode",{parentName:"a"},"BaseDirectory::Config")),"."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Current")),Object(a.b)("p",null,"The current working directory."),Object(a.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-corecloneclone-for-enum-tauriapipathbasedirectorygoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory"),Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-cloneself---enum-tauriapipathbasedirectorygoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"clone"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory"),Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Returns a copy of the value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"Read more")),Object(a.b)("h4",{id:"fn-clone_frommut-self-source-self100goto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"clone_from"),"(&mut self, source: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self)1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/clone.rs.html#130",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs copy-assignment from ",Object(a.b)("inlineCode",{parentName:"p"},"source"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"Read more")),Object(a.b)("h3",{id:"impl-trait-corefmtdebug-for-enum-tauriapipathbasedirectorygoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory"),Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-fmtself-f-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Formats the value using the given formatter. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(a.b)("h3",{id:"implde-trait-serdededeserializede-for-enum-tauriapipathbasedirectorygoto-source-code"},"impl","<","'de> ",Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de> for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory"),Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-deserializeddeserializer-d---enum-coreresultresultself-dtype-serdededeserializererror-where-d-trait-serdededeserializerdegoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html#tymethod.deserialize"},"deserialize"),"<","D>(deserializer: D) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","Self, D::",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserializer.html#associatedtype.Error",title:"type serde::de::Deserializer::Error"},"Error"),"> where D: ",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserializer.html",title:"trait serde::de::Deserializer"},"Deserializer"),"<","'de>,",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Deserialize this value from the given Serde deserializer. ",Object(a.b)("a",{parentName:"p",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html#tymethod.deserialize"},"Read more")),Object(a.b)("h3",{id:"impl-trait-serdeserserialize-for-enum-tauriapipathbasedirectorygoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory"),Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-serializesself-serializer-s---enum-coreresultresultstype-serdeserserializerok-stype-serdeserserializererror-where-s-trait-serdeserserializergoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html#tymethod.serialize"},"serialize"),"<","S>(&self, serializer: S) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","S::",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html#associatedtype.Ok",title:"type serde::ser::Serializer::Ok"},"Ok"),", S::",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html#associatedtype.Error",title:"type serde::ser::Serializer::Error"},"Error"),"> where S: ",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serializer.html",title:"trait serde::ser::Serializer"},"Serializer"),",",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/path.rs#22",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Serialize this value into the given Serde serializer. ",Object(a.b)("a",{parentName:"p",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html#tymethod.serialize"},"Read more")),Object(a.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-enum-tauriapipathbasedirectory"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory")),Object(a.b)("h3",{id:"impl-trait-coremarkersend-for-enum-tauriapipathbasedirectory"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory")),Object(a.b)("h3",{id:"impl-trait-coremarkersync-for-enum-tauriapipathbasedirectory"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory")),Object(a.b)("h3",{id:"impl-trait-coremarkerunpin-for-enum-tauriapipathbasedirectory"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory")),Object(a.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-enum-tauriapipathbasedirectory"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.BaseDirectory",title:"enum tauri::api::path::BaseDirectory"},"BaseDirectory")),Object(a.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(a.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Gets the ",Object(a.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(a.b)("inlineCode",{parentName:"p"},"self"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Immutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Mutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(a.b)("h3",{id:"implde-d-r-trait-tauricommandcommandargde-r-for-d-where-r-trait-tauriruntime-d-trait-serdededeserializedegoto-source-code"},"impl","<","'de, D, R> ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../command/trait.CommandArg",title:"trait tauri::command::CommandArg"},"CommandArg"),"<","'de, R> for D where R: ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),", D: ",Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de>,",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/command.rs#51-56",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-from_commandstruct-tauricommandcommanditemde-r---enum-coreresultresultd-struct-tauriinvokeerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../command/trait.CommandArg#tymethod.from_command"},"from_command"),"(",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../command/struct.CommandItem",title:"struct tauri::command::CommandItem"},"CommandItem"),"<","'de, R>) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","D, ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../struct.InvokeError",title:"struct tauri::InvokeError"},"InvokeError"),">",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/command.rs#52-55",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Derives an instance of ",Object(a.b)("inlineCode",{parentName:"p"},"Self")," from the ",Object(a.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../command/struct.CommandItem",title:"CommandItem"},Object(a.b)("inlineCode",{parentName:"a"},"CommandItem")),". ",Object(a.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../../command/trait.CommandArg#tymethod.from_command"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html",title:"trait alloc::borrow::ToOwned"},"ToOwned")," for T where T: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#84-96",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-owned--t"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned"},"Owned")," = T"),Object(a.b)("p",null,"The resulting type after obtaining ownership."),Object(a.b)("h4",{id:"pub-fn-to_ownedself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"to_owned"),"(&self) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#89",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Creates owned data from borrowed data, usually by cloning. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"Read more")),Object(a.b)("h4",{id:"pub-fn-clone_intoself-target-muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"clone_into"),"(&self, target: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T)",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#93",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(a.b)("inlineCode",{parentName:"p"},"toowned_clone_into"),")"),Object(a.b)("p",null,"recently added"),Object(a.b)("p",null,"Uses borrowed data to replace owned data, usually by cloning. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"Read more")),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(a.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"),Object(a.b)("h3",{id:"implt-trait-serdededeserializeowned-for-t-where-t-forde-trait-serdededeserializede"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.DeserializeOwned.html",title:"trait serde::de::DeserializeOwned"},"DeserializeOwned")," for T where T: for","<","'de> ",Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/serde/1.0.129/serde/de/trait.Deserialize.html",title:"trait serde::de::Deserialize"},"Deserialize"),"<","'de>,"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://docs.rs/serde/1.0.129/src/serde/de/mod.rs.html#603",title:"goto source code"},"[","src","]")))}s.isMDXComponent=!0},454:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return h}));var o=r(0),a=r.n(o);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},d=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(r),u=o,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||i;return r?a.a.createElement(h,n(n({ref:t},s),{},{components:r})):a.a.createElement(h,n({ref:t},s))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=u;var n={};for(var l in t)hasOwnProperty.call(t,l)&&(n[l]=t[l]);n.originalType=e,n.mdxType="string"==typeof e?e:o,c[1]=n;for(var s=2;s<i;s++)c[s]=r[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);