(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{318:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return i})),r.d(e,"metadata",(function(){return n})),r.d(e,"toc",(function(){return c})),r.d(e,"default",(function(){return l}));var o=r(3),a=(r(0),r(454));const i={title:"Enum tauri::http::MimeType",sidebar_label:"enum.MimeType",custom_edit_url:null},n={unversionedId:"api/rust/tauri/http/enum.MimeType",id:"api/rust/tauri/http/enum.MimeType",isDocsHomePage:!1,title:"Enum tauri::http::MimeType",description:"x3A;:MimeType,",source:"@site/docs/zh-hans/api/rust/tauri/http/enum.MimeType.md",sourceDirName:"api/rust/tauri/http",slug:"/api/rust/tauri/http/enum.MimeType",permalink:"/tauri-docs/docs/api/rust/tauri/http/enum.MimeType",editUrl:null,version:"current",sidebar_label:"enum.MimeType",frontMatter:{title:"Enum tauri::http::MimeType",sidebar_label:"enum.MimeType",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::http::version::Version",permalink:"/tauri-docs/docs/api/rust/tauri/http/version/struct.Version"},next:{title:"Struct tauri::http::HttpRange",permalink:"/tauri-docs/docs/api/rust/tauri/http/struct.HttpRange"}},c=[{value:"Variants",id:"variants",children:[]},{value:"Implementations",id:"implementations",children:[{value:"impl enum tauri::http::MimeType",id:"impl-enum-taurihttpmimetype",children:[]}]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::fmt::Display for enum tauri::http::MimeType",id:"impl-trait-corefmtdisplay-for-enum-taurihttpmimetype",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl trait std::panic::RefUnwindSafe for enum tauri::http::MimeType",id:"impl-trait-stdpanicrefunwindsafe-for-enum-taurihttpmimetype",children:[]},{value:"impl trait core::marker::Send for enum tauri::http::MimeType",id:"impl-trait-coremarkersend-for-enum-taurihttpmimetype",children:[]},{value:"impl trait core::marker::Sync for enum tauri::http::MimeType",id:"impl-trait-coremarkersync-for-enum-taurihttpmimetype",children:[]},{value:"impl trait core::marker::Unpin for enum tauri::http::MimeType",id:"impl-trait-coremarkerunpin-for-enum-taurihttpmimetype",children:[]},{value:"impl trait std::panic::UnwindSafe for enum tauri::http::MimeType",id:"impl-trait-stdpanicunwindsafe-for-enum-taurihttpmimetype",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::string::ToString for T where T: trait core::fmt::Display + ?trait core::marker::Sized,goto source code",id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],m={toc:c};function l({components:t,...e}){return Object(a.b)("wrapper",Object(o.a)({},m,e,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"x3A;:MimeType,"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rs"},"pub enum MimeType {\n    Css,\n    Csv,\n    Html,\n    Ico,\n    Js,\n    Json,\n    Jsonld,\n    OctetStream,\n    Rtf,\n    Svg,\n    Mp4,\n}\n")),Object(a.b)("p",null,"Expand description"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#important_mime_types_for_web_developers"},"Web Compatible MimeTypes")),Object(a.b)("h2",{id:"variants"},"Variants"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Css")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Csv")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Html")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Ico")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Js")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Json")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Jsonld")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"OctetStream")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Rtf")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Svg")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Mp4")),Object(a.b)("h2",{id:"implementations"},"Implementations"),Object(a.b)("h3",{id:"impl-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h4",{id:"pub-fn-parse_from_uriuri-str---enum-taurihttpmimetype"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.parse_from_uri"},"parse_from_uri"),"(uri: &",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("p",null,"parse a URI suffix to convert text/plain mimeType to their actual web compatible mimeType."),Object(a.b)("h4",{id:"pub-fn-parsecontent-u8-uri-str---struct-allocstringstring"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.parse"},"parse"),"(content: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&","["),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u8.html"},"u8"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"]"),", uri: &",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String")),Object(a.b)("p",null,"infer mimetype from content (or) URI if needed."),Object(a.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-corefmtdisplay-for-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterror"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">"),Object(a.b)("p",null,"Formats the value using the given formatter. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"Read more")),Object(a.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h3",{id:"impl-trait-coremarkersend-for-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h3",{id:"impl-trait-coremarkersync-for-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h3",{id:"impl-trait-coremarkerunpin-for-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-enum-taurihttpmimetype"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.MimeType",title:"enum tauri::http::MimeType"},"MimeType")),Object(a.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(a.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Gets the ",Object(a.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(a.b)("inlineCode",{parentName:"p"},"self"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Immutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Mutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html",title:"trait alloc::string::ToString"},"ToString")," for T where T: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2372-2386",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-default-fn-to_stringself---struct-allocstringstringgoto-source-code"},"pub default fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"to_string"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2378",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Converts the given value to a ",Object(a.b)("inlineCode",{parentName:"p"},"String"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"Read more")),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(a.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}l.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return s})),r.d(e,"b",(function(){return b}));var o=r(0),a=r.n(o);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function m(t,e){if(null==t)return{};var r,o,a=function(t,e){if(null==t)return{};var r,o,a={},i=Object.keys(t);for(o=0;o<i.length;o++)r=i[o],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)r=i[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var l=a.a.createContext({}),p=function(t){var e=a.a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},s=function(t){var e=p(t.components);return a.a.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},h=a.a.forwardRef((function(t,e){var r=t.components,o=t.mdxType,i=t.originalType,n=t.parentName,l=m(t,["components","mdxType","originalType","parentName"]),s=p(r),h=o,b=s["".concat(n,".").concat(h)]||s[h]||u[h]||i;return r?a.a.createElement(b,c(c({ref:e},l),{},{components:r})):a.a.createElement(b,c({ref:e},l))}));function b(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=r.length,n=new Array(i);n[0]=h;var c={};for(var m in e)hasOwnProperty.call(e,m)&&(c[m]=e[m]);c.originalType=t,c.mdxType="string"==typeof t?t:o,n[1]=c;for(var l=2;l<i;l++)n[l]=r[l];return a.a.createElement.apply(null,n)}return a.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);