(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{200:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return n})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return d}));var a=r(3),i=(r(0),r(454));const n={title:"Trait tauri::http::header::AsHeaderName",sidebar_label:"trait.AsHeaderName",custom_edit_url:null},s={unversionedId:"api/rust/tauri/http/header/trait.AsHeaderName",id:"api/rust/tauri/http/header/trait.AsHeaderName",isDocsHomePage:!1,title:"Trait tauri::http::header::AsHeaderName",description:"x3A;:AsHeaderName,",source:"@site/docs/zh-hans/api/rust/tauri/http/header/trait.AsHeaderName.md",sourceDirName:"api/rust/tauri/http/header",slug:"/api/rust/tauri/http/header/trait.AsHeaderName",permalink:"/tauri-docs/docs/api/rust/tauri/http/header/trait.AsHeaderName",editUrl:null,version:"current",sidebar_label:"trait.AsHeaderName",frontMatter:{title:"Trait tauri::http::header::AsHeaderName",sidebar_label:"trait.AsHeaderName",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::http::header::ValuesMut",permalink:"/tauri-docs/docs/api/rust/tauri/http/header/struct.ValuesMut"},next:{title:"Trait tauri::http::header::IntoHeaderName",permalink:"/tauri-docs/docs/api/rust/tauri/http/header/trait.IntoHeaderName"}},p=[{value:"Implementations on Foreign Types",id:"implementations-on-foreign-types",children:[{value:"impl&lt;&#39;a&gt; trait tauri::http::header::AsHeaderName for &amp;&#39;a struct alloc::string::String",id:"impla-trait-taurihttpheaderasheadername-for-a-struct-allocstringstring",children:[]},{value:"impl trait tauri::http::header::AsHeaderName for struct alloc::string::String",id:"impl-trait-taurihttpheaderasheadername-for-struct-allocstringstring",children:[]},{value:"impl&lt;&#39;a&gt; trait tauri::http::header::AsHeaderName for &amp;&#39;a str",id:"impla-trait-taurihttpheaderasheadername-for-a-str",children:[]}]},{value:"Implementors",id:"implementors",children:[{value:"impl trait tauri::http::header::AsHeaderName for struct tauri::http::header::HeaderName",id:"impl-trait-taurihttpheaderasheadername-for-struct-taurihttpheaderheadername",children:[]},{value:"impl&lt;&#39;a&gt; trait tauri::http::header::AsHeaderName for &amp;&#39;a struct tauri::http::header::HeaderName",id:"impla-trait-taurihttpheaderasheadername-for-a-struct-taurihttpheaderheadername",children:[]}]}],c={toc:p};function d({components:e,...t}){return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"x3A;:header::AsHeaderName,"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rs"},"pub trait AsHeaderName: Sealed { }\n")),Object(i.b)("p",null,"Expand description"),Object(i.b)("p",null,"A marker trait used to identify values that can be used as search keys to a ",Object(i.b)("inlineCode",{parentName:"p"},"HeaderMap"),"."),Object(i.b)("h2",{id:"implementations-on-foreign-types"},"Implementations on Foreign Types"),Object(i.b)("h3",{id:"impla-trait-taurihttpheaderasheadername-for-a-struct-allocstringstring"},"impl","<","'a> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.AsHeaderName",title:"trait tauri::http::header::AsHeaderName"},"AsHeaderName")," for &'a ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#3491",title:"goto source code"},"[","src","]")),Object(i.b)("h3",{id:"impl-trait-taurihttpheaderasheadername-for-struct-allocstringstring"},"impl ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.AsHeaderName",title:"trait tauri::http::header::AsHeaderName"},"AsHeaderName")," for ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#3470",title:"goto source code"},"[","src","]")),Object(i.b)("h3",{id:"impla-trait-taurihttpheaderasheadername-for-a-str"},"impl","<","'a> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.AsHeaderName",title:"trait tauri::http::header::AsHeaderName"},"AsHeaderName")," for &'a ",Object(i.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#3449",title:"goto source code"},"[","src","]")),Object(i.b)("h2",{id:"implementors"},"Implementors"),Object(i.b)("h3",{id:"impl-trait-taurihttpheaderasheadername-for-struct-taurihttpheaderheadername"},"impl ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.AsHeaderName",title:"trait tauri::http::header::AsHeaderName"},"AsHeaderName")," for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.HeaderName",title:"struct tauri::http::header::HeaderName"},"HeaderName")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#3407",title:"goto source code"},"[","src","]")),Object(i.b)("h3",{id:"impla-trait-taurihttpheaderasheadername-for-a-struct-taurihttpheaderheadername"},"impl","<","'a> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.AsHeaderName",title:"trait tauri::http::header::AsHeaderName"},"AsHeaderName")," for &'a ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.HeaderName",title:"struct tauri::http::header::HeaderName"},"HeaderName")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#3428",title:"goto source code"},"[","src","]")))}d.isMDXComponent=!0},454:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var a=r(0),i=r.n(a);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=i.a.createContext({}),o=function(e){var t=i.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=o(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},h=i.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=o(r),h=a,m=u["".concat(s,".").concat(h)]||u[h]||l[h]||n;return r?i.a.createElement(m,p(p({ref:t},d),{},{components:r})):i.a.createElement(m,p({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,s=new Array(n);s[0]=h;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var d=2;d<n;d++)s[d]=r[d];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);