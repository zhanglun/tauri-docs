(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{239:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return i})),r.d(e,"metadata",(function(){return n})),r.d(e,"toc",(function(){return c})),r.d(e,"default",(function(){return s}));var a=r(3),o=(r(0),r(454));const i={title:"Struct tauri::Builder",sidebar_label:"struct.Builder",custom_edit_url:null},n={unversionedId:"api/rust/tauri/struct.Builder",id:"api/rust/tauri/struct.Builder",isDocsHomePage:!1,title:"Struct tauri::Builder",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/struct.Builder.md",sourceDirName:"api/rust/tauri",slug:"/api/rust/tauri/struct.Builder",permalink:"/tauri-docs/docs/api/rust/tauri/struct.Builder",editUrl:null,version:"current",sidebar_label:"struct.Builder",frontMatter:{title:"Struct tauri::Builder",sidebar_label:"struct.Builder",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::AppHandle",permalink:"/tauri-docs/docs/api/rust/tauri/struct.AppHandle"},next:{title:"Struct tauri::CloseRequestApi",permalink:"/tauri-docs/docs/api/rust/tauri/struct.CloseRequestApi"}},c=[{value:"Implementations",id:"implementations",children:[{value:"impl&lt;R: trait tauri::Runtime&gt; struct tauri::Builder&lt;R&gt;goto source code",id:"implr-trait-tauriruntime-struct-tauribuilderrgoto-source-code",children:[]}]},{value:"Panics",id:"panics",children:[]},{value:"Mutability",id:"mutability",children:[]},{value:"Example",id:"example",children:[]},{value:"Arguments",id:"arguments",children:[]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::default::Default for struct tauri::Builder&lt;struct tauri::Wry&gt;goto source code",id:"impl-trait-coredefaultdefault-for-struct-tauribuilderstruct-tauriwrygoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;R&gt; !trait std::panic::RefUnwindSafe for struct tauri::Builder&lt;R&gt;",id:"implr-trait-stdpanicrefunwindsafe-for-struct-tauribuilderr",children:[]},{value:"impl&lt;R&gt; trait core::marker::Send for struct tauri::Builder&lt;R&gt; where &lt;&lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::Dispatcher as Dispatch&gt;::WindowBuilder: trait core::marker::Send,",id:"implr-trait-coremarkersend-for-struct-tauribuilderr-where-r-as-trait-tauriruntimetype-tauriruntimedispatcher-as-dispatchwindowbuilder-trait-coremarkersend",children:[]},{value:"impl&lt;R&gt; !trait core::marker::Sync for struct tauri::Builder&lt;R&gt;",id:"implr-trait-coremarkersync-for-struct-tauribuilderr",children:[]},{value:"impl&lt;R&gt; trait core::marker::Unpin for struct tauri::Builder&lt;R&gt; where &lt;&lt;R as trait tauri::Runtime&gt;::type tauri::Runtime::Dispatcher as Dispatch&gt;::WindowBuilder: trait core::marker::Unpin,",id:"implr-trait-coremarkerunpin-for-struct-tauribuilderr-where-r-as-trait-tauriruntimetype-tauriruntimedispatcher-as-dispatchwindowbuilder-trait-coremarkerunpin",children:[]},{value:"impl&lt;R&gt; !trait std::panic::UnwindSafe for struct tauri::Builder&lt;R&gt;",id:"implr-trait-stdpanicunwindsafe-for-struct-tauribuilderr",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],u={toc:c};function s({components:t,...e}){return Object(o.b)("wrapper",Object(a.a)({},u,e,{components:t,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Builder<R:\xa0Runtime> { /* fields omitted */ }\n")),Object(o.b)("p",null,"Expand description"),Object(o.b)("p",null,"Builds a Tauri application."),Object(o.b)("h2",{id:"implementations"},"Implementations"),Object(o.b)("h3",{id:"implr-trait-tauriruntime-struct-tauribuilderrgoto-source-code"},"impl","<","R: ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<","R>",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/app.rs#589-1043",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-new---selfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.new"},"new"),"() -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#591-608",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates a new App builder."),Object(o.b)("h4",{id:"pub-fn-invoke_handlerfself-invoke_handler-f---self-where-f-trait-coreopsfunctionfnstruct-tauriinvoker--trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.invoke_handler"},"invoke_handler"),"<","F>(self, invoke_handler: F) -> Self where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Invoke",title:"struct tauri::Invoke"},"Invoke"),"<","R>) + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#611-617",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Defines the JS message handler callback."),Object(o.b)("h4",{id:"pub-fn-setupfself-setup-f---self-where-f-trait-coreopsfunctionfnmut-struct-tauriappr---enum-coreresultresult-struct-allocboxedboxdyn-trait-stderrorerror--trait-coremarkersend--trait-coremarkersend--staticgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.setup"},"setup"),"<","F>(self, setup: F) -> Self where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(&mut ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.App",title:"struct tauri::App"},"App"),"<","R>) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/boxed/struct.Box.html",title:"struct alloc::boxed::Box"},"Box"),"<","dyn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send"),">> + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#620-626",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Defines the setup hook."),Object(o.b)("h4",{id:"pub-fn-on_page_loadfself-on_page_load-f---self-where-f-trait-coreopsfunctionfnstruct-tauriwindowwindowr-struct-tauripageloadpayload--trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.on_page_load"},"on_page_load"),"<","F>(self, on_page_load: F) -> Self where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/window/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>, ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.PageLoadPayload",title:"struct tauri::PageLoadPayload"},"PageLoadPayload"),") + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#629-635",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Defines the page load hook."),Object(o.b)("h4",{id:"pub-fn-pluginp-trait-tauripluginpluginr--staticself-plugin-p---selfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.plugin"},"plugin"),"<","P: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/plugin/trait.Plugin",title:"trait tauri::plugin::Plugin"},"Plugin"),"<","R> + 'static>(self, plugin: P) -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#638-641",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Adds a plugin to the runtime."),Object(o.b)("h4",{id:"pub-fn-managetself-state-t---self-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.manage"},"manage"),"<","T>(self, state: T) -> Self where T: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#718-728",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Add ",Object(o.b)("inlineCode",{parentName:"p"},"state")," to the state managed by the application."),Object(o.b)("p",null,"This method can be called any number of times as long as each call refers to a different ",Object(o.b)("inlineCode",{parentName:"p"},"T"),"."),Object(o.b)("p",null,"Managed state can be retrieved by any request handler via the ",Object(o.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/struct.State"},Object(o.b)("inlineCode",{parentName:"a"},"State"))," request guard. In particular, if a value of type ",Object(o.b)("inlineCode",{parentName:"p"},"T")," is managed by Tauri, adding ",Object(o.b)("inlineCode",{parentName:"p"},"State<T>")," to the list of arguments in a request handler instructs Tauri to retrieve the managed value."),Object(o.b)("h2",{id:"panics"},"Panics"),Object(o.b)("p",null,"Panics if state of type ",Object(o.b)("inlineCode",{parentName:"p"},"T")," is already being managed."),Object(o.b)("h2",{id:"mutability"},"Mutability"),Object(o.b)("p",null,"Since the managed state is global and must be ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"Send"},Object(o.b)("inlineCode",{parentName:"a"},"Send"))," + ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"Sync"},Object(o.b)("inlineCode",{parentName:"a"},"Sync")),", mutations can only happen through interior mutability:"),Object(o.b)("p",null,"\u24d8"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-rs"},'use std::{collections::HashMap, sync::Mutex};\nuse tauri::State;\n// here we use Mutex to achieve interior mutability\nstruct Storage(Mutex<HashMap<u64, String>>);\nstruct Connection;\nstruct DbConnection(Mutex<Option<Connection>>);\n\n#[tauri::command]\n\nfn connect(connection: State<DbConnection>) {\n  // initialize the connection, mutating the state with interior mutability\n  *connection.0.lock().unwrap() = Some(Connection {});\n}\n\n#[tauri::command]\nfn storage_insert(key: u64, value: String, storage: State<Storage>) {\n  // mutate the storage behind the Mutex\n  storage.0.lock().unwrap().insert(key, value);\n}\n\nfn main() {\n  Builder::default()\n    .manage(Storage(Default::default()))\n    .manage(DbConnection(Default::default()))\n    .invoke_handler(tauri::generate_handler&#33;[connect, storage_insert])\n    .run(tauri::generate_context!())\n    .expect("error while running tauri application");\n}\n')),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("p",null,"\u24d8"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-rs"},'use tauri::State;\n\nstruct MyInt(isize);\nstruct MyString(String);\n\n#[tauri::command]\n\nfn int_command(state: State<MyInt>) -> String {\n    format!("The stateful int is: {}", state.0)\n}\n\n#[tauri::command]\nfn string_command<\'r>(state: State<\'r, MyString>) {\n    println!("state: {}", state.inner().0);\n}\n\nfn main() {\n    tauri::Builder::default()\n        .manage(MyInt(10))\n        .manage(MyString("Hello, managed state!".to_string()))\n        .invoke_handler(tauri::generate_handler&#33;[int_command, string_command])\n        .run(tauri::generate_context!())\n        .expect("error while running tauri application");\n}\n')),Object(o.b)("h4",{id:"pub-fn-create_windowf-self-label-impl-trait-coreconvertintostruct-allocstringstring-url-enum-tauriwindowurl-setup-f----self-where-f-trait-coreopsfunctionfnoncertype-tauriruntimedispatcher-as-dispatchwindowbuilder-struct-tauriwebviewattributes---rtype-tauriruntimedispatcher-as-dispatchwindowbuilder-struct-tauriwebviewattributesgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.create_window"},"create_window"),"<","F>( self, label: impl ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, url: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.WindowUrl",title:"enum tauri::WindowUrl"},"WindowUrl"),", setup: F ) -> Self where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnOnce.html",title:"trait core::ops::function::FnOnce"},"FnOnce"),"(","<","R::",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher")," as Dispatch>::WindowBuilder, ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.WebviewAttributes",title:"struct tauri::WebviewAttributes"},"WebviewAttributes"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),"<","R::",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher")," as Dispatch>::WindowBuilder, ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.WebviewAttributes",title:"struct tauri::WebviewAttributes"},"WebviewAttributes"),Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")"),",",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#731-751",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates a new webview window."),Object(o.b)("h4",{id:"pub-fn-menuself-menu-struct-taurimenu---selfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.menu"},"menu"),"(self, menu: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Menu",title:"struct tauri::Menu"},"Menu"),") -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#762-765",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Sets the menu to use on all windows."),Object(o.b)("h4",{id:"pub-fn-on_menu_eventf-trait-coreopsfunctionfnstruct-tauriwindowmenueventr--trait-coremarkersend--trait-coremarkersync--static-self-handler-f----selfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.on_menu_event"},"on_menu_event"),"<","F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.WindowMenuEvent",title:"struct tauri::WindowMenuEvent"},"WindowMenuEvent"),"<","R>) + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static>( self, handler: F ) -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#768-774",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Registers a menu event handler for all windows."),Object(o.b)("h4",{id:"pub-fn-on_window_eventf-trait-coreopsfunctionfnstruct-tauriglobalwindoweventr--trait-coremarkersend--trait-coremarkersync--static-self-handler-f----selfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.on_window_event"},"on_window_event"),"<","F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.GlobalWindowEvent",title:"struct tauri::GlobalWindowEvent"},"GlobalWindowEvent"),"<","R>) + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static>( self, handler: F ) -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#777-783",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Registers a window event handler for all windows."),Object(o.b)("h4",{id:"pub-fn-register_uri_scheme_protocoln-trait-coreconvertintostruct-allocstringstring-h-trait-coreopsfunctionfnstruct-tauriapphandler-struct-taurihttprequest---enum-coreresultresultstruct-taurihttpresponse-struct-allocboxedboxdyn-trait-stderrorerror--trait-coremarkersend--trait-coremarkersync--static-self-uri_scheme-n-protocol-h----selfgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.register_uri_scheme_protocol"},"register_uri_scheme_protocol"),"<","N: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, H: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(&",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.AppHandle",title:"struct tauri::AppHandle"},"AppHandle"),"<","R>, &",Object(o.b)("a",{parentName:"h4",href:"http/struct.Request.html",title:"struct tauri::http::Request"},"HttpRequest"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"http/struct.Response.html",title:"struct tauri::http::Response"},"HttpResponse"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/boxed/struct.Box.html",title:"struct alloc::boxed::Box"},"Box"),"<","dyn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error"),">> + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static>( self, uri_scheme: N, protocol: H ) -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#807-825",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Registers a URI scheme protocol available to all webviews. Leverages ",Object(o.b)("a",{parentName:"p",href:"https://developer.apple.com/documentation/webkit/wkwebviewconfiguration/2875766-seturlschemehandler"},"setURLSchemeHandler")," on macOS, ",Object(o.b)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.web.webview2.core.corewebview2.addwebresourcerequestedfilter?view=webview2-dotnet-1.0.774.44"},"AddWebResourceRequestedFilter")," on Windows and ",Object(o.b)("a",{parentName:"p",href:"https://webkitgtk.org/reference/webkit2gtk/stable/WebKitWebContext.html#webkit-web-context-register-uri-scheme"},"webkit-web-context-register-uri-scheme")," on Linux."),Object(o.b)("h2",{id:"arguments"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"uri_scheme")," The URI scheme to register, such as ",Object(o.b)("inlineCode",{parentName:"li"},"example"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"protocol")," the protocol associated with the given URI scheme. It\u2019s a function that takes an URL such as ",Object(o.b)("inlineCode",{parentName:"li"},"example://localhost/asset.css"),".")),Object(o.b)("h4",{id:"pub-fn-builda-trait-tauriassetsself-context-struct-tauricontexta---type-tauriresultstruct-tauriapprgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.build"},"build"),"<","A: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/trait.Assets",title:"trait tauri::Assets"},"Assets"),">(self, context: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Context",title:"struct tauri::Context"},"Context"),"<","A>) -> ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/type.Result",title:"type tauri::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.App",title:"struct tauri::App"},"App"),"<","R>>",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#829-1036",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Builds the application."),Object(o.b)("h4",{id:"pub-fn-runa-trait-tauriassetsself-context-struct-tauricontexta---type-tauriresultgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.run"},"run"),"<","A: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/trait.Assets",title:"trait tauri::Assets"},"Assets"),">(self, context: ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Context",title:"struct tauri::Context"},"Context"),"<","A>) -> ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/type.Result",title:"type tauri::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#1039-1042",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Runs the configured Tauri application."),Object(o.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(o.b)("h3",{id:"impl-trait-coredefaultdefault-for-struct-tauribuilderstruct-tauriwrygoto-source-code"},"impl ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Wry",title:"struct tauri::Wry"},"Wry"),">",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/app.rs#1054-1058",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Make ",Object(o.b)("inlineCode",{parentName:"p"},"Wry")," the default ",Object(o.b)("inlineCode",{parentName:"p"},"Runtime")," for ",Object(o.b)("inlineCode",{parentName:"p"},"Builder")),Object(o.b)("h4",{id:"fn-default---selfgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"default"),"() -> Self",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/app.rs#1055-1057",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the \u201cdefault value\u201d for a type. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"Read more")),Object(o.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(o.b)("h3",{id:"implr-trait-stdpanicrefunwindsafe-for-struct-tauribuilderr"},"impl","<","R> \\","!",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<","R>"),Object(o.b)("h3",{id:"implr-trait-coremarkersend-for-struct-tauribuilderr-where-r-as-trait-tauriruntimetype-tauriruntimedispatcher-as-dispatchwindowbuilder-trait-coremarkersend"},"impl","<","R> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<","R> where ","<","<","R as ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher")," as Dispatch>::WindowBuilder: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send"),","),Object(o.b)("h3",{id:"implr-trait-coremarkersync-for-struct-tauribuilderr"},"impl","<","R> \\","!",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<","R>"),Object(o.b)("h3",{id:"implr-trait-coremarkerunpin-for-struct-tauribuilderr-where-r-as-trait-tauriruntimetype-tauriruntimedispatcher-as-dispatchwindowbuilder-trait-coremarkerunpin"},"impl","<","R> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<","R> where ","<","<","R as ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),">::",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime#associatedtype.Dispatcher",title:"type tauri::Runtime::Dispatcher"},"Dispatcher")," as Dispatch>::WindowBuilder: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin"),","),Object(o.b)("h3",{id:"implr-trait-stdpanicunwindsafe-for-struct-tauribuilderr"},"impl","<","R> \\","!",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Builder",title:"struct tauri::Builder"},"Builder"),"<","R>"),Object(o.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(o.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Gets the ",Object(o.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(o.b)("inlineCode",{parentName:"p"},"self"),". ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Immutably borrows from an owned value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Mutably borrows from an owned value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(o.b)("p",null,"The type returned in the event of a conversion error."),Object(o.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(o.b)("p",null,"The type returned in the event of a conversion error."),Object(o.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(o.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}s.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return b}));var a=r(0),o=r.n(a);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function u(t,e){if(null==t)return{};var r,a,o=function(t,e){if(null==t)return{};var r,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var s=o.a.createContext({}),l=function(t){var e=o.a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},p=function(t){var e=l(t.components);return o.a.createElement(s.Provider,{value:e},t.children)},h={inlineCode:"code",wrapper:function(t){var e=t.children;return o.a.createElement(o.a.Fragment,{},e)}},d=o.a.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,n=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),p=l(r),d=a,b=p["".concat(n,".").concat(d)]||p[d]||h[d]||i;return r?o.a.createElement(b,c(c({ref:e},s),{},{components:r})):o.a.createElement(b,c({ref:e},s))}));function b(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,n=new Array(i);n[0]=d;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=t,c.mdxType="string"==typeof t?t:a,n[1]=c;for(var s=2;s<i;s++)n[s]=r[s];return o.a.createElement.apply(null,n)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);