(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{148:function(r,t,e){"use strict";e.r(t),e.d(t,"frontMatter",(function(){return n})),e.d(t,"metadata",(function(){return i})),e.d(t,"toc",(function(){return s})),e.d(t,"default",(function(){return u}));var o=e(3),a=e(7),c=(e(0),e(454)),n={title:"Enum tauri::Error",sidebar_label:"enum.Error",custom_edit_url:null},i={unversionedId:"api/rust/tauri/enum.Error",id:"api/rust/tauri/enum.Error",isDocsHomePage:!1,title:"Enum tauri::Error",description:"`rs",source:"@site/docs/en/api/rust/tauri/enum.Error.md",sourceDirName:"api/rust/tauri",slug:"/api/rust/tauri/enum.Error",permalink:"/en/docs/api/rust/tauri/enum.Error",editUrl:null,version:"current",sidebar_label:"enum.Error",frontMatter:{title:"Enum tauri::Error",sidebar_label:"enum.Error",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::window::Window",permalink:"/en/docs/api/rust/tauri/window/struct.Window"},next:{title:"Enum tauri::Event",permalink:"/en/docs/api/rust/tauri/enum.Event"}},s=[{value:"Variants (Non-exhaustive)",id:"variants-non-exhaustive",children:[]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::fmt::Debug for enum tauri::Errorgoto source code",id:"impl-trait-corefmtdebug-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait core::fmt::Display for enum tauri::Errorgoto source code",id:"impl-trait-corefmtdisplay-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait std::error::Error for enum tauri::Errorgoto source code",id:"impl-trait-stderrorerror-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait core::convert::From&lt;Error&gt; for enum tauri::Errorgoto source code",id:"impl-trait-coreconvertfromerror-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait core::convert::From&lt;enum tauri::api::Error&gt; for enum tauri::Errorgoto source code",id:"impl-trait-coreconvertfromenum-tauriapierror-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait core::convert::From&lt;struct std::io::error::Error&gt; for enum tauri::Errorgoto source code",id:"impl-trait-coreconvertfromstruct-stdioerrorerror-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait core::convert::From&lt;struct serde_json::error::Error&gt; for enum tauri::Errorgoto source code",id:"impl-trait-coreconvertfromstruct-serde_jsonerrorerror-for-enum-taurierrorgoto-source-code",children:[]},{value:"impl trait core::convert::From&lt;enum tauri::Error&gt; for struct tauri::InvokeErrorgoto source code",id:"impl-trait-coreconvertfromenum-taurierror-for-struct-tauriinvokeerrorgoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl !trait std::panic::RefUnwindSafe for enum tauri::Error",id:"impl-trait-stdpanicrefunwindsafe-for-enum-taurierror",children:[]},{value:"impl trait core::marker::Send for enum tauri::Error",id:"impl-trait-coremarkersend-for-enum-taurierror",children:[]},{value:"impl !trait core::marker::Sync for enum tauri::Error",id:"impl-trait-coremarkersync-for-enum-taurierror",children:[]},{value:"impl trait core::marker::Unpin for enum tauri::Error",id:"impl-trait-coremarkerunpin-for-enum-taurierror",children:[]},{value:"impl !trait std::panic::UnwindSafe for enum tauri::Error",id:"impl-trait-stdpanicunwindsafe-for-enum-taurierror",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::string::ToString for T where T: trait core::fmt::Display + ?trait core::marker::Sized,goto source code",id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],l={toc:s};function u(r){var t=r.components,e=Object(a.a)(r,["components"]);return Object(c.b)("wrapper",Object(o.a)({},l,e,{components:t,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-rs"},"#[non_exhaustive]\n\npub enum Error {\nShow variants    Runtime(Error),\n    CreateWebview(Box<dyn Error + Send>),\n    CreateWindow,\n    WindowLabelAlreadyExists(String),\n    WebviewNotFound,\n    FailedToSendMessage,\n    AssetNotFound(String),\n    Json(Error),\n    UnknownApi(Option<Error>),\n    FailedToExecuteApi(Error),\n    Io(Error),\n    InvalidIcon(Box<dyn Error + Send>),\n    HttpClientNotInitialized,\n    ApiNotEnabled(String),\n    ApiNotAllowlisted(String),\n    InvalidArgs(&'static str,\xa0Error),\n    Setup(Box<dyn Error + Send>),\n    PluginInitialization(String,\xa0String),\n    DialogDefaultPathNotExists(PathBuf),\n    SystemTray(Box<dyn Error + Send>),\n    InvalidUrl(ParseError),\n    JoinError(Box<dyn Error + Send>),\n}\n")),Object(c.b)("p",null,"Expand description"),Object(c.b)("p",null,"Runtime errors that can happen inside a Tauri application."),Object(c.b)("h2",{id:"variants-non-exhaustive"},"Variants (Non-exhaustive)"),Object(c.b)("p",null,"This enum is marked as non-exhaustive"),Object(c.b)("p",null,"Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Runtime(Error)")),Object(c.b)("p",null,"Runtime error."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"CreateWebview(Box<dyn Error + Send>)")),Object(c.b)("p",null,"Failed to create webview."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"CreateWindow")),Object(c.b)("p",null,"Failed to create window."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"WindowLabelAlreadyExists(String)")),Object(c.b)("p",null,"Window label must be unique."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"WebviewNotFound")),Object(c.b)("p",null,"Can\u2019t access webview dispatcher because the webview was closed or not found."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"FailedToSendMessage")),Object(c.b)("p",null,"Failed to send message to webview."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"AssetNotFound(String)")),Object(c.b)("p",null,"Embedded asset not found."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Json(Error)")),Object(c.b)("p",null,"Failed to serialize/deserialize."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"UnknownApi(Option<Error>)")),Object(c.b)("p",null,"Unknown API type."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"FailedToExecuteApi(Error)")),Object(c.b)("p",null,"Failed to execute tauri API."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Io(Error)")),Object(c.b)("p",null,"IO error."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"InvalidIcon(Box<dyn Error + Send>)")),Object(c.b)("p",null,"Failed to load window icon."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"HttpClientNotInitialized")),Object(c.b)("p",null,"Client with specified ID not found."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"ApiNotEnabled(String)")),Object(c.b)("p",null,"API not enabled by Tauri."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"ApiNotAllowlisted(String)")),Object(c.b)("p",null,"API not whitelisted on tauri.conf.json"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"InvalidArgs(&'static str, Error)")),Object(c.b)("p",null,"Invalid args when running a command."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Setup(Box<dyn Error + Send>)")),Object(c.b)("p",null,"Encountered an error in the setup hook,"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"PluginInitialization(String, String)")),Object(c.b)("p",null,"Error initializing plugin."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"DialogDefaultPathNotExists(PathBuf)")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"default_path")," provided to dialog API doesn\u2019t exist."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"SystemTray(Box<dyn Error + Send>)")),Object(c.b)("p",null,"Encountered an error creating the app system tray,"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"InvalidUrl(ParseError)")),Object(c.b)("p",null,"A part of the URL is malformed or invalid. This may occur when parsing and combining user-provided URLs and paths."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"JoinError(Box<dyn Error + Send>)")),Object(c.b)("p",null,"Task join error."),Object(c.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(c.b)("h3",{id:"impl-trait-corefmtdebug-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fmtself-f-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Formats the value using the given formatter. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(c.b)("h3",{id:"impl-trait-corefmtdisplay-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fmtself-__formatter-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"fmt"),"(&self, ","_","_","formatter: &mut ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Formats the value using the given formatter. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"Read more")),Object(c.b)("h3",{id:"impl-trait-stderrorerror-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-sourceself---enum-coreoptionoptiondyn-trait-stderrorerror--staticgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.source"},"source"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","<(dyn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error")," + 'static)>",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"The lower-level source of this error, if any. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.source"},"Read more")),Object(c.b)("h4",{id:"fn-backtraceself---enum-coreoptionoptionstruct-stdbacktracebacktracegoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.backtrace"},"backtrace"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","&",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/backtrace/struct.Backtrace.html",title:"struct std::backtrace::Backtrace"},"Backtrace"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#134",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(c.b)("inlineCode",{parentName:"p"},"backtrace"),")"),Object(c.b)("p",null,"Returns a stack backtrace, if available, of where this error occurred. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.backtrace"},"Read more")),Object(c.b)("h4",{id:"fn-descriptionself---str100goto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.description"},"description"),"(&self) -> &",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),"1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#146",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"\ud83d\udc4e Deprecated since 1.42.0:"),Object(c.b)("p",null,"use the Display impl or to_string()"),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.description"},"Read more")),Object(c.b)("h4",{id:"fn-causeself---enum-coreoptionoptiondyn-trait-stderrorerror100goto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html#method.cause"},"cause"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","&dyn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/error/trait.Error.html",title:"trait std::error::Error"},"Error"),">1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/std/error.rs.html#156",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"\ud83d\udc4e Deprecated since 1.33.0:"),Object(c.b)("p",null,"replaced by Error::source, which can support downcasting"),Object(c.b)("h3",{id:"impl-trait-coreconvertfromerror-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","Error> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fromsource-error---selfgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(source: Error) -> Self",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-coreconvertfromenum-tauriapierror-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/api/enum.Error",title:"enum tauri::api::Error"},"Error"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fromsource-enum-tauriapierror---selfgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(source: ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/api/enum.Error",title:"enum tauri::api::Error"},"Error"),") -> Self",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-coreconvertfromstruct-stdioerrorerror-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/io/error/struct.Error.html",title:"struct std::io::error::Error"},"Error"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fromsource-struct-stdioerrorerror---selfgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(source: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/io/error/struct.Error.html",title:"struct std::io::error::Error"},"Error"),") -> Self",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#8",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-coreconvertfromstruct-serde_jsonerrorerror-for-enum-taurierrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<",Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/serde_json/1.0.66/serde_json/error/struct.Error.html",title:"struct serde_json::error::Error"},"Error"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/error.rs#89-97",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fromerror-struct-serde_jsonerrorerror---selfgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(error: ",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/serde_json/1.0.66/serde_json/error/struct.Error.html",title:"struct serde_json::error::Error"},"Error"),") -> Self",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/error.rs#90-96",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-coreconvertfromenum-taurierror-for-struct-tauriinvokeerrorgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.InvokeError",title:"struct tauri::InvokeError"},"InvokeError"),Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../src/tauri/hooks.rs#72-77",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"fn-fromerror-enum-taurierror---selfgoto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(error: ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error"),") -> Self",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/hooks.rs#74-76",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(c.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-enum-taurierror"},"impl \\","!",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error")),Object(c.b)("h3",{id:"impl-trait-coremarkersend-for-enum-taurierror"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error")),Object(c.b)("h3",{id:"impl-trait-coremarkersync-for-enum-taurierror"},"impl \\","!",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error")),Object(c.b)("h3",{id:"impl-trait-coremarkerunpin-for-enum-taurierror"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error")),Object(c.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-enum-taurierror"},"impl \\","!",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/enum.Error",title:"enum tauri::Error"},"Error")),Object(c.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(c.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Gets the ",Object(c.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(c.b)("inlineCode",{parentName:"p"},"self"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Immutably borrows from an owned value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Mutably borrows from an owned value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html",title:"trait alloc::string::ToString"},"ToString")," for T where T: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," + ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2372-2386",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-default-fn-to_stringself---struct-allocstringstringgoto-source-code"},"pub default fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"to_string"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2378",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Converts the given value to a ",Object(c.b)("inlineCode",{parentName:"p"},"String"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"Read more")),Object(c.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(c.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}u.isMDXComponent=!0},454:function(r,t,e){"use strict";e.d(t,"a",(function(){return m})),e.d(t,"b",(function(){return d}));var o=e(0),a=e.n(o);function c(r,t,e){return t in r?Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[t]=e,r}function n(r,t){var e=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),e.push.apply(e,o)}return e}function i(r){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?n(Object(e),!0).forEach((function(t){c(r,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(e)):n(Object(e)).forEach((function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(e,t))}))}return r}function s(r,t){if(null==r)return{};var e,o,a=function(r,t){if(null==r)return{};var e,o,a={},c=Object.keys(r);for(o=0;o<c.length;o++)e=c[o],t.indexOf(e)>=0||(a[e]=r[e]);return a}(r,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(r);for(o=0;o<c.length;o++)e=c[o],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(r,e)&&(a[e]=r[e])}return a}var l=a.a.createContext({}),u=function(r){var t=a.a.useContext(l),e=t;return r&&(e="function"==typeof r?r(t):i(i({},t),r)),e},m=function(r){var t=u(r.components);return a.a.createElement(l.Provider,{value:t},r.children)},p={inlineCode:"code",wrapper:function(r){var t=r.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(r,t){var e=r.components,o=r.mdxType,c=r.originalType,n=r.parentName,l=s(r,["components","mdxType","originalType","parentName"]),m=u(e),b=o,d=m["".concat(n,".").concat(b)]||m[b]||p[b]||c;return e?a.a.createElement(d,i(i({ref:t},l),{},{components:e})):a.a.createElement(d,i({ref:t},l))}));function d(r,t){var e=arguments,o=t&&t.mdxType;if("string"==typeof r||o){var c=e.length,n=new Array(c);n[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=r,i.mdxType="string"==typeof r?r:o,n[1]=i;for(var l=2;l<c;l++)n[l]=e[l];return a.a.createElement.apply(null,n)}return a.a.createElement.apply(null,e)}b.displayName="MDXCreateElement"}}]);