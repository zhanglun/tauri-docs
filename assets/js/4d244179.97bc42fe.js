(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{194:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return c})),r.d(e,"metadata",(function(){return i})),r.d(e,"toc",(function(){return n})),r.d(e,"default",(function(){return s}));var o=r(3),a=(r(0),r(454));const c={title:"Struct tauri::api::file::Move",sidebar_label:"struct.Move",custom_edit_url:null},i={unversionedId:"api/rust/tauri/api/file/struct.Move",id:"api/rust/tauri/api/file/struct.Move",isDocsHomePage:!1,title:"Struct tauri::api::file::Move",description:"`rs",source:"@site/docs/zh-hans/api/rust/tauri/api/file/struct.Move.md",sourceDirName:"api/rust/tauri/api/file",slug:"/api/rust/tauri/api/file/struct.Move",permalink:"/tauri-docs/docs/api/rust/tauri/api/file/struct.Move",editUrl:null,version:"current",sidebar_label:"struct.Move",frontMatter:{title:"Struct tauri::api::file::Move",sidebar_label:"struct.Move",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::api::file::Extract",permalink:"/tauri-docs/docs/api/rust/tauri/api/file/struct.Extract"},next:{title:"Enum tauri::api::http::Body",permalink:"/tauri-docs/docs/api/rust/tauri/api/http/enum.Body"}},n=[{value:"Implementations",id:"implementations",children:[{value:"impl&lt;&#39;a&gt; struct tauri::api::file::Move&lt;&#39;a&gt;goto source code",id:"impla-struct-tauriapifilemoveagoto-source-code",children:[]}]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl&lt;&#39;a&gt; trait core::fmt::Debug for struct tauri::api::file::Move&lt;&#39;a&gt;goto source code",id:"impla-trait-corefmtdebug-for-struct-tauriapifilemoveagoto-source-code",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;&#39;a&gt; trait std::panic::RefUnwindSafe for struct tauri::api::file::Move&lt;&#39;a&gt;",id:"impla-trait-stdpanicrefunwindsafe-for-struct-tauriapifilemovea",children:[]},{value:"impl&lt;&#39;a&gt; trait core::marker::Send for struct tauri::api::file::Move&lt;&#39;a&gt;",id:"impla-trait-coremarkersend-for-struct-tauriapifilemovea",children:[]},{value:"impl&lt;&#39;a&gt; trait core::marker::Sync for struct tauri::api::file::Move&lt;&#39;a&gt;",id:"impla-trait-coremarkersync-for-struct-tauriapifilemovea",children:[]},{value:"impl&lt;&#39;a&gt; trait core::marker::Unpin for struct tauri::api::file::Move&lt;&#39;a&gt;",id:"impla-trait-coremarkerunpin-for-struct-tauriapifilemovea",children:[]},{value:"impl&lt;&#39;a&gt; trait std::panic::UnwindSafe for struct tauri::api::file::Move&lt;&#39;a&gt;",id:"impla-trait-stdpanicunwindsafe-for-struct-tauriapifilemovea",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],l={toc:n};function s({components:t,...e}){return Object(a.b)("wrapper",Object(o.a)({},l,e,{components:t,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Move<'a> { /* fields omitted */ }\n")),Object(a.b)("p",null,"Expand description"),Object(a.b)("p",null,"Moves a file from the given path to the specified destination."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"source")," and ",Object(a.b)("inlineCode",{parentName:"p"},"dest")," must be on the same filesystem. If ",Object(a.b)("inlineCode",{parentName:"p"},"replace_using_temp")," is specified, the destination file will be replaced using the given temporary path."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Errors:"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"Io - copying / renaming")))),Object(a.b)("h2",{id:"implementations"},"Implementations"),Object(a.b)("h3",{id:"impla-struct-tauriapifilemoveagoto-source-code"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#21-89",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-from_sourcesource-a-struct-stdpathpath---struct-tauriapifilemoveagoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.from_source"},"from_source"),"(source: &'a ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),") -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#23-25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Specify source file"),Object(a.b)("h4",{id:"pub-fn-replace_using_tempmut-self-temp-a-struct-stdpathpath---mutselfgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.replace_using_temp"},"replace_using_temp"),"(&mut self, temp: &'a ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),") -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"Self",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#36-39",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"If specified and the destination file already exists, the \u201cdestination\u201d file will be moved to the given temporary location before the \u201csource\u201d file is moved to the \u201cdestination\u201d file."),Object(a.b)("p",null,"In the event of an ",Object(a.b)("inlineCode",{parentName:"p"},"io")," error while renaming \u201csource\u201d to \u201cdestination\u201d, the temporary file will be moved back to \u201cdestination\u201d."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"temp")," dir must be explicitly provided since ",Object(a.b)("inlineCode",{parentName:"p"},"rename")," operations require files to live on the same filesystem."),Object(a.b)("h4",{id:"pub-fn-to_destself-dest-struct-stdpathpath---type-tauriapiresultgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.to_dest"},"to_dest"),"(&self, dest: &",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),") -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::api::Result"},"Result"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#42-60",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Move source file to specified destination (replace whole directory)"),Object(a.b)("h4",{id:"pub-fn-walk_to_destself-dest-struct-stdpathpath---type-tauriapiresultgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.walk_to_dest"},"walk_to_dest"),"(&self, dest: &",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/path/struct.Path.html",title:"struct std::path::Path"},"Path"),") -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../type.Result",title:"type tauri::api::Result"},"Result"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#64-88",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Walk in the source and copy all files and create directories if needed by replacing existing elements. (equivalent to a cp -R)"),Object(a.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(a.b)("h3",{id:"impla-trait-corefmtdebug-for-struct-tauriapifilemoveagoto-source-code"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#16",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"fn-fmtself-f-mut-struct-corefmtformatter_---type-corefmtresultgoto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/type.Result.html",title:"type core::fmt::Result"},"Result"),Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../../../src/tauri/api/file/file_move.rs#16",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Formats the value using the given formatter. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(a.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(a.b)("h3",{id:"impla-trait-stdpanicrefunwindsafe-for-struct-tauriapifilemovea"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>"),Object(a.b)("h3",{id:"impla-trait-coremarkersend-for-struct-tauriapifilemovea"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>"),Object(a.b)("h3",{id:"impla-trait-coremarkersync-for-struct-tauriapifilemovea"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>"),Object(a.b)("h3",{id:"impla-trait-coremarkerunpin-for-struct-tauriapifilemovea"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>"),Object(a.b)("h3",{id:"impla-trait-stdpanicunwindsafe-for-struct-tauriapifilemovea"},"impl","<","'a> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Move",title:"struct tauri::api::file::Move"},"Move"),"<","'a>"),Object(a.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(a.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Gets the ",Object(a.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(a.b)("inlineCode",{parentName:"p"},"self"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Immutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Mutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(a.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}s.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return b}));var o=r(0),a=r.n(o);function c(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function n(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){c(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,o,a=function(t,e){if(null==t)return{};var r,o,a={},c=Object.keys(t);for(o=0;o<c.length;o++)r=c[o],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(o=0;o<c.length;o++)r=c[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=a.a.createContext({}),u=function(t){var e=a.a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):n(n({},e),t)),r},p=function(t){var e=u(t.components);return a.a.createElement(s.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},h=a.a.forwardRef((function(t,e){var r=t.components,o=t.mdxType,c=t.originalType,i=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),p=u(r),h=o,b=p["".concat(i,".").concat(h)]||p[h]||m[h]||c;return r?a.a.createElement(b,n(n({ref:e},s),{},{components:r})):a.a.createElement(b,n({ref:e},s))}));function b(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var c=r.length,i=new Array(c);i[0]=h;var n={};for(var l in e)hasOwnProperty.call(e,l)&&(n[l]=e[l]);n.originalType=t,n.mdxType="string"==typeof t?t:o,i[1]=n;for(var s=2;s<c;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);