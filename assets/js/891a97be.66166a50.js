(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{274:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return h})),r.d(e,"metadata",(function(){return s})),r.d(e,"toc",(function(){return i})),r.d(e,"default",(function(){return d}));var o=r(3),a=r(7),c=(r(0),r(454)),h={title:"Struct tauri::http::method::Method",sidebar_label:"struct.Method",custom_edit_url:null},s={unversionedId:"api/rust/tauri/http/method/struct.Method",id:"api/rust/tauri/http/method/struct.Method",isDocsHomePage:!1,title:"Struct tauri::http::method::Method",description:"x3A;:Method,",source:"@site/docs/zh-hans/api/rust/tauri/http/method/struct.Method.md",sourceDirName:"api/rust/tauri/http/method",slug:"/api/rust/tauri/http/method/struct.Method",permalink:"/zh-hans/docs/api/rust/tauri/http/method/struct.Method",editUrl:null,version:"current",sidebar_label:"struct.Method",frontMatter:{title:"Struct tauri::http::method::Method",sidebar_label:"struct.Method",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::http::method::InvalidMethod",permalink:"/zh-hans/docs/api/rust/tauri/http/method/struct.InvalidMethod"},next:{title:"Struct tauri::http::status::InvalidStatusCode",permalink:"/zh-hans/docs/api/rust/tauri/http/status/struct.InvalidStatusCode"}},i=[{value:"Examples",id:"examples",children:[]},{value:"Implementations",id:"implementations",children:[{value:"impl struct tauri::http::method::Methodgoto source code",id:"impl-struct-taurihttpmethodmethodgoto-source-code",children:[]}]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::convert::AsRef&lt;str&gt; for struct tauri::http::method::Methodgoto source code",id:"impl-trait-coreconvertasrefstr-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::clone::Clone for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corecloneclone-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::fmt::Debug for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corefmtdebug-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::default::Default for struct tauri::http::method::Methodgoto source code",id:"impl-trait-coredefaultdefault-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::fmt::Display for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corefmtdisplay-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl&lt;&#39;a&gt; trait core::convert::From&lt;&lt;&#39;a struct tauri::http::method::Method&gt; for struct tauri::http::method::Methodgoto source code",id:"impla-trait-coreconvertfroma-struct-taurihttpmethodmethod-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::str::traits::FromStr for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corestrtraitsfromstr-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::hash::Hash for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corehashhash-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl&lt;&#39;a&gt; trait core::cmp::PartialEq&lt;&lt;&#39;a struct tauri::http::method::Method&gt; for struct tauri::http::method::Methodgoto source code",id:"impla-trait-corecmppartialeqa-struct-taurihttpmethodmethod-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl&lt;&#39;a&gt; trait core::cmp::PartialEq&lt;&lt;&#39;a str&gt; for struct tauri::http::method::Methodgoto source code",id:"impla-trait-corecmppartialeqa-str-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::cmp::PartialEq&lt;struct tauri::http::method::Method&gt; for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corecmppartialeqstruct-taurihttpmethodmethod-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl&lt;&#39;a&gt; trait core::cmp::PartialEq&lt;struct tauri::http::method::Method&gt; for &amp;&#39;a struct tauri::http::method::Methodgoto source code",id:"impla-trait-corecmppartialeqstruct-taurihttpmethodmethod-for-a-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::cmp::PartialEq&lt;str&gt; for struct tauri::http::method::Methodgoto source code",id:"impl-trait-corecmppartialeqstr-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl&lt;&#39;a&gt; trait core::convert::TryFrom&lt;&'a [u8]&gt; for struct tauri::http::method::Methodgoto source code",id:"impla-trait-coreconverttryfroma-u8-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl&lt;&#39;a&gt; trait core::convert::TryFrom&lt;&lt;&#39;a str&gt; for struct tauri::http::method::Methodgoto source code",id:"impla-trait-coreconverttryfroma-str-for-struct-taurihttpmethodmethodgoto-source-code",children:[]},{value:"impl trait core::cmp::Eq for struct tauri::http::method::Method",id:"impl-trait-corecmpeq-for-struct-taurihttpmethodmethod",children:[]},{value:"impl trait core::marker::StructuralEq for struct tauri::http::method::Method",id:"impl-trait-coremarkerstructuraleq-for-struct-taurihttpmethodmethod",children:[]},{value:"impl trait core::marker::StructuralPartialEq for struct tauri::http::method::Method",id:"impl-trait-coremarkerstructuralpartialeq-for-struct-taurihttpmethodmethod",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl trait std::panic::RefUnwindSafe for struct tauri::http::method::Method",id:"impl-trait-stdpanicrefunwindsafe-for-struct-taurihttpmethodmethod",children:[]},{value:"impl trait core::marker::Send for struct tauri::http::method::Method",id:"impl-trait-coremarkersend-for-struct-taurihttpmethodmethod",children:[]},{value:"impl trait core::marker::Sync for struct tauri::http::method::Method",id:"impl-trait-coremarkersync-for-struct-taurihttpmethodmethod",children:[]},{value:"impl trait core::marker::Unpin for struct tauri::http::method::Method",id:"impl-trait-coremarkerunpin-for-struct-taurihttpmethodmethod",children:[]},{value:"impl trait std::panic::UnwindSafe for struct tauri::http::method::Method",id:"impl-trait-stdpanicunwindsafe-for-struct-taurihttpmethodmethod",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::borrow::ToOwned for T where T: trait core::clone::Clone,goto source code",id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::string::ToString for T where T: trait core::fmt::Display + ?trait core::marker::Sized,goto source code",id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],m={toc:i};function d(t){var e=t.components,r=Object(a.a)(t,["components"]);return Object(c.b)("wrapper",Object(o.a)({},m,r,{components:e,mdxType:"MDXLayout"}),Object(c.b)("p",null,"x3A;:method::Method,"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Method(_);\n")),Object(c.b)("p",null,"Expand description"),Object(c.b)("p",null,"The Request Method (VERB)"),Object(c.b)("p",null,"This type also contains constants for a number of common HTTP methods such as GET, POST, etc."),Object(c.b)("p",null,"Currently includes 8 variants representing the 8 methods defined in ",Object(c.b)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7231#section-4.1"},"RFC 7230"),", plus PATCH, and an Extension variant for all extensions."),Object(c.b)("h2",{id:"examples"},"Examples"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-rs"},'use http::Method;\n\nassert_eq!(Method::GET, Method::from_bytes(b"GET").unwrap());\nassert!(Method::GET.is_idempotent());\nassert_eq!(Method::POST.as_str(), "POST");\n')),Object(c.b)("h2",{id:"implementations"},"Implementations"),Object(c.b)("h3",{id:"impl-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#71-186",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-const-get-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.GET"},Object(c.b)("strong",{parentName:"a"},"GET")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#73",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"GET"),Object(c.b)("h4",{id:"pub-const-post-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.POST"},Object(c.b)("strong",{parentName:"a"},"POST")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#76",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"POST"),Object(c.b)("h4",{id:"pub-const-put-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.PUT"},Object(c.b)("strong",{parentName:"a"},"PUT")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#79",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"PUT"),Object(c.b)("h4",{id:"pub-const-delete-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.DELETE"},Object(c.b)("strong",{parentName:"a"},"DELETE")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#82",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"DELETE"),Object(c.b)("h4",{id:"pub-const-head-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.HEAD"},Object(c.b)("strong",{parentName:"a"},"HEAD")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#85",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"HEAD"),Object(c.b)("h4",{id:"pub-const-options-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.OPTIONS"},Object(c.b)("strong",{parentName:"a"},"OPTIONS")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#88",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"OPTIONS"),Object(c.b)("h4",{id:"pub-const-connect-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.CONNECT"},Object(c.b)("strong",{parentName:"a"},"CONNECT")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#91",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"CONNECT"),Object(c.b)("h4",{id:"pub-const-patch-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.PATCH"},Object(c.b)("strong",{parentName:"a"},"PATCH")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#94",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"PATCH"),Object(c.b)("h4",{id:"pub-const-trace-struct-taurihttpmethodmethodgoto-source-code"},"pub const ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.TRACE"},Object(c.b)("strong",{parentName:"a"},"TRACE")),": ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#97",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"TRACE"),Object(c.b)("h4",{id:"pub-fn-from_bytessrc-u8---enum-coreresultresultstruct-taurihttpmethodmethod-struct-taurihttpmethodinvalidmethodgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.from_bytes"},"from_bytes"),"(src: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&","["),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u8.html"},"u8"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"]"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),", ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.InvalidMethod",title:"struct tauri::http::method::InvalidMethod"},"InvalidMethod"),">",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#100",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Converts a slice of bytes to an HTTP method."),Object(c.b)("h4",{id:"pub-fn-is_safeself---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_safe"},"is_safe"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#150",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Whether a method is considered \u201csafe\u201d, meaning the request is essentially read-only."),Object(c.b)("p",null,"See ",Object(c.b)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7231#section-4.2.1"},"the spec")," for more words."),Object(c.b)("h4",{id:"pub-fn-is_idempotentself---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.is_idempotent"},"is_idempotent"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#162",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Whether a method is considered \u201cidempotent\u201d, meaning the request has the same result if executed multiple times."),Object(c.b)("p",null,"See ",Object(c.b)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7231#section-4.2.2"},"the spec")," for more words."),Object(c.b)("h4",{id:"pub-fn-as_strself---strgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.as_str"},"as_str"),"(&self) -> &",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#171",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Return a &str representation of the HTTP method"),Object(c.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(c.b)("h3",{id:"impl-trait-coreconvertasrefstr-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.AsRef.html",title:"trait core::convert::AsRef"},"AsRef"),"<",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#188-193",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-as_refself---strgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.AsRef.html#tymethod.as_ref"},"as_ref"),"(&self) -> &",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#190",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-corecloneclone-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-cloneself---struct-taurihttpmethodmethodgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"clone"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Returns a copy of the value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"Read more")),Object(c.b)("h4",{id:"fn-clone_frommut-self-source-self100goto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"clone_from"),"(&mut self, source: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self)1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/clone.rs.html#130",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs copy-assignment from ",Object(c.b)("inlineCode",{parentName:"p"},"source"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"Read more")),Object(c.b)("h3",{id:"impl-trait-corefmtdebug-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#237-241",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#238",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Formats the value using the given formatter. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(c.b)("h3",{id:"impl-trait-coredefaultdefault-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#249-254",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-default---struct-taurihttpmethodmethodgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"default"),"() -> ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#251",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Returns the \u201cdefault value\u201d for a type. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"Read more")),Object(c.b)("h3",{id:"impl-trait-corefmtdisplay-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#243-247",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-fmtself-fmt-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"fmt"),"(&self, fmt: &mut ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#244",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Formats the value using the given formatter. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html#tymethod.fmt"},"Read more")),Object(c.b)("h3",{id:"impla-trait-coreconvertfroma-struct-taurihttpmethodmethod-for-struct-taurihttpmethodmethodgoto-source-code"},"impl","<","'a> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","<'a ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#256-261",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-fromt-a-struct-taurihttpmethodmethod---struct-taurihttpmethodmethodgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: &'a ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),") -> ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#258",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-corestrtraitsfromstr-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/str/traits/trait.FromStr.html",title:"trait core::str::traits::FromStr"},"FromStr")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#281-288",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-err--struct-taurihttpmethodinvalidmethod"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/str/traits/trait.FromStr.html#associatedtype.Err"},"Err")," = ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.InvalidMethod",title:"struct tauri::http::method::InvalidMethod"},"InvalidMethod")),Object(c.b)("p",null,"The associated error which can be returned from parsing."),Object(c.b)("h4",{id:"pub-fn-from_strt-str---enum-coreresultresultstruct-taurihttpmethodmethod-struct-taurihttpmethodmethod-as-trait-corestrtraitsfromstrtype-corestrtraitsfromstrerrgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/str/traits/trait.FromStr.html#tymethod.from_str"},"from_str"),"(t: &",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),", ","<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")," as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/str/traits/trait.FromStr.html",title:"trait core::str::traits::FromStr"},"FromStr"),">::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/str/traits/trait.FromStr.html#associatedtype.Err",title:"type core::str::traits::FromStr::Err"},"Err"),">",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#285",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Parses a string ",Object(c.b)("inlineCode",{parentName:"p"},"s")," to return a value of this type. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/str/traits/trait.FromStr.html#tymethod.from_str"},"Read more")),Object(c.b)("h3",{id:"impl-trait-corehashhash-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html",title:"trait core::hash::Hash"},"Hash")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-hash__hself-state-mut__h-where-__h-trait-corehashhashergoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"hash"),"<","_","_","H>(&self, state: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"_","_","H) where ","_","_","H: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),",",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Feeds this value into the given ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(c.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"Read more")),Object(c.b)("h4",{id:"fn-hash_slicehdata-self-state-muth-where-h-trait-corehashhasher130goto-source-code"},"fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"hash_slice"),"<","H>(data: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&","[","Self","]"),", state: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"H) where H: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),",1.3.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/hash/mod.rs.html#211-213",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Feeds a slice of this type into the given ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(c.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"Read more")),Object(c.b)("h3",{id:"impla-trait-corecmppartialeqa-struct-taurihttpmethodmethod-for-struct-taurihttpmethodmethodgoto-source-code"},"impl","<","'a> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<","<'a ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#195-200",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-eqself-other-a-struct-taurihttpmethodmethod---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &&'a ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#197",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"self")," and ",Object(c.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(c.b)("inlineCode",{parentName:"p"},"=="),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(c.b)("h4",{id:"must_usefn-neself-other-rhs---bool100goto-source-code"},"#","[","must_use]fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#213",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"!="),"."),Object(c.b)("h3",{id:"impla-trait-corecmppartialeqa-str-for-struct-taurihttpmethodmethodgoto-source-code"},"impl","<","'a> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<","<'a ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#223-228",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-eqself-other-a-str---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &&'a ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#225",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"self")," and ",Object(c.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(c.b)("inlineCode",{parentName:"p"},"=="),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(c.b)("h4",{id:"must_usefn-neself-other-rhs---bool100goto-source-code-1"},"#","[","must_use]fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#213",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"!="),"."),Object(c.b)("h3",{id:"impl-trait-corecmppartialeqstruct-taurihttpmethodmethod-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-eqself-other-struct-taurihttpmethodmethod---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"self")," and ",Object(c.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(c.b)("inlineCode",{parentName:"p"},"=="),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(c.b)("h4",{id:"pub-fn-neself-other-struct-taurihttpmethodmethod---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: &",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"!="),"."),Object(c.b)("h3",{id:"impla-trait-corecmppartialeqstruct-taurihttpmethodmethod-for-a-struct-taurihttpmethodmethodgoto-source-code"},"impl","<","'a> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),"> for &'a ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#202-207",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-eqself-other-struct-taurihttpmethodmethod---boolgoto-source-code-1"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#204",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"self")," and ",Object(c.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(c.b)("inlineCode",{parentName:"p"},"=="),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(c.b)("h4",{id:"must_usefn-neself-other-rhs---bool100goto-source-code-2"},"#","[","must_use]fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#213",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"!="),"."),Object(c.b)("h3",{id:"impl-trait-corecmppartialeqstr-for-struct-taurihttpmethodmethodgoto-source-code"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#209-214",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-eqself-other-str---boolgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#211",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"self")," and ",Object(c.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(c.b)("inlineCode",{parentName:"p"},"=="),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(c.b)("h4",{id:"must_usefn-neself-other-rhs---bool100goto-source-code-3"},"#","[","must_use]fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#213",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"This method tests for ",Object(c.b)("inlineCode",{parentName:"p"},"!="),"."),Object(c.b)("h3",{id:"impla-trait-coreconverttryfroma-u8-for-struct-taurihttpmethodmethodgoto-source-code"},"impl","<","'a> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&'a ","["),Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u8.html"},"u8"),Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"]"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#263-270",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--struct-taurihttpmethodinvalidmethod"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.InvalidMethod",title:"struct tauri::http::method::InvalidMethod"},"InvalidMethod")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_from-t-a-u8----enum-coreresultresultstruct-taurihttpmethodmethod-struct-taurihttpmethodmethod-as-trait-coreconverttryfroma-u8type-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"( t: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&'a ","["),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u8.html"},"u8"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"]")," ) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),", ","<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")," as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&'a ","["),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.u8.html"},"u8"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"]"),">>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#267",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impla-trait-coreconverttryfroma-str-for-struct-taurihttpmethodmethodgoto-source-code"},"impl","<","'a> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","<'a ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),"> for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),Object(c.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#272-279",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--struct-taurihttpmethodinvalidmethod-1"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.InvalidMethod",title:"struct tauri::http::method::InvalidMethod"},"InvalidMethod")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_from-t-a-str----enum-coreresultresultstruct-taurihttpmethodmethod-struct-taurihttpmethodmethod-as-trait-coreconverttryfroma-strtype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"( t: &'a ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str")," ) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method"),", ","<",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")," as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","<'a ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),">>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#276",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"impl-trait-corecmpeq-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Eq.html",title:"trait core::cmp::Eq"},"Eq")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("h3",{id:"impl-trait-coremarkerstructuraleq-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralEq.html",title:"trait core::marker::StructuralEq"},"StructuralEq")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("h3",{id:"impl-trait-coremarkerstructuralpartialeq-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralPartialEq.html",title:"trait core::marker::StructuralPartialEq"},"StructuralPartialEq")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/method.rs.html#45",title:"goto source code"},"[","src","]")),Object(c.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(c.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("h3",{id:"impl-trait-coremarkersend-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("h3",{id:"impl-trait-coremarkersync-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("h3",{id:"impl-trait-coremarkerunpin-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-struct-taurihttpmethodmethod"},"impl ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(c.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Method",title:"struct tauri::http::method::Method"},"Method")),Object(c.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(c.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Gets the ",Object(c.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(c.b)("inlineCode",{parentName:"p"},"self"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Immutably borrows from an owned value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Mutably borrows from an owned value. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(c.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html",title:"trait alloc::borrow::ToOwned"},"ToOwned")," for T where T: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#84-96",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-owned--t"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned"},"Owned")," = T"),Object(c.b)("p",null,"The resulting type after obtaining ownership."),Object(c.b)("h4",{id:"pub-fn-to_ownedself---tgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"to_owned"),"(&self) -> T",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#89",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Creates owned data from borrowed data, usually by cloning. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"Read more")),Object(c.b)("h4",{id:"pub-fn-clone_intoself-target-muttgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"clone_into"),"(&self, target: ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T)",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#93",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(c.b)("inlineCode",{parentName:"p"},"toowned_clone_into"),")"),Object(c.b)("p",null,"recently added"),Object(c.b)("p",null,"Uses borrowed data to replace owned data, usually by cloning. ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"Read more")),Object(c.b)("h3",{id:"implt-trait-allocstringtostring-for-t-where-t-trait-corefmtdisplay--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html",title:"trait alloc::string::ToString"},"ToString")," for T where T: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Display.html",title:"trait core::fmt::Display"},"Display")," + ?",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2372-2386",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"pub-default-fn-to_stringself---struct-allocstringstringgoto-source-code"},"pub default fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"to_string"),"(&self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/string.rs.html#2378",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Converts the given value to a ",Object(c.b)("inlineCode",{parentName:"p"},"String"),". ",Object(c.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/string/trait.ToString.html#tymethod.to_string"},"Read more")),Object(c.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(c.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(c.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(c.b)("p",null,"The type returned in the event of a conversion error."),Object(c.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(c.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(c.b)("p",null,"Performs the conversion."),Object(c.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(c.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(c.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}d.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return l})),r.d(e,"b",(function(){return u}));var o=r(0),a=r.n(o);function c(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function h(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?h(Object(r),!0).forEach((function(e){c(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):h(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,o,a=function(t,e){if(null==t)return{};var r,o,a={},c=Object.keys(t);for(o=0;o<c.length;o++)r=c[o],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(o=0;o<c.length;o++)r=c[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var m=a.a.createContext({}),d=function(t){var e=a.a.useContext(m),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},l=function(t){var e=d(t.components);return a.a.createElement(m.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},n=a.a.forwardRef((function(t,e){var r=t.components,o=t.mdxType,c=t.originalType,h=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),l=d(r),n=o,u=l["".concat(h,".").concat(n)]||l[n]||p[n]||c;return r?a.a.createElement(u,s(s({ref:e},m),{},{components:r})):a.a.createElement(u,s({ref:e},m))}));function u(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var c=r.length,h=new Array(c);h[0]=n;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:o,h[1]=s;for(var m=2;m<c;m++)h[m]=r[m];return a.a.createElement.apply(null,h)}return a.a.createElement.apply(null,r)}n.displayName="MDXCreateElement"}}]);