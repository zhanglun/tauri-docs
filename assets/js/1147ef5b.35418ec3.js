(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return h}));var a=r(0),n=r.n(a);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=n.a.createContext({}),u=function(t){var e=n.a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},p=function(t){var e=u(t.components);return n.a.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},b=n.a.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,o=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),p=u(r),b=a,h=p["".concat(o,".").concat(b)]||p[b]||d[b]||i;return r?n.a.createElement(h,c(c({ref:e},l),{},{components:r})):n.a.createElement(h,c({ref:e},l))}));function h(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,o=new Array(i);o[0]=b;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},95:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return o})),r.d(e,"metadata",(function(){return c})),r.d(e,"toc",(function(){return s})),r.d(e,"default",(function(){return u}));var a=r(3),n=r(7),i=(r(0),r(454)),o={title:"Trait tauri::Manager",sidebar_label:"trait.Manager",custom_edit_url:null},c={unversionedId:"api/rust/tauri/trait.Manager",id:"api/rust/tauri/trait.Manager",isDocsHomePage:!1,title:"Trait tauri::Manager",description:"`rs",source:"@site/docs/en/api/rust/tauri/trait.Manager.md",sourceDirName:"api/rust/tauri",slug:"/api/rust/tauri/trait.Manager",permalink:"/en/docs/api/rust/tauri/trait.Manager",editUrl:null,version:"current",sidebar_label:"trait.Manager",frontMatter:{title:"Trait tauri::Manager",sidebar_label:"trait.Manager",custom_edit_url:null},sidebar:"docs",previous:{title:"Trait tauri::GlobalShortcutManager",permalink:"/en/docs/api/rust/tauri/trait.GlobalShortcutManager"},next:{title:"Trait tauri::Pixel",permalink:"/en/docs/api/rust/tauri/trait.Pixel"}},s=[{value:"Provided methods",id:"provided-methods",children:[]},{value:"Implementors",id:"implementors",children:[{value:"impl&lt;R: trait tauri::Runtime&gt; trait tauri::Manager&lt;R&gt; for struct tauri::App&lt;R&gt;",id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriappr",children:[]},{value:"impl&lt;R: trait tauri::Runtime&gt; trait tauri::Manager&lt;R&gt; for struct tauri::AppHandle&lt;R&gt;",id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriapphandler",children:[]},{value:"impl&lt;R: trait tauri::Runtime&gt; trait tauri::Manager&lt;R&gt; for struct tauri::window::Window&lt;R&gt;",id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriwindowwindowr",children:[]}]}],l={toc:s};function u(t){var e=t.components,r=Object(n.a)(t,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,r,{components:e,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rs"},"pub trait Manager<R:\xa0Runtime>: ManagerBase<R> {\n    fn config(&self) -> Arc<Config> { ... }\n\n    fn emit_all<S:\xa0Serialize + Clone>(\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0&self, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0event: &str, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0payload: S\n\xa0\xa0\xa0\xa0) -> Result<()> { ... }\n\n    fn emit_to<S:\xa0Serialize + Clone>(\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0&self, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0label: &str, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0event: &str, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0payload: S\n\xa0\xa0\xa0\xa0) -> Result<()> { ... }\n\n    fn listen_global<F>(\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0&self, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0event: impl Into<String>, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0handler: F\n\xa0\xa0\xa0\xa0) -> EventHandler\n\xa0\xa0\xa0 where\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0F: Fn(EmittedEvent) + Send + 'static,\n    { ... }\n\n    fn once_global<F>(\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0&self, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0event: impl Into<String>, \n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0handler: F\n\xa0\xa0\xa0\xa0) -> EventHandler\n\xa0\xa0\xa0 where\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0F: Fn(EmittedEvent) + Send + 'static,\n    { ... }\n\n    fn trigger_global(&self, event: &str, data: Option<String>) { ... }\n\n    fn unlisten(&self, handler_id: EventHandler) { ... }\n\n    fn get_window(&self, label: &str) -> Option<Window<R>> { ... }\n\n    fn windows(&self) -> HashMap<String, Window<R>> { ... }\n\n    fn manage<T>(&self, state: T)\n\xa0\xa0\xa0 where\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0T: Send + Sync + 'static,\n    { ... }\n\n    fn state<T>(&self) -> State<'_, T>\n\xa0\xa0\xa0 where\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0T: Send + Sync + 'static,\n    { ... }\n\n    fn try_state<T>(&self) -> Option<State<'_, T>>\n\xa0\xa0\xa0 where\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0T: Send + Sync + 'static,\n    { ... }\n}\n")),Object(i.b)("p",null,"Expand description"),Object(i.b)("p",null,"Manages a running application."),Object(i.b)("h2",{id:"provided-methods"},"Provided methods"),Object(i.b)("h4",{id:"fn-configself---struct-allocsyncarcstruct-tauriconfiggoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.config"},"config"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/sync/struct.Arc.html",title:"struct alloc::sync::Arc"},"Arc"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Config",title:"struct tauri::Config"},"Config"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#256-258",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"The ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/struct.Config",title:"Config"},Object(i.b)("inlineCode",{parentName:"a"},"Config"))," the manager was created with."),Object(i.b)("h4",{id:"fn-emit_alls-trait-serdeserserialize--trait-coreclonecloneself-event-str-payload-s---type-tauriresultgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.emit_all"},"emit_all"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),">(&self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", payload: S) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#261-263",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Emits a event to all windows."),Object(i.b)("h4",{id:"fn-emit_tos-trait-serdeserserialize--trait-corecloneclone-self-label-str-event-str-payload-s----type-tauriresultgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.emit_to"},"emit_to"),"<","S: ",Object(i.b)("a",{parentName:"h4",href:"https://docs.rs/serde/1.0.129/serde/ser/trait.Serialize.html",title:"trait serde::ser::Serialize"},"Serialize")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),">( &self, label: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", payload: S ) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/type.Result",title:"type tauri::Result"},"Result"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#266-270",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Emits an event to a window with the specified label."),Object(i.b)("h4",{id:"fn-listen_globalfself-event-impl-trait-coreconvertintostruct-allocstringstring-handler-f---eventhandler-where-f-trait-coreopsfunctionfnemittedevent--trait-coremarkersend--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.listen_global"},"listen_global"),"<","F>(&self, event: impl ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, handler: F) -> EventHandler where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(EmittedEvent) + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#273-278",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Listen to a global event."),Object(i.b)("h4",{id:"fn-once_globalfself-event-impl-trait-coreconvertintostruct-allocstringstring-handler-f---eventhandler-where-f-trait-coreopsfunctionfnemittedevent--trait-coremarkersend--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.once_global"},"once_global"),"<","F>(&self, event: impl ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">, handler: F) -> EventHandler where F: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.Fn.html",title:"trait core::ops::function::Fn"},"Fn"),"(EmittedEvent) + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#281-286",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Listen to a global event only once."),Object(i.b)("h4",{id:"fn-trigger_globalself-event-str-data-enum-coreoptionoptionstruct-allocstringstringgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.trigger_global"},"trigger_global"),"(&self, event: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),", data: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),">)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#289-291",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Trigger a global event."),Object(i.b)("h4",{id:"fn-unlistenself-handler_id-eventhandlergoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.unlisten"},"unlisten"),"(&self, handler_id: EventHandler)",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#294-296",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Remove an event listener."),Object(i.b)("h4",{id:"fn-get_windowself-label-str---enum-coreoptionoptionstruct-tauriwindowwindowrgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.get_window"},"get_window"),"(&self, label: &",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.str.html"},"str"),") -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/window/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#299-301",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Fetch a single window from the manager."),Object(i.b)("h4",{id:"fn-windowsself---struct-stdcollectionshashmaphashmapstruct-allocstringstring-struct-tauriwindowwindowrgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.windows"},"windows"),"(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/collections/hash/map/struct.HashMap.html",title:"struct std::collections::hash::map::HashMap"},"HashMap"),"<",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/string/struct.String.html",title:"struct alloc::string::String"},"String"),", ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/window/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>>",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#304-306",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Fetch all managed windows."),Object(i.b)("h4",{id:"fn-managetself-state-t-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.manage"},"manage"),"<","T>(&self, state: T) where T: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#310-315",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Add ",Object(i.b)("inlineCode",{parentName:"p"},"state")," to the state managed by the application. See ",Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/struct.Builder#manage",title:"crate::Builder"},Object(i.b)("inlineCode",{parentName:"a"},"crate::Builder"))," for instructions."),Object(i.b)("h4",{id:"fn-statetself---struct-tauristate_-t-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.state"},"state"),"<","T>(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.State",title:"struct tauri::State"},"State"),"<","'","_",", T> where T: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#318-323",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Gets the managed state for the type ",Object(i.b)("inlineCode",{parentName:"p"},"T"),". Panics if the type is not managed."),Object(i.b)("h4",{id:"fn-try_statetself---enum-coreoptionoptionstruct-tauristate_-t-where-t-trait-coremarkersend--trait-coremarkersync--staticgoto-source-code"},"fn ",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#method.try_state"},"try_state"),"<","T>(&self) -> ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.State",title:"struct tauri::State"},"State"),"<","'","_",", T>> where T: ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," + ",Object(i.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," + 'static,",Object(i.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/../src/tauri/lib.rs#326-331",title:"goto source code"},"[","src","]")),Object(i.b)("p",null,"Tries to get the managed state for the type ",Object(i.b)("inlineCode",{parentName:"p"},"T"),". Returns ",Object(i.b)("inlineCode",{parentName:"p"},"None")," if the type is not managed."),Object(i.b)("h2",{id:"implementors"},"Implementors"),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriappr"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Manager",title:"trait tauri::Manager"},"Manager"),"<","R> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.App",title:"struct tauri::App"},"App"),"<","R>"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../src/tauri/app.rs#308",title:"goto source code"},"[","src","]")),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriapphandler"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Manager",title:"trait tauri::Manager"},"Manager"),"<","R> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.AppHandle",title:"struct tauri::AppHandle"},"AppHandle"),"<","R>"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../src/tauri/app.rs#278",title:"goto source code"},"[","src","]")),Object(i.b)("h3",{id:"implr-trait-tauriruntime-trait-taurimanagerr-for-struct-tauriwindowwindowr"},"impl","<","R: ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Runtime",title:"trait tauri::Runtime"},"Runtime"),"> ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/trait.Manager",title:"trait tauri::Manager"},"Manager"),"<","R> for ",Object(i.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/window/struct.Window",title:"struct tauri::window::Window"},"Window"),"<","R>"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"/docs/api/rust/tauri/../src/tauri/window.rs#121",title:"goto source code"},"[","src","]")))}u.isMDXComponent=!0}}]);