(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{282:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return i})),r.d(e,"metadata",(function(){return c})),r.d(e,"toc",(function(){return s})),r.d(e,"default",(function(){return l}));var a=r(3),o=(r(0),r(454));const i={title:"Struct tauri::http::header::Iter",sidebar_label:"struct.Iter",custom_edit_url:null},c={unversionedId:"api/rust/tauri/http/header/struct.Iter",id:"api/rust/tauri/http/header/struct.Iter",isDocsHomePage:!1,title:"Struct tauri::http::header::Iter",description:"x3A;:Iter,",source:"@site/docs/zh-hans/api/rust/tauri/http/header/struct.Iter.md",sourceDirName:"api/rust/tauri/http/header",slug:"/api/rust/tauri/http/header/struct.Iter",permalink:"/tauri-docs/docs/api/rust/tauri/http/header/struct.Iter",editUrl:null,version:"current",sidebar_label:"struct.Iter",frontMatter:{title:"Struct tauri::http::header::Iter",sidebar_label:"struct.Iter",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::http::header::InvalidHeaderValue",permalink:"/tauri-docs/docs/api/rust/tauri/http/header/struct.InvalidHeaderValue"},next:{title:"Struct tauri::http::header::IterMut",permalink:"/tauri-docs/docs/api/rust/tauri/http/header/struct.IterMut"}},s=[{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl&lt;&#39;a, T&gt; trait core::fmt::Debug for struct tauri::http::header::Iter&lt;&#39;a, T&gt; where T: trait core::fmt::Debug,goto source code",id:"impla-t-trait-corefmtdebug-for-struct-taurihttpheaderitera-t-where-t-trait-corefmtdebuggoto-source-code",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::iter::traits::iterator::Iterator for struct tauri::http::header::Iter&lt;&#39;a, T&gt;goto source code",id:"impla-t-trait-coreitertraitsiteratoriterator-for-struct-taurihttpheaderitera-tgoto-source-code",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::iter::traits::marker::FusedIterator for struct tauri::http::header::Iter&lt;&#39;a, T&gt;",id:"impla-t-trait-coreitertraitsmarkerfusediterator-for-struct-taurihttpheaderitera-t",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::marker::Send for struct tauri::http::header::Iter&lt;&#39;a, T&gt; where T: trait core::marker::Sync,",id:"impla-t-trait-coremarkersend-for-struct-taurihttpheaderitera-t-where-t-trait-coremarkersync",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::marker::Sync for struct tauri::http::header::Iter&lt;&#39;a, T&gt; where T: trait core::marker::Sync,",id:"impla-t-trait-coremarkersync-for-struct-taurihttpheaderitera-t-where-t-trait-coremarkersync",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl&lt;&#39;a, T&gt; trait std::panic::RefUnwindSafe for struct tauri::http::header::Iter&lt;&#39;a, T&gt; where T: trait std::panic::RefUnwindSafe,",id:"impla-t-trait-stdpanicrefunwindsafe-for-struct-taurihttpheaderitera-t-where-t-trait-stdpanicrefunwindsafe",children:[]},{value:"impl&lt;&#39;a, T&gt; trait core::marker::Unpin for struct tauri::http::header::Iter&lt;&#39;a, T&gt;",id:"impla-t-trait-coremarkerunpin-for-struct-taurihttpheaderitera-t",children:[]},{value:"impl&lt;&#39;a, T&gt; !trait std::panic::UnwindSafe for struct tauri::http::header::Iter&lt;&#39;a, T&gt;",id:"impla-t-trait-stdpanicunwindsafe-for-struct-taurihttpheaderitera-t",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;I&gt; trait core::iter::traits::collect::IntoIterator for I where I: trait core::iter::traits::iterator::Iterator,goto source code",id:"impli-trait-coreitertraitscollectintoiterator-for-i-where-i-trait-coreitertraitsiteratoriteratorgoto-source-code",children:[]},{value:"impl&lt;I&gt; trait rand::seq::IteratorRandom for I where I: trait core::iter::traits::iterator::Iterator,goto source code",id:"impli-trait-randseqiteratorrandom-for-i-where-i-trait-coreitertraitsiteratoriteratorgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],n={toc:s};function l({components:t,...e}){return Object(o.b)("wrapper",Object(a.a)({},n,e,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"x3A;:header::Iter,"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Iter<'a, T> { /* fields omitted */ }\n")),Object(o.b)("p",null,"Expand description"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"HeaderMap")," entry iterator."),Object(o.b)("p",null,"Yields ",Object(o.b)("inlineCode",{parentName:"p"},"(&HeaderName, &value)")," tuples. The same header name may be yielded more than once if it has more than one associated value."),Object(o.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(o.b)("h3",{id:"impla-t-trait-corefmtdebug-for-struct-taurihttpheaderitera-t-where-t-trait-corefmtdebuggoto-source-code"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T> where T: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug"),",",Object(o.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#83",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#83",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Formats the value using the given formatter. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(o.b)("h3",{id:"impla-t-trait-coreitertraitsiteratoriterator-for-struct-taurihttpheaderitera-tgoto-source-code"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T>",Object(o.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2067-2079",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-item--a-struct-taurihttpheaderheadername-at"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item"},"Item")," = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),"&'a ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.HeaderName",title:"struct tauri::http::header::HeaderName"},"HeaderName"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&'a"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")")),Object(o.b)("p",null,"The type of the elements being iterated over."),Object(o.b)("h4",{id:"pub-fn-nextmut-self---enum-coreoptionoptionstruct-taurihttpheaderitera-t-as-trait-coreitertraitsiteratoriteratortype-coreitertraitsiteratoriteratoritemgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next"},"next"),"(&mut self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","<",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T> as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">",Object(o.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2070",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Advances the iterator and returns the next value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next"},"Read more")),Object(o.b)("h4",{id:"pub-fn-size_hintself---usize-enum-coreoptionoptionusizegoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint"},"size_hint"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")"),Object(o.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2076",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the bounds on the remaining length of the iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint"},"Read more")),Object(o.b)("h4",{id:"fn-countself---usize100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.count"},"count"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),"1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#203-205",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Consumes the iterator, counting the number of iterations and returning it. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.count"},"Read more")),Object(o.b)("h4",{id:"fn-lastself---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.last"},"last"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#233-235",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Consumes the iterator, returning the last element. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.last"},"Read more")),Object(o.b)("h4",{id:"fn-advance_bymut-self-n-usize---enum-coreresultresult-usizegoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by"},"advance_by"),"(&mut self, n: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#276",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_advance_by"),")"),Object(o.b)("p",null,"recently added"),Object(o.b)("p",null,"Advances the iterator by ",Object(o.b)("inlineCode",{parentName:"p"},"n")," elements. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by"},"Read more")),Object(o.b)("h4",{id:"fn-nthmut-self-n-usize---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.nth"},"nth"),"(&mut self, n: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#324",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the ",Object(o.b)("inlineCode",{parentName:"p"},"n"),"th element of the iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.nth"},"Read more")),Object(o.b)("h4",{id:"fn-step_byself-step-usize---struct-coreiteradaptersstep_bystepbyself1280goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by"},"step_by"),"(self, step: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/step_by/struct.StepBy.html",title:"struct core::iter::adapters::step_by::StepBy"},"StepBy"),"<","Self>1.28.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#375-377",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator starting at the same point, but stepping by the given amount at each iteration. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by"},"Read more")),Object(o.b)("h4",{id:"fn-chainuself-other-u---struct-coreiteradapterschainchainself-u-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratorintoiter-where-u-trait-coreitertraitscollectintoiteratoritem--selftype-coreitertraitsiteratoriteratoritem100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.chain"},"chain"),"<","U>(self, other: U) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/chain/struct.Chain.html",title:"struct core::iter::adapters::chain::Chain"},"Chain"),"<","Self, ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter",title:"type core::iter::traits::collect::IntoIterator::IntoIter"},"IntoIter"),"> where U: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),"<","Item = Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#446-449",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Takes two iterators and creates a new iterator over both in sequence. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.chain"},"Read more")),Object(o.b)("h4",{id:"fn-zipuself-other-u---struct-coreiteradapterszipzipself-u-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratorintoiter-where-u-trait-coreitertraitscollectintoiterator100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.zip"},"zip"),"<","U>(self, other: U) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/zip/struct.Zip.html",title:"struct core::iter::adapters::zip::Zip"},"Zip"),"<","Self, ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter",title:"type core::iter::traits::collect::IntoIterator::IntoIter"},"IntoIter"),"> where U: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#522-525",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\u2018Zips up\u2019 two iterators into a single iterator of pairs. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.zip"},"Read more")),Object(o.b)("h4",{id:"fn-intersperseself-separator-selftype-coreitertraitsiteratoriteratoritem---struct-coreiteradaptersintersperseintersperseself-where-selftype-coreitertraitsiteratoriteratoritem-trait-corecloneclonegoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse"},"intersperse"),"(self, separator: Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/intersperse/struct.Intersperse.html",title:"struct core::iter::adapters::intersperse::Intersperse"},"Intersperse"),"<","Self> where Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#564-567",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_intersperse"),")"),Object(o.b)("p",null,"recently added"),Object(o.b)("p",null,"Creates a new iterator which places a copy of ",Object(o.b)("inlineCode",{parentName:"p"},"separator")," between adjacent items of the original iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse"},"Read more")),Object(o.b)("h4",{id:"fn-intersperse_withgself-separator-g---struct-coreiteradaptersintersperseinterspersewithself-g-where-g-trait-coreopsfunctionfnmut---selftype-coreitertraitsiteratoriteratoritemgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with"},"intersperse_with"),"<","G>(self, separator: G) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/intersperse/struct.IntersperseWith.html",title:"struct core::iter::adapters::intersperse::IntersperseWith"},"IntersperseWith"),"<","Self, G> where G: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"() -> Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#622-625",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_intersperse"),")"),Object(o.b)("p",null,"recently added"),Object(o.b)("p",null,"Creates a new iterator which places an item generated by ",Object(o.b)("inlineCode",{parentName:"p"},"separator")," between adjacent items of the original iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with"},"Read more")),Object(o.b)("h4",{id:"fn-mapb-fself-f-f---struct-coreiteradaptersmapmapself-f-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---b100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.map"},"map"),"<","B, F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/map/struct.Map.html",title:"struct core::iter::adapters::map::Map"},"Map"),"<","Self, F> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> B,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#681-684",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Takes a closure and creates an iterator which calls that closure on each element. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.map"},"Read more")),Object(o.b)("h4",{id:"fn-for_eachfself-f-f-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem1210goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each"},"for_each"),"<","F>(self, f: F) where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"),1.21.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#726-729",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Calls a closure on each element of an iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each"},"Read more")),Object(o.b)("h4",{id:"fn-filterpself-predicate-p---struct-coreiteradaptersfilterfilterself-p-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.filter"},"filter"),"<","P>(self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/filter/struct.Filter.html",title:"struct core::iter::adapters::filter::Filter"},"Filter"),"<","Self, P> where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#801-804",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator which uses a closure to determine if an element should be yielded. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.filter"},"Read more")),Object(o.b)("h4",{id:"fn-filter_mapb-fself-f-f---struct-coreiteradaptersfilter_mapfiltermapself-f-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---enum-coreoptionoptionb100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map"},"filter_map"),"<","B, F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/filter_map/struct.FilterMap.html",title:"struct core::iter::adapters::filter_map::FilterMap"},"FilterMap"),"<","Self, F> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","B>,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#846-849",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that both filters and maps. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map"},"Read more")),Object(o.b)("h4",{id:"fn-enumerateself---struct-coreiteradaptersenumerateenumerateself100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate"},"enumerate"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/enumerate/struct.Enumerate.html",title:"struct core::iter::adapters::enumerate::Enumerate"},"Enumerate"),"<","Self>1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#893-895",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator which gives the current iteration count as well as the next value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate"},"Read more")),Object(o.b)("h4",{id:"fn-peekableself---struct-coreiteradapterspeekablepeekableself100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable"},"peekable"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/peekable/struct.Peekable.html",title:"struct core::iter::adapters::peekable::Peekable"},"Peekable"),"<","Self>1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#964-966",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator which can use the ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek"},Object(o.b)("inlineCode",{parentName:"a"},"peek"))," and ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek_mut"},Object(o.b)("inlineCode",{parentName:"a"},"peek_mut"))," methods to look at the next element of the iterator without consuming it. See their documentation for more information. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable"},"Read more")),Object(o.b)("h4",{id:"fn-skip_whilepself-predicate-p---struct-coreiteradaptersskip_whileskipwhileself-p-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while"},"skip_while"),"<","P>(self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/skip_while/struct.SkipWhile.html",title:"struct core::iter::adapters::skip_while::SkipWhile"},"SkipWhile"),"<","Self, P> where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1028-1031",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.skip"},Object(o.b)("inlineCode",{parentName:"a"},"skip")),"s elements based on a predicate. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while"},"Read more")),Object(o.b)("h4",{id:"fn-take_whilepself-predicate-p---struct-coreiteradapterstake_whiletakewhileself-p-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while"},"take_while"),"<","P>(self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/take_while/struct.TakeWhile.html",title:"struct core::iter::adapters::take_while::TakeWhile"},"TakeWhile"),"<","Self, P> where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1109-1112",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that yields elements based on a predicate. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while"},"Read more")),Object(o.b)("h4",{id:"fn-map_whileb-pself-predicate-p---struct-coreiteradaptersmap_whilemapwhileself-p-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---enum-coreoptionoptionbgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while"},"map_while"),"<","B, P>(self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/map_while/struct.MapWhile.html",title:"struct core::iter::adapters::map_while::MapWhile"},"MapWhile"),"<","Self, P> where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","B>,",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1204-1207",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_map_while"),")"),Object(o.b)("p",null,"recently added"),Object(o.b)("p",null,"Creates an iterator that both yields elements based on a predicate and maps. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while"},"Read more")),Object(o.b)("h4",{id:"fn-skipself-n-usize---struct-coreiteradaptersskipskipself100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.skip"},"skip"),"(self, n: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/skip/struct.Skip.html",title:"struct core::iter::adapters::skip::Skip"},"Skip"),"<","Self>1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1235-1237",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that skips the first ",Object(o.b)("inlineCode",{parentName:"p"},"n")," elements. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.skip"},"Read more")),Object(o.b)("h4",{id:"fn-takeself-n-usize---struct-coreiteradapterstaketakeself100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.take"},"take"),"(self, n: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/take/struct.Take.html",title:"struct core::iter::adapters::take::Take"},"Take"),"<","Self>1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1288-1290",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that yields the first ",Object(o.b)("inlineCode",{parentName:"p"},"n")," elements, or fewer if the underlying iterator ends sooner. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.take"},"Read more")),Object(o.b)("h4",{id:"fn-scanst-b-fself-initial_state-st-f-f---struct-coreiteradaptersscanscanself-st-f-where-f-trait-coreopsfunctionfnmutmutst-selftype-coreitertraitsiteratoriteratoritem---enum-coreoptionoptionb100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.scan"},"scan"),"<","St, B, F>(self, initial_state: St, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/scan/struct.Scan.html",title:"struct core::iter::adapters::scan::Scan"},"Scan"),"<","Self, St, F> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"St, Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","B>,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1332-1335",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"An iterator adaptor similar to ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.fold"},Object(o.b)("inlineCode",{parentName:"a"},"fold"))," that holds internal state and produces a new iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.scan"},"Read more")),Object(o.b)("h4",{id:"fn-flat_mapu-fself-f-f---struct-coreiteradaptersflattenflatmapself-u-f-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---u-u-trait-coreitertraitscollectintoiterator100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map"},"flat_map"),"<","U, F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/flatten/struct.FlatMap.html",title:"struct core::iter::adapters::flatten::FlatMap"},"FlatMap"),"<","Self, U, F> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> U, U: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1372-1376",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that works like map, but flattens nested structure. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map"},"Read more")),Object(o.b)("h4",{id:"fn-flattenself---struct-coreiteradaptersflattenflattenself-where-selftype-coreitertraitsiteratoriteratoritem-trait-coreitertraitscollectintoiterator1290goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten"},"flatten"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/flatten/struct.Flatten.html",title:"struct core::iter::adapters::flatten::Flatten"},"Flatten"),"<","Self> where Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),",1.29.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1444-1447",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator that flattens nested structure. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten"},"Read more")),Object(o.b)("h4",{id:"fn-fuseself---struct-coreiteradaptersfusefuseself100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse"},"fuse"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/fuse/struct.Fuse.html",title:"struct core::iter::adapters::fuse::Fuse"},"Fuse"),"<","Self>1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1512-1514",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator which ends after the first ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html#variant.None",title:"None"},Object(o.b)("inlineCode",{parentName:"a"},"None")),". ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse"},"Read more")),Object(o.b)("h4",{id:"fn-inspectfself-f-f---struct-coreiteradaptersinspectinspectself-f-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect"},"inspect"),"<","F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/inspect/struct.Inspect.html",title:"struct core::iter::adapters::inspect::Inspect"},"Inspect"),"<","Self, F> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"),1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1596-1599",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Does something with each element of an iterator, passing the value on. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect"},"Read more")),Object(o.b)("h4",{id:"fn-by_refmut-self---mutself100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref"},"by_ref"),"(&mut self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"Self1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1626-1628",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Borrows an iterator, rather than consuming it. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref"},"Read more")),Object(o.b)("h4",{id:"must_use--if-you-really-need-to-exhaust-the-iterator-consider-for_eachdrop-insteadfn-collectbself---b-where-b-trait-coreitertraitscollectfromiteratorselftype-coreitertraitsiteratoriteratoritem100goto-source-code"},"#","[",'must_use = "if you really need to exhaust the iterator, consider ',"`",".for_each(drop)","`",' instead"]fn ',Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.collect"},"collect"),"<","B>(self) -> B where B: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.FromIterator.html",title:"trait core::iter::traits::collect::FromIterator"},"FromIterator"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1744-1746",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Transforms an iterator into a collection. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.collect"},"Read more")),Object(o.b)("h4",{id:"fn-partitionb-fself-f-f---b-b-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool-b-trait-coredefaultdefault--trait-coreitertraitscollectextendselftype-coreitertraitsiteratoriteratoritem100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partition"},"partition"),"<","B, F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),"B, B",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),", B: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.Extend.html",title:"trait core::iter::traits::collect::Extend"},"Extend"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1777-1781",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Consumes an iterator, creating two collections from it. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partition"},"Read more")),Object(o.b)("h4",{id:"fn-partition_in_placea-t-pself-predicate-p---usize-where-self-trait-coreitertraitsdouble_endeddoubleendediteratoritem--a-mutt-t-a-p-trait-coreopsfunctionfnmutt---boolgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place"},"partition_in_place"),"<","'a, T, P>(self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize")," where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html",title:"trait core::iter::traits::double_ended::DoubleEndedIterator"},"DoubleEndedIterator"),"<","Item = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&'a mut"),"T>, T: 'a, P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1838-1841",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_partition_in_place"),")"),Object(o.b)("p",null,"new API"),Object(o.b)("p",null,"Reorders the elements of this iterator ",Object(o.b)("em",{parentName:"p"},"in-place")," according to the given predicate, such that all those that return ",Object(o.b)("inlineCode",{parentName:"p"},"true")," precede all those that return ",Object(o.b)("inlineCode",{parentName:"p"},"false"),". Returns the number of ",Object(o.b)("inlineCode",{parentName:"p"},"true")," elements found. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place"},"Read more")),Object(o.b)("h4",{id:"fn-is_partitionedpself-predicate-p---bool-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---boolgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned"},"is_partitioned"),"<","P>(self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1895-1898",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_is_partitioned"),")"),Object(o.b)("p",null,"new API"),Object(o.b)("p",null,"Checks if the elements of this iterator are partitioned according to the given predicate, such that all those that return ",Object(o.b)("inlineCode",{parentName:"p"},"true")," precede all those that return ",Object(o.b)("inlineCode",{parentName:"p"},"false"),". ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned"},"Read more")),Object(o.b)("h4",{id:"fn-try_foldb-f-rmut-self-init-b-f-f---r-where-r-trait-coreopstry_traittryoutput--b-f-trait-coreopsfunctionfnmutb-selftype-coreitertraitsiteratoriteratoritem---r1270goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold"},"try_fold"),"<","B, F, R>(&mut self, init: B, f: F) -> R where R: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/try_trait/trait.Try.html",title:"trait core::ops::try_trait::Try"},"Try"),"<","Output = B>, F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(B, Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> R,1.27.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#1964-1968",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"An iterator method that applies a function as long as it returns successfully, producing a single, final value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold"},"Read more")),Object(o.b)("h4",{id:"fn-try_for_eachf-rmut-self-f-f---r-where-r-trait-coreopstry_traittryoutput---f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---r1270goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each"},"try_for_each"),"<","F, R>(&mut self, f: F) -> R where R: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/try_trait/trait.Try.html",title:"trait core::ops::try_trait::Try"},"Try"),"<","Output = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),">, F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> R,1.27.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2006-2010",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"An iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each"},"Read more")),Object(o.b)("h4",{id:"fn-foldb-fself-init-b-f-f---b-where-f-trait-coreopsfunctionfnmutb-selftype-coreitertraitsiteratoriteratoritem---b100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.fold"},"fold"),"<","B, F>(self, init: B, f: F) -> B where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(B, Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> B,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2105-2108",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Folds every element into an accumulator by applying an operation, returning the final result. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.fold"},"Read more")),Object(o.b)("h4",{id:"fn-reducefself-f-f---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-selftype-coreitertraitsiteratoriteratoritem---selftype-coreitertraitsiteratoriteratoritem1510goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce"},"reduce"),"<","F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),",1.51.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2150-2153",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Reduces the elements to a single one, by repeatedly applying a reducing operation. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce"},"Read more")),Object(o.b)("h4",{id:"fn-allfmut-self-f-f---bool-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.all"},"all"),"<","F>(&mut self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2199-2202",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Tests if every element of the iterator matches a predicate. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.all"},"Read more")),Object(o.b)("h4",{id:"fn-anyfmut-self-f-f---bool-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.any"},"any"),"<","F>(&mut self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2252-2255",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Tests if any element of the iterator matches a predicate. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.any"},"Read more")),Object(o.b)("h4",{id:"fn-findpmut-self-predicate-p---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.find"},"find"),"<","P>(&mut self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2312-2315",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Searches for an element of an iterator that satisfies a predicate. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.find"},"Read more")),Object(o.b)("h4",{id:"fn-find_mapb-fmut-self-f-f---enum-coreoptionoptionb-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---enum-coreoptionoptionb1300goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map"},"find_map"),"<","B, F>(&mut self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","B> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","B>,1.30.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2343-2346",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Applies function to the elements of iterator and returns the first non-none result. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map"},"Read more")),Object(o.b)("h4",{id:"fn-try_findf-r-emut-self-f-f---enum-coreresultresultenum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-e-where-r-trait-coreopstry_traittryoutput--bool-residual--enum-coreresultresultenum-coreconvertinfallible-e--trait-coreopstry_traittry-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---rgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find"},"try_find"),"<","F, R, E>(&mut self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">, E> where R: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/try_trait/trait.Try.html",title:"trait core::ops::try_trait::Try"},"Try"),"<","Output = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),", Residual = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible"),", E>> + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/try_trait/trait.Try.html",title:"trait core::ops::try_trait::Try"},"Try"),", F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> R,",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2382-2389",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"try_find"),")"),Object(o.b)("p",null,"new API"),Object(o.b)("p",null,"Applies function to the elements of iterator and returns the first true result or the first error. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find"},"Read more")),Object(o.b)("h4",{id:"fn-positionpmut-self-predicate-p---enum-coreoptionoptionusize-where-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.position"},"position"),"<","P>(&mut self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),"> where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2488-2491",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Searches for an element in an iterator, returning its index. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.position"},"Read more")),Object(o.b)("h4",{id:"fn-rpositionpmut-self-predicate-p---enum-coreoptionoptionusize-where-self-trait-coreitertraitsexact_sizeexactsizeiterator--trait-coreitertraitsdouble_endeddoubleendediterator-p-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---bool100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.rposition"},"rposition"),"<","P>(&mut self, predicate: P) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize"),"> where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/exact_size/trait.ExactSizeIterator.html",title:"trait core::iter::traits::exact_size::ExactSizeIterator"},"ExactSizeIterator")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html",title:"trait core::iter::traits::double_ended::DoubleEndedIterator"},"DoubleEndedIterator"),", P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2545-2548",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Searches for an element in an iterator from the right, returning its index. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.rposition"},"Read more")),Object(o.b)("h4",{id:"fn-maxself---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-selftype-coreitertraitsiteratoriteratoritem-trait-corecmpord100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.max"},"max"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html",title:"trait core::cmp::Ord"},"Ord"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2596-2599",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the maximum element of an iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.max"},"Read more")),Object(o.b)("h4",{id:"fn-minself---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-selftype-coreitertraitsiteratoriteratoritem-trait-corecmpord100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.min"},"min"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html",title:"trait core::cmp::Ord"},"Ord"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2634-2637",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the minimum element of an iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.min"},"Read more")),Object(o.b)("h4",{id:"fn-max_by_keyb-fself-f-f---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---b-b-trait-corecmpord160goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key"},"max_by_key"),"<","B, F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> B, B: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html",title:"trait core::cmp::Ord"},"Ord"),",1.6.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2656-2659",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the element that gives the maximum value from the specified function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key"},"Read more")),Object(o.b)("h4",{id:"fn-max_byfself-compare-f---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-selftype-coreitertraitsiteratoriteratoritem---enum-corecmpordering1150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by"},"max_by"),"<","F>(self, compare: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", &Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),",1.15.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2689-2692",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the element that gives the maximum value with respect to the specified comparison function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by"},"Read more")),Object(o.b)("h4",{id:"fn-min_by_keyb-fself-f-f---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---b-b-trait-corecmpord160goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key"},"min_by_key"),"<","B, F>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> B, B: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html",title:"trait core::cmp::Ord"},"Ord"),",1.6.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2716-2719",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the element that gives the minimum value from the specified function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key"},"Read more")),Object(o.b)("h4",{id:"fn-min_byfself-compare-f---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-selftype-coreitertraitsiteratoriteratoritem---enum-corecmpordering1150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by"},"min_by"),"<","F>(self, compare: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", &Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),",1.15.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2749-2752",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Returns the element that gives the minimum value with respect to the specified comparison function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by"},"Read more")),Object(o.b)("h4",{id:"fn-revself---struct-coreiteradaptersrevrevself-where-self-trait-coreitertraitsdouble_endeddoubleendediterator100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.rev"},"rev"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/rev/struct.Rev.html",title:"struct core::iter::adapters::rev::Rev"},"Rev"),"<","Self> where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html",title:"trait core::iter::traits::double_ended::DoubleEndedIterator"},"DoubleEndedIterator"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2786-2788",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Reverses an iterator\u2019s direction. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.rev"},"Read more")),Object(o.b)("h4",{id:"fn-unzipa-b-froma-frombself---froma-fromb-where-self-trait-coreitertraitsiteratoriteratoritem--a-b-froma-trait-coredefaultdefault--trait-coreitertraitscollectextenda-fromb-trait-coredefaultdefault--trait-coreitertraitscollectextendb100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip"},"unzip"),"<","A, B, FromA, FromB>(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),"FromA, FromB",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")")," where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),"<","Item = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},"("),"A, B",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.tuple.html"},")"),">, FromA: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.Extend.html",title:"trait core::iter::traits::collect::Extend"},"Extend"),"<","A>, FromB: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.Extend.html",title:"trait core::iter::traits::collect::Extend"},"Extend"),"<","B>,1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2816-2820",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Converts an iterator of pairs into a pair of containers. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip"},"Read more")),Object(o.b)("h4",{id:"fn-copieda-tself---struct-coreiteradapterscopiedcopiedself-where-self-trait-coreitertraitsiteratoriteratoritem--at-t-a--trait-coremarkercopy1360goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.copied"},"copied"),"<","'a, T>(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/copied/struct.Copied.html",title:"struct core::iter::adapters::copied::Copied"},"Copied"),"<","Self> where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),"<","Item = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&'a"),"T>, T: 'a + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Copy.html",title:"trait core::marker::Copy"},"Copy"),",1.36.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2867-2870",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator which copies all of its elements. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.copied"},"Read more")),Object(o.b)("h4",{id:"fn-cloneda-tself---struct-coreiteradaptersclonedclonedself-where-self-trait-coreitertraitsiteratoriteratoritem--at-t-a--trait-corecloneclone100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned"},"cloned"),"<","'a, T>(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/cloned/struct.Cloned.html",title:"struct core::iter::adapters::cloned::Cloned"},"Cloned"),"<","Self> where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),"<","Item = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&'a"),"T>, T: 'a + ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2898-2901",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator which ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},Object(o.b)("inlineCode",{parentName:"a"},"clone")),"s all of its elements. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned"},"Read more")),Object(o.b)("h4",{id:"fn-cycleself---struct-coreiteradapterscyclecycleself-where-self-trait-corecloneclone100goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle"},"cycle"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/adapters/cycle/struct.Cycle.html",title:"struct core::iter::adapters::cycle::Cycle"},"Cycle"),"<","Self> where Self: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",1.0.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2931-2933",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Repeats an iterator endlessly. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle"},"Read more")),Object(o.b)("h4",{id:"fn-sumsself---s-where-s-trait-coreitertraitsaccumsumselftype-coreitertraitsiteratoriteratoritem1110goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.sum"},"sum"),"<","S>(self) -> S where S: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/accum/trait.Sum.html",title:"trait core::iter::traits::accum::Sum"},"Sum"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">,1.11.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2961-2964",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Sums the elements of an iterator. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.sum"},"Read more")),Object(o.b)("h4",{id:"fn-productpself---p-where-p-trait-coreitertraitsaccumproductselftype-coreitertraitsiteratoriteratoritem1110goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.product"},"product"),"<","P>(self) -> P where P: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/accum/trait.Product.html",title:"trait core::iter::traits::accum::Product"},"Product"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">,1.11.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#2990-2993",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Iterates over the entire iterator, multiplying all the elements ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.product"},"Read more")),Object(o.b)("h4",{id:"fn-cmpiself-other-i---enum-corecmpordering-where-i-trait-coreitertraitscollectintoiteratoritem--selftype-coreitertraitsiteratoriteratoritem-selftype-coreitertraitsiteratoriteratoritem-trait-corecmpord150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp"},"cmp"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),"<","Item = Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">, Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html",title:"trait core::cmp::Ord"},"Ord"),",1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3011-3015",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"Lexicographically")," compares the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," with those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp"},"Read more")),Object(o.b)("h4",{id:"fn-cmp_byi-fself-other-i-cmp-f---enum-corecmpordering-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-i-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem---enum-corecmpordering-i-trait-coreitertraitscollectintoiteratorgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by"},"cmp_by"),"<","I, F>(self, other: I, cmp: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", ","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),", I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3040-3044",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_order_by"),")"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"Lexicographically")," compares the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," with those of another with respect to the specified comparison function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by"},"Read more")),Object(o.b)("h4",{id:"fn-partial_cmpiself-other-i---enum-coreoptionoptionenum-corecmpordering-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialordi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp"},"partial_cmp"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),"> where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3087-3091",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"Lexicographically")," compares the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," with those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp"},"Read more")),Object(o.b)("h4",{id:"fn-partial_cmp_byi-fself-other-i-partial_cmp-f---enum-coreoptionoptionenum-corecmpordering-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-i-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem---enum-coreoptionoptionenum-corecmpordering-i-trait-coreitertraitscollectintoiteratorgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by"},"partial_cmp_by"),"<","I, F>(self, other: I, partial_cmp: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),"> where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", ","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),">, I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3125-3129",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_order_by"),")"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"Lexicographically")," compares the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," with those of another with respect to the specified comparison function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by"},"Read more")),Object(o.b)("h4",{id:"fn-eqiself-other-i---bool-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialeqi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.eq"},"eq"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3167-3171",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are equal to those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.eq"},"Read more")),Object(o.b)("h4",{id:"fn-eq_byi-fself-other-i-eq-f---bool-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-i-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem---bool-i-trait-coreitertraitscollectintoiteratorgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by"},"eq_by"),"<","I, F>(self, other: I, eq: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", ","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),", I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),",",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3192-3196",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"iter_order_by"),")"),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are equal to those of another with respect to the specified equality function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by"},"Read more")),Object(o.b)("h4",{id:"fn-neiself-other-i---bool-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialeqi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.ne"},"ne"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3227-3231",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are unequal to those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.ne"},"Read more")),Object(o.b)("h4",{id:"fn-ltiself-other-i---bool-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialordi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.lt"},"lt"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3248-3252",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"lexicographically")," less than those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.lt"},"Read more")),Object(o.b)("h4",{id:"fn-leiself-other-i---bool-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialordi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.le"},"le"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3269-3273",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"lexicographically")," less or equal to those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.le"},"Read more")),Object(o.b)("h4",{id:"fn-gtiself-other-i---bool-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialordi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.gt"},"gt"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3290-3294",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"lexicographically")," greater than those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.gt"},"Read more")),Object(o.b)("h4",{id:"fn-geiself-other-i---bool-where-i-trait-coreitertraitscollectintoiterator-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialordi-as-trait-coreitertraitscollectintoiteratortype-coreitertraitscollectintoiteratoritem150goto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.ge"},"ge"),"<","I>(self, other: I) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where I: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),", Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item",title:"type core::iter::traits::collect::IntoIterator::Item"},"Item"),">,1.5.0",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3311-3315",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Determines if the elements of this ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"Iterator"},Object(o.b)("inlineCode",{parentName:"a"},"Iterator"))," are ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#lexicographical-comparison"},"lexicographically")," greater than or equal to those of another. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.ge"},"Read more")),Object(o.b)("h4",{id:"fn-is_sortedself---bool-where-selftype-coreitertraitsiteratoriteratoritem-trait-corecmppartialordselftype-coreitertraitsiteratoriteratoritemgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted"},"is_sorted"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),": ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),">,",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3342-3345",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"is_sorted"),")"),Object(o.b)("p",null,"new API"),Object(o.b)("p",null,"Checks if the elements of this iterator are sorted. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted"},"Read more")),Object(o.b)("h4",{id:"fn-is_sorted_byfself-compare-f---bool-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem-selftype-coreitertraitsiteratoriteratoritem---enum-coreoptionoptionenum-corecmporderinggoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by"},"is_sorted_by"),"<","F>(self, compare: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(&Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", &Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),">,",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3370-3373",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"is_sorted"),")"),Object(o.b)("p",null,"new API"),Object(o.b)("p",null,"Checks if the elements of this iterator are sorted using the given comparator function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by"},"Read more")),Object(o.b)("h4",{id:"fn-is_sorted_by_keyf-kself-f-f---bool-where-f-trait-coreopsfunctionfnmutselftype-coreitertraitsiteratoriteratoritem---k-k-trait-corecmppartialordkgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key"},"is_sorted_by_key"),"<","F, K>(self, f: F) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool")," where F: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/ops/function/trait.FnMut.html",title:"trait core::ops::function::FnMut"},"FnMut"),"(Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),") -> K, K: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<","K>,",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/iterator.rs.html#3416-3420",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(o.b)("inlineCode",{parentName:"p"},"is_sorted"),")"),Object(o.b)("p",null,"new API"),Object(o.b)("p",null,"Checks if the elements of this iterator are sorted using the given key extraction function. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key"},"Read more")),Object(o.b)("h3",{id:"impla-t-trait-coreitertraitsmarkerfusediterator-for-struct-taurihttpheaderitera-t"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/marker/trait.FusedIterator.html",title:"trait core::iter::traits::marker::FusedIterator"},"FusedIterator")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T>"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2081",title:"goto source code"},"[","src","]")),Object(o.b)("h3",{id:"impla-t-trait-coremarkersend-for-struct-taurihttpheaderitera-t-where-t-trait-coremarkersync"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T> where T: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),","),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2084",title:"goto source code"},"[","src","]")),Object(o.b)("h3",{id:"impla-t-trait-coremarkersync-for-struct-taurihttpheaderitera-t-where-t-trait-coremarkersync"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T> where T: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync"),","),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/header/map.rs.html#2083",title:"goto source code"},"[","src","]")),Object(o.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(o.b)("h3",{id:"impla-t-trait-stdpanicrefunwindsafe-for-struct-taurihttpheaderitera-t-where-t-trait-stdpanicrefunwindsafe"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T> where T: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe"),","),Object(o.b)("h3",{id:"impla-t-trait-coremarkerunpin-for-struct-taurihttpheaderitera-t"},"impl","<","'a, T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T>"),Object(o.b)("h3",{id:"impla-t-trait-stdpanicunwindsafe-for-struct-taurihttpheaderitera-t"},"impl","<","'a, T> \\","!",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(o.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Iter",title:"struct tauri::http::header::Iter"},"Iter"),"<","'a, T>"),Object(o.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(o.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Gets the ",Object(o.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(o.b)("inlineCode",{parentName:"p"},"self"),". ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Immutably borrows from an owned value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Mutably borrows from an owned value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(o.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"impli-trait-coreitertraitscollectintoiterator-for-i-where-i-trait-coreitertraitsiteratoriteratorgoto-source-code"},"impl","<","I> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html",title:"trait core::iter::traits::collect::IntoIterator"},"IntoIterator")," for I where I: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),",",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/collect.rs.html#237-244",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-item--i-as-trait-coreitertraitsiteratoriteratortype-coreitertraitsiteratoriteratoritem"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item"},"Item")," = ","<","I as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),">::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item")),Object(o.b)("p",null,"The type of the elements being iterated over."),Object(o.b)("h4",{id:"type-intoiter--i"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter"},"IntoIter")," = I"),Object(o.b)("p",null,"Which kind of iterator are we turning this into?"),Object(o.b)("h4",{id:"pub-fn-into_iterself---igoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter"},"into_iter"),"(self) -> I",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/iter/traits/collect.rs.html#241",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Creates an iterator from a value. ",Object(o.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter"},"Read more")),Object(o.b)("h3",{id:"impli-trait-randseqiteratorrandom-for-i-where-i-trait-coreitertraitsiteratoriteratorgoto-source-code"},"impl","<","I> ",Object(o.b)("a",{parentName:"h3",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html",title:"trait rand::seq::IteratorRandom"},"IteratorRandom")," for I where I: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html",title:"trait core::iter::traits::iterator::Iterator"},"Iterator"),",",Object(o.b)("a",{parentName:"h3",href:"https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#615",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"fn-chooserself-rng-mutr---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-r-trait-randrngrng--trait-coremarkersizedgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose"},"choose"),"<","R>(self, rng: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"R) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where R: ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/rng/trait.Rng.html",title:"trait rand::rng::Rng"},"Rng")," + ?",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#304-305",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Choose one element at random from the iterator. ",Object(o.b)("a",{parentName:"p",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose"},"Read more")),Object(o.b)("h4",{id:"fn-choose_stablerself-rng-mutr---enum-coreoptionoptionselftype-coreitertraitsiteratoriteratoritem-where-r-trait-randrngrng--trait-coremarkersizedgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_stable"},"choose_stable"),"<","R>(self, rng: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"R) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),"> where R: ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/rng/trait.Rng.html",title:"trait rand::rng::Rng"},"Rng")," + ?",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#373-374",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Choose one element at random from the iterator. ",Object(o.b)("a",{parentName:"p",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_stable"},"Read more")),Object(o.b)("h4",{id:"fn-choose_multiple_fillrself-rng-mutr-buf-mut-selftype-coreitertraitsiteratoriteratoritem---usize-where-r-trait-randrngrng--trait-coremarkersizedgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple_fill"},"choose_multiple_fill"),"<","R>(self, rng: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"R, buf: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&mut ","["),"Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"]"),") -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize")," where R: ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/rng/trait.Rng.html",title:"trait rand::rng::Rng"},"Rng")," + ?",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#426-427",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Collects values at random from the iterator into a supplied buffer until that buffer is filled. ",Object(o.b)("a",{parentName:"p",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple_fill"},"Read more")),Object(o.b)("h4",{id:"fn-choose_multipler-self-rng-mutr-amount-usize----struct-allocvecvecselftype-coreitertraitsiteratoriteratoritem-struct-allocallocglobal-where-r-trait-randrngrng--trait-coremarkersizedgoto-source-code"},"fn ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple"},"choose_multiple"),"<","R>( self, rng: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"R, amount: ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.usize.html"},"usize")," ) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/vec/struct.Vec.html",title:"struct alloc::vec::Vec"},"Vec"),"<","Self::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item",title:"type core::iter::traits::iterator::Iterator::Item"},"Item"),", ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/alloc/struct.Global.html",title:"struct alloc::alloc::Global"},"Global"),"> where R: ",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/rand/rng/trait.Rng.html",title:"trait rand::rng::Rng"},"Rng")," + ?",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(o.b)("a",{parentName:"h4",href:"https://rust-random.github.io/rand/src/rand/seq/mod.rs.html#466-467",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Collects ",Object(o.b)("inlineCode",{parentName:"p"},"amount")," values at random from the iterator into a vector. ",Object(o.b)("a",{parentName:"p",href:"https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html#method.choose_multiple"},"Read more")),Object(o.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(o.b)("p",null,"The type returned in the event of a conversion error."),Object(o.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(o.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(o.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(o.b)("p",null,"The type returned in the event of a conversion error."),Object(o.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(o.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(o.b)("p",null,"Performs the conversion."),Object(o.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(o.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(o.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}l.isMDXComponent=!0},454:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return d}));var a=r(0),o=r.n(a);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?c(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function n(t,e){if(null==t)return{};var r,a,o=function(t,e){if(null==t)return{};var r,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=o.a.createContext({}),h=function(t){var e=o.a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},p=function(t){var e=h(t.components);return o.a.createElement(l.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return o.a.createElement(o.a.Fragment,{},e)}},b=o.a.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,l=n(t,["components","mdxType","originalType","parentName"]),p=h(r),b=a,d=p["".concat(c,".").concat(b)]||p[b]||m[b]||i;return r?o.a.createElement(d,s(s({ref:e},l),{},{components:r})):o.a.createElement(d,s({ref:e},l))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,c=new Array(i);c[0]=b;var s={};for(var n in e)hasOwnProperty.call(e,n)&&(s[n]=e[n]);s.originalType=t,s.mdxType="string"==typeof t?t:a,c[1]=s;for(var l=2;l<i;l++)c[l]=r[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);