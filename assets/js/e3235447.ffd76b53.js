(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{399:function(t,r,e){"use strict";e.r(r),e.d(r,"frontMatter",(function(){return c})),e.d(r,"metadata",(function(){return s})),e.d(r,"toc",(function(){return i})),e.d(r,"default",(function(){return h}));var o=e(3),a=(e(0),e(454));const c={title:"Struct tauri::http::version::Version",sidebar_label:"struct.Version",custom_edit_url:null},s={unversionedId:"api/rust/tauri/http/version/struct.Version",id:"api/rust/tauri/http/version/struct.Version",isDocsHomePage:!1,title:"Struct tauri::http::version::Version",description:"x3A;:Version,",source:"@site/docs/zh-hans/api/rust/tauri/http/version/struct.Version.md",sourceDirName:"api/rust/tauri/http/version",slug:"/api/rust/tauri/http/version/struct.Version",permalink:"/tauri-docs/docs/api/rust/tauri/http/version/struct.Version",editUrl:null,version:"current",sidebar_label:"struct.Version",frontMatter:{title:"Struct tauri::http::version::Version",sidebar_label:"struct.Version",custom_edit_url:null},sidebar:"docs",previous:{title:"Struct tauri::http::status::StatusCode",permalink:"/tauri-docs/docs/api/rust/tauri/http/status/struct.StatusCode"},next:{title:"Enum tauri::http::MimeType",permalink:"/tauri-docs/docs/api/rust/tauri/http/enum.MimeType"}},i=[{value:"Implementations",id:"implementations",children:[{value:"impl struct tauri::http::version::Versiongoto source code",id:"impl-struct-taurihttpversionversiongoto-source-code",children:[]}]},{value:"Trait Implementations",id:"trait-implementations",children:[{value:"impl trait core::clone::Clone for struct tauri::http::version::Versiongoto source code",id:"impl-trait-corecloneclone-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::fmt::Debug for struct tauri::http::version::Versiongoto source code",id:"impl-trait-corefmtdebug-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::default::Default for struct tauri::http::version::Versiongoto source code",id:"impl-trait-coredefaultdefault-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::hash::Hash for struct tauri::http::version::Versiongoto source code",id:"impl-trait-corehashhash-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::cmp::Ord for struct tauri::http::version::Versiongoto source code",id:"impl-trait-corecmpord-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::cmp::PartialEq&lt;struct tauri::http::version::Version&gt; for struct tauri::http::version::Versiongoto source code",id:"impl-trait-corecmppartialeqstruct-taurihttpversionversion-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::cmp::PartialOrd&lt;struct tauri::http::version::Version&gt; for struct tauri::http::version::Versiongoto source code",id:"impl-trait-corecmppartialordstruct-taurihttpversionversion-for-struct-taurihttpversionversiongoto-source-code",children:[]},{value:"impl trait core::marker::Copy for struct tauri::http::version::Version",id:"impl-trait-coremarkercopy-for-struct-taurihttpversionversion",children:[]},{value:"impl trait core::cmp::Eq for struct tauri::http::version::Version",id:"impl-trait-corecmpeq-for-struct-taurihttpversionversion",children:[]},{value:"impl trait core::marker::StructuralEq for struct tauri::http::version::Version",id:"impl-trait-coremarkerstructuraleq-for-struct-taurihttpversionversion",children:[]},{value:"impl trait core::marker::StructuralPartialEq for struct tauri::http::version::Version",id:"impl-trait-coremarkerstructuralpartialeq-for-struct-taurihttpversionversion",children:[]}]},{value:"Auto Trait Implementations",id:"auto-trait-implementations",children:[{value:"impl trait std::panic::RefUnwindSafe for struct tauri::http::version::Version",id:"impl-trait-stdpanicrefunwindsafe-for-struct-taurihttpversionversion",children:[]},{value:"impl trait core::marker::Send for struct tauri::http::version::Version",id:"impl-trait-coremarkersend-for-struct-taurihttpversionversion",children:[]},{value:"impl trait core::marker::Sync for struct tauri::http::version::Version",id:"impl-trait-coremarkersync-for-struct-taurihttpversionversion",children:[]},{value:"impl trait core::marker::Unpin for struct tauri::http::version::Version",id:"impl-trait-coremarkerunpin-for-struct-taurihttpversionversion",children:[]},{value:"impl trait std::panic::UnwindSafe for struct tauri::http::version::Version",id:"impl-trait-stdpanicunwindsafe-for-struct-taurihttpversionversion",children:[]}]},{value:"Blanket Implementations",id:"blanket-implementations",children:[{value:"impl&lt;T&gt; trait core::any::Any for T where T: &#39;static + ?trait core::marker::Sized,goto source code",id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::Borrow&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::borrow::BorrowMut&lt;T&gt; for T where T: ?trait core::marker::Sized,goto source code",id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait core::convert::From&lt;T&gt; for Tgoto source code",id:"implt-trait-coreconvertfromt-for-tgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::Into&lt;U&gt; for T where U: trait core::convert::From&lt;T&gt;,goto source code",id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code",children:[]},{value:"impl&lt;T&gt; trait alloc::borrow::ToOwned for T where T: trait core::clone::Clone,goto source code",id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryFrom&lt;U&gt; for T where U: trait core::convert::Into&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code",children:[]},{value:"impl&lt;T, U&gt; trait core::convert::TryInto&lt;U&gt; for T where U: trait core::convert::TryFrom&lt;T&gt;,goto source code",id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code",children:[]},{value:"impl&lt;V, T&gt; VZip&lt;V&gt; for T where V: MultiLane&lt;T&gt;,",id:"implv-t-vzipv-for-t-where-v-multilanet",children:[]}]}],n={toc:i};function h({components:t,...r}){return Object(a.b)("wrapper",Object(o.a)({},n,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"x3A;:version::Version,"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-rs"},"pub struct Version(_);\n")),Object(a.b)("p",null,"Expand description"),Object(a.b)("p",null,"Represents a version of the HTTP spec."),Object(a.b)("h2",{id:"implementations"},"Implementations"),Object(a.b)("h3",{id:"impl-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#28-43",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-const-http_09-struct-taurihttpversionversiongoto-source-code"},"pub const ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.HTTP_09"},Object(a.b)("strong",{parentName:"a"},"HTTP_09")),": ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#30",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"HTTP/0.9")),Object(a.b)("h4",{id:"pub-const-http_10-struct-taurihttpversionversiongoto-source-code"},"pub const ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.HTTP_10"},Object(a.b)("strong",{parentName:"a"},"HTTP_10")),": ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#33",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"HTTP/1.0")),Object(a.b)("h4",{id:"pub-const-http_11-struct-taurihttpversionversiongoto-source-code"},"pub const ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.HTTP_11"},Object(a.b)("strong",{parentName:"a"},"HTTP_11")),": ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#36",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"HTTP/1.1")),Object(a.b)("h4",{id:"pub-const-http_2-struct-taurihttpversionversiongoto-source-code"},"pub const ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.HTTP_2"},Object(a.b)("strong",{parentName:"a"},"HTTP_2")),": ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#39",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"HTTP/2.0")),Object(a.b)("h4",{id:"pub-const-http_3-struct-taurihttpversionversiongoto-source-code"},"pub const ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#associatedconstant.HTTP_3"},Object(a.b)("strong",{parentName:"a"},"HTTP_3")),": ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#42",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"HTTP/3.0")),Object(a.b)("h2",{id:"trait-implementations"},"Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-corecloneclone-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-cloneself---struct-taurihttpversionversiongoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"clone"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Returns a copy of the value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#tymethod.clone"},"Read more")),Object(a.b)("h4",{id:"fn-clone_frommut-self-source-self100goto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"clone_from"),"(&mut self, source: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Self)1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/clone.rs.html#130",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs copy-assignment from ",Object(a.b)("inlineCode",{parentName:"p"},"source"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html#method.clone_from"},"Read more")),Object(a.b)("h3",{id:"impl-trait-corefmtdebug-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html",title:"trait core::fmt::Debug"},"Debug")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#62-75",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fmtself-f-mut-struct-corefmtformatter_---enum-coreresultresult-struct-corefmterrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"fmt"),"(&self, f: &mut ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Formatter.html",title:"struct core::fmt::Formatter"},"Formatter"),"<","'","_",">) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.unit.html"},"()"),", ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/fmt/struct.Error.html",title:"struct core::fmt::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#63",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Formats the value using the given formatter. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/fmt/trait.Debug.html#tymethod.fmt"},"Read more")),Object(a.b)("h3",{id:"impl-trait-coredefaultdefault-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html",title:"trait core::default::Default"},"Default")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#55-60",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-default---struct-taurihttpversionversiongoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"default"),"() -> ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#57",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Returns the \u201cdefault value\u201d for a type. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/default/trait.Default.html#tymethod.default"},"Read more")),Object(a.b)("h3",{id:"impl-trait-corehashhash-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html",title:"trait core::hash::Hash"},"Hash")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-hash__hself-state-mut__h-where-__h-trait-corehashhashergoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"hash"),"<","_","_","H>(&self, state: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"_","_","H) where ","_","_","H: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),",",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Feeds this value into the given ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(a.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#tymethod.hash"},"Read more")),Object(a.b)("h4",{id:"fn-hash_slicehdata-self-state-muth-where-h-trait-corehashhasher130goto-source-code"},"fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"hash_slice"),"<","H>(data: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.slice.html"},"&","[","Self","]"),", state: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"H) where H: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"trait core::hash::Hasher"},"Hasher"),",1.3.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/hash/mod.rs.html#211-213",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Feeds a slice of this type into the given ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hasher.html",title:"Hasher"},Object(a.b)("inlineCode",{parentName:"a"},"Hasher")),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/hash/trait.Hash.html#method.hash_slice"},"Read more")),Object(a.b)("h3",{id:"impl-trait-corecmpord-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html",title:"trait core::cmp::Ord"},"Ord")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-cmpself-other-struct-taurihttpversionversion---enum-corecmporderinggoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#tymethod.cmp"},"cmp"),"(&self, other: &",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),") -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method returns an ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"Ordering"},Object(a.b)("inlineCode",{parentName:"a"},"Ordering"))," between ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#tymethod.cmp"},"Read more")),Object(a.b)("h4",{id:"must_usefn-maxself-other-self---self1210goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#method.max"},"max"),"(self, other: Self) -> Self1.21.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#738-740",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Compares and returns the maximum of two values. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#method.max"},"Read more")),Object(a.b)("h4",{id:"must_usefn-minself-other-self---self1210goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#method.min"},"min"),"(self, other: Self) -> Self1.21.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#758-760",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Compares and returns the minimum of two values. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#method.min"},"Read more")),Object(a.b)("h4",{id:"must_usefn-clampself-min-self-max-self---self1500goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#method.clamp"},"clamp"),"(self, min: Self, max: Self) -> Self1.50.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#783-785",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Restrict a value to a certain interval. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Ord.html#method.clamp"},"Read more")),Object(a.b)("h3",{id:"impl-trait-corecmppartialeqstruct-taurihttpversionversion-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html",title:"trait core::cmp::PartialEq"},"PartialEq"),"<",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),"> for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-eqself-other-struct-taurihttpversionversion---boolgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"eq"),"(&self, other: &",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),") -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method tests for ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other")," values to be equal, and is used by ",Object(a.b)("inlineCode",{parentName:"p"},"=="),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#tymethod.eq"},"Read more")),Object(a.b)("h4",{id:"pub-fn-neself-other-struct-taurihttpversionversion---boolgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialEq.html#method.ne"},"ne"),"(&self, other: &",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),") -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method tests for ",Object(a.b)("inlineCode",{parentName:"p"},"!="),"."),Object(a.b)("h3",{id:"impl-trait-corecmppartialordstruct-taurihttpversionversion-for-struct-taurihttpversionversiongoto-source-code"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html",title:"trait core::cmp::PartialOrd"},"PartialOrd"),"<",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),"> for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),Object(a.b)("a",{parentName:"h3",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-partial_cmpself-other-struct-taurihttpversionversion---enum-coreoptionoptionenum-corecmporderinggoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp"},"partial_cmp"),"(&self, other: &",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version"),") -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/option/enum.Option.html",title:"enum core::option::Option"},"Option"),"<",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/enum.Ordering.html",title:"enum core::cmp::Ordering"},"Ordering"),">",Object(a.b)("a",{parentName:"h4",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method returns an ordering between ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other")," values if one exists. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp"},"Read more")),Object(a.b)("h4",{id:"must_usefn-ltself-other-rhs---bool100goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.lt"},"lt"),"(&self, other: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#978",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method tests less than (for ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other"),") and is used by the ",Object(a.b)("inlineCode",{parentName:"p"},"<")," operator. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.lt"},"Read more")),Object(a.b)("h4",{id:"must_usefn-leself-other-rhs---bool100goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.le"},"le"),"(&self, other: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#997",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method tests less than or equal to (for ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other"),") and is used by the ",Object(a.b)("inlineCode",{parentName:"p"},"<=")," operator. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.le"},"Read more")),Object(a.b)("h4",{id:"must_usefn-gtself-other-rhs---bool100goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.gt"},"gt"),"(&self, other: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#1019",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method tests greater than (for ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other"),") and is used by the ",Object(a.b)("inlineCode",{parentName:"p"},">")," operator. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.gt"},"Read more")),Object(a.b)("h4",{id:"must_usefn-geself-other-rhs---bool100goto-source-code"},"#","[","must_use]fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.ge"},"ge"),"(&self, other: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"Rhs) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.bool.html"},"bool"),"1.0.0",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/cmp.rs.html#1038",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"This method tests greater than or equal to (for ",Object(a.b)("inlineCode",{parentName:"p"},"self")," and ",Object(a.b)("inlineCode",{parentName:"p"},"other"),") and is used by the ",Object(a.b)("inlineCode",{parentName:"p"},">=")," operator. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.PartialOrd.html#method.ge"},"Read more")),Object(a.b)("h3",{id:"impl-trait-coremarkercopy-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Copy.html",title:"trait core::marker::Copy"},"Copy")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h3",{id:"impl-trait-corecmpeq-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/cmp/trait.Eq.html",title:"trait core::cmp::Eq"},"Eq")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h3",{id:"impl-trait-coremarkerstructuraleq-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralEq.html",title:"trait core::marker::StructuralEq"},"StructuralEq")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h3",{id:"impl-trait-coremarkerstructuralpartialeq-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.StructuralPartialEq.html",title:"trait core::marker::StructuralPartialEq"},"StructuralPartialEq")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://docs.rs/http/0.2.4/src/http/version.rs.html#25",title:"goto source code"},"[","src","]")),Object(a.b)("h2",{id:"auto-trait-implementations"},"Auto Trait Implementations"),Object(a.b)("h3",{id:"impl-trait-stdpanicrefunwindsafe-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.RefUnwindSafe.html",title:"trait std::panic::RefUnwindSafe"},"RefUnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("h3",{id:"impl-trait-coremarkersend-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Send.html",title:"trait core::marker::Send"},"Send")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("h3",{id:"impl-trait-coremarkersync-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sync.html",title:"trait core::marker::Sync"},"Sync")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("h3",{id:"impl-trait-coremarkerunpin-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Unpin.html",title:"trait core::marker::Unpin"},"Unpin")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("h3",{id:"impl-trait-stdpanicunwindsafe-for-struct-taurihttpversionversion"},"impl ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/std/panic/trait.UnwindSafe.html",title:"trait std::panic::UnwindSafe"},"UnwindSafe")," for ",Object(a.b)("a",{parentName:"h3",href:"/docs/api/rust/tauri/struct.Version",title:"struct tauri::http::version::Version"},"Version")),Object(a.b)("h2",{id:"blanket-implementations"},"Blanket Implementations"),Object(a.b)("h3",{id:"implt-trait-coreanyany-for-t-where-t-static--trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html",title:"trait core::any::Any"},"Any")," for T where T: 'static + ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#131-135",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-type_idself---struct-coreanytypeidgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"type_id"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/any/struct.TypeId.html",title:"struct core::any::TypeId"},"TypeId"),Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/any.rs.html#132",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Gets the ",Object(a.b)("inlineCode",{parentName:"p"},"TypeId")," of ",Object(a.b)("inlineCode",{parentName:"p"},"self"),". ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/any/trait.Any.html#tymethod.type_id"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html",title:"trait core::borrow::Borrow"},"Borrow"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#208-213",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrowself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"borrow"),"(&self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#210",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Immutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.Borrow.html#tymethod.borrow"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreborrowborrowmutt-for-t-where-t-trait-coremarkersizedgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html",title:"trait core::borrow::BorrowMut"},"BorrowMut"),"<","T> for T where T: ?",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/marker/trait.Sized.html",title:"trait core::marker::Sized"},"Sized"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#216-220",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-borrow_mutmut-self---muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"borrow_mut"),"(&mut self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/borrow.rs.html#217",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Mutably borrows from an owned value. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut"},"Read more")),Object(a.b)("h3",{id:"implt-trait-coreconvertfromt-for-tgoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T> for T",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#544-548",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-fromt-t---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html#tymethod.from"},"from"),"(t: T) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#545",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconvertintou-for-t-where-u-trait-coreconvertfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.From.html",title:"trait core::convert::From"},"From"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#533-540",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"pub-fn-intoself---ugoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html#tymethod.into"},"into"),"(self) -> U",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#537",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-trait-allocborrowtoowned-for-t-where-t-trait-corecloneclonegoto-source-code"},"impl","<","T> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html",title:"trait alloc::borrow::ToOwned"},"ToOwned")," for T where T: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/clone/trait.Clone.html",title:"trait core::clone::Clone"},"Clone"),",",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#84-96",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-owned--t"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#associatedtype.Owned"},"Owned")," = T"),Object(a.b)("p",null,"The resulting type after obtaining ownership."),Object(a.b)("h4",{id:"pub-fn-to_ownedself---tgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"to_owned"),"(&self) -> T",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#89",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Creates owned data from borrowed data, usually by cloning. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#tymethod.to_owned"},"Read more")),Object(a.b)("h4",{id:"pub-fn-clone_intoself-target-muttgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"clone_into"),"(&self, target: ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/std/primitive.reference.html"},"&mut"),"T)",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/alloc/borrow.rs.html#93",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"\ud83d\udd2c This is a nightly-only experimental API. (",Object(a.b)("inlineCode",{parentName:"p"},"toowned_clone_into"),")"),Object(a.b)("p",null,"recently added"),Object(a.b)("p",null,"Uses borrowed data to replace owned data, usually by cloning. ",Object(a.b)("a",{parentName:"p",href:"https://doc.rust-lang.org/1.54.0/alloc/borrow/trait.ToOwned.html#method.clone_into"},"Read more")),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryfromu-for-t-where-u-trait-coreconvertintotgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.Into.html",title:"trait core::convert::Into"},"Into"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#581-590",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--enum-coreconvertinfallible"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error"},"Error")," = ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/enum.Infallible.html",title:"enum core::convert::Infallible"},"Infallible")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_fromvalue-u---enum-coreresultresultt-t-as-trait-coreconverttryfromutype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#tymethod.try_from"},"try_from"),"(value: U) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","T, ","<","T as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","U>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#587",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implt-u-trait-coreconverttryintou-for-t-where-u-trait-coreconverttryfromtgoto-source-code"},"impl","<","T, U> ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html",title:"trait core::convert::TryInto"},"TryInto"),"<","U> for T where U: ",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>,",Object(a.b)("a",{parentName:"h3",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#567-576",title:"goto source code"},"[","src","]")),Object(a.b)("h4",{id:"type-error--u-as-trait-coreconverttryfromttype-coreconverttryfromerror"},"type ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#associatedtype.Error"},"Error")," = ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error")),Object(a.b)("p",null,"The type returned in the event of a conversion error."),Object(a.b)("h4",{id:"pub-fn-try_intoself---enum-coreresultresultu-u-as-trait-coreconverttryfromttype-coreconverttryfromerrorgoto-source-code"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryInto.html#tymethod.try_into"},"try_into"),"(self) -> ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/result/enum.Result.html",title:"enum core::result::Result"},"Result"),"<","U, ","<","U as ",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html",title:"trait core::convert::TryFrom"},"TryFrom"),"<","T>>::",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/core/convert/trait.TryFrom.html#associatedtype.Error",title:"type core::convert::TryFrom::Error"},"Error"),">",Object(a.b)("a",{parentName:"h4",href:"https://doc.rust-lang.org/1.54.0/src/core/convert/mod.rs.html#573",title:"goto source code"},"[","src","]")),Object(a.b)("p",null,"Performs the conversion."),Object(a.b)("h3",{id:"implv-t-vzipv-for-t-where-v-multilanet"},"impl","<","V, T> VZip","<","V> for T where V: MultiLane","<","T>,"),Object(a.b)("h4",{id:"pub-fn-vzipself---v"},"pub fn ",Object(a.b)("a",{parentName:"h4",href:"/docs/api/rust/tauri/about:blank#tymethod.vzip"},"vzip"),"(self) -> V"))}h.isMDXComponent=!0},454:function(t,r,e){"use strict";e.d(r,"a",(function(){return p})),e.d(r,"b",(function(){return b}));var o=e(0),a=e.n(o);function c(t,r,e){return r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function s(t,r){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),e.push.apply(e,o)}return e}function i(t){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?s(Object(e),!0).forEach((function(r){c(t,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):s(Object(e)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(e,r))}))}return t}function n(t,r){if(null==t)return{};var e,o,a=function(t,r){if(null==t)return{};var e,o,a={},c=Object.keys(t);for(o=0;o<c.length;o++)e=c[o],r.indexOf(e)>=0||(a[e]=t[e]);return a}(t,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(o=0;o<c.length;o++)e=c[o],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(a[e]=t[e])}return a}var h=a.a.createContext({}),l=function(t){var r=a.a.useContext(h),e=r;return t&&(e="function"==typeof t?t(r):i(i({},r),t)),e},p=function(t){var r=l(t.components);return a.a.createElement(h.Provider,{value:r},t.children)},u={inlineCode:"code",wrapper:function(t){var r=t.children;return a.a.createElement(a.a.Fragment,{},r)}},m=a.a.forwardRef((function(t,r){var e=t.components,o=t.mdxType,c=t.originalType,s=t.parentName,h=n(t,["components","mdxType","originalType","parentName"]),p=l(e),m=o,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||c;return e?a.a.createElement(b,i(i({ref:r},h),{},{components:e})):a.a.createElement(b,i({ref:r},h))}));function b(t,r){var e=arguments,o=r&&r.mdxType;if("string"==typeof t||o){var c=e.length,s=new Array(c);s[0]=m;var i={};for(var n in r)hasOwnProperty.call(r,n)&&(i[n]=r[n]);i.originalType=t,i.mdxType="string"==typeof t?t:o,s[1]=i;for(var h=2;h<c;h++)s[h]=e[h];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,e)}m.displayName="MDXCreateElement"}}]);